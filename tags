!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABORT_RATE_CHANGE	clk.h	44;"	d
ACPI_ID_LEN	mod_devicetable.h	189;"	d
ADDRS_DEMOD	v4l2-common.h	/^	ADDRS_DEMOD,$/;"	e	enum:v4l2_i2c_tuner_type
ADDRS_RADIO	v4l2-common.h	/^	ADDRS_RADIO,$/;"	e	enum:v4l2_i2c_tuner_type
ADDRS_TV	v4l2-common.h	/^	ADDRS_TV,$/;"	e	enum:v4l2_i2c_tuner_type
ADDRS_TV_WITH_DEMOD	v4l2-common.h	/^	ADDRS_TV_WITH_DEMOD,$/;"	e	enum:v4l2_i2c_tuner_type
ADDR_UNSET	tuner.h	25;"	d
ALIGN	kernel.h	58;"	d
ALIGN_DOWN	kernel.h	59;"	d
APP_data	videodev2.h	/^	char APP_data[60];      \/* Data in the JPEG APPn segment. *\/$/;"	m	struct:v4l2_jpegcompression
APP_len	videodev2.h	/^	int  APP_len;           \/* Length of data in JPEG APPn segment *\/$/;"	m	struct:v4l2_jpegcompression
APPn	videodev2.h	/^	int  APPn;              \/* Number of APP segment to be written,$/;"	m	struct:v4l2_jpegcompression
APR_MODULE_PREFIX	mod_devicetable.h	475;"	d
APR_NAME_SIZE	mod_devicetable.h	474;"	d
AP_DEVICE_ID_MATCH_CARD_TYPE	mod_devicetable.h	179;"	d
AP_DEVICE_ID_MATCH_QUEUE_TYPE	mod_devicetable.h	180;"	d
ARRAY_SIZE	kernel.h	72;"	d
ARRAY_SIZE	relocs.h	32;"	d
ATTRIBUTE_GROUPS	sysfs1.h	152;"	d
BASE_VIDIOC_PRIVATE	videodev2.h	2444;"	d
BCMA_ANY_CLASS	mod_devicetable.h	406;"	d
BCMA_ANY_ID	mod_devicetable.h	404;"	d
BCMA_ANY_MANUF	mod_devicetable.h	403;"	d
BCMA_ANY_REV	mod_devicetable.h	405;"	d
BCMA_CORE	mod_devicetable.h	400;"	d
BGPIOF_BIG_ENDIAN	driver.h	432;"	d
BGPIOF_BIG_ENDIAN_BYTE_ORDER	driver.h	435;"	d
BGPIOF_NO_OUTPUT	driver.h	437;"	d
BGPIOF_READ_OUTPUT_REG_SET	driver.h	436;"	d
BGPIOF_UNREADABLE_REG_DIR	driver.h	434;"	d
BGPIOF_UNREADABLE_REG_SET	driver.h	433;"	d
BIN_ATTR	sysfs1.h	204;"	d
BIN_ATTR_RO	sysfs1.h	208;"	d
BIN_ATTR_RW	sysfs1.h	211;"	d
BUS_ATTR	device.h	52;"	d
BUS_ATTR_RO	device.h	56;"	d
BUS_ATTR_RW	device.h	54;"	d
BUS_NOTIFY_ADD_DEVICE	device.h	198;"	d
BUS_NOTIFY_BIND_DRIVER	device.h	201;"	d
BUS_NOTIFY_BOUND_DRIVER	device.h	203;"	d
BUS_NOTIFY_DEL_DEVICE	device.h	199;"	d
BUS_NOTIFY_DRIVER_NOT_BOUND	device.h	208;"	d
BUS_NOTIFY_REMOVED_DEVICE	device.h	200;"	d
BUS_NOTIFY_UNBIND_DRIVER	device.h	204;"	d
BUS_NOTIFY_UNBOUND_DRIVER	device.h	206;"	d
CALL	videobuf-core.c	52;"	d	file:
CALLPTR	videobuf-core.c	54;"	d	file:
CCW_DEVICE_ID_MATCH_CU_MODEL	mod_devicetable.h	168;"	d
CCW_DEVICE_ID_MATCH_CU_TYPE	mod_devicetable.h	167;"	d
CCW_DEVICE_ID_MATCH_DEVICE_MODEL	mod_devicetable.h	170;"	d
CCW_DEVICE_ID_MATCH_DEVICE_TYPE	mod_devicetable.h	169;"	d
CEC_CAP_DEFAULTS	cec.h	22;"	d
CEC_FREE_TIME_TO_USEC	cec.h	106;"	d
CEC_MAX_MSG_RX_QUEUE_SZ	cec.h	137;"	d
CEC_MAX_MSG_TX_QUEUE_SZ	cec.h	145;"	d
CEC_NUM_CORE_EVENTS	cec.h	80;"	d
CEC_NUM_EVENTS	cec.h	81;"	d
CEC_SIGNAL_FREE_TIME_NEW_INITIATOR	cec.h	102;"	d
CEC_SIGNAL_FREE_TIME_NEXT_XFER	cec.h	103;"	d
CEC_SIGNAL_FREE_TIME_RETRY	cec.h	101;"	d
CIF_HEIGHT	v4l2-image-sizes.h	14;"	d
CIF_WIDTH	v4l2-image-sizes.h	13;"	d
CLASS_ATTR_RO	device.h	479;"	d
CLASS_ATTR_RW	device.h	477;"	d
CLASS_ATTR_STRING	device.h	512;"	d
CLASS_ATTR_WO	device.h	481;"	d
CLEAR_AFTER_FIELD	v4l2-ioctl.c	38;"	d	file:
CLKDEV_INIT	clkdev.h	29;"	d
CLK_DIVIDER_ALLOW_ZERO	clk-provider.h	434;"	d
CLK_DIVIDER_HIWORD_MASK	clk-provider.h	435;"	d
CLK_DIVIDER_MAX_AT_ZERO	clk-provider.h	438;"	d
CLK_DIVIDER_ONE_BASED	clk-provider.h	432;"	d
CLK_DIVIDER_POWER_OF_TWO	clk-provider.h	433;"	d
CLK_DIVIDER_READ_ONLY	clk-provider.h	437;"	d
CLK_DIVIDER_ROUND_CLOSEST	clk-provider.h	436;"	d
CLK_DUTY_CYCLE_PARENT	clk-provider.h	42;"	d
CLK_FIXED_FACTOR	clk-provider.h	891;"	d
CLK_GATE_HIWORD_MASK	clk-provider.h	362;"	d
CLK_GATE_SET_TO_DISABLE	clk-provider.h	361;"	d
CLK_GET_ACCURACY_NOCACHE	clk-provider.h	35;"	d
CLK_GET_RATE_NOCACHE	clk-provider.h	33;"	d
CLK_HW_INIT	clk-provider.h	864;"	d
CLK_HW_INIT_NO_PARENT	clk-provider.h	882;"	d
CLK_HW_INIT_PARENTS	clk-provider.h	873;"	d
CLK_IGNORE_UNUSED	clk-provider.h	30;"	d
CLK_IS_BASIC	clk-provider.h	32;"	d
CLK_IS_CRITICAL	clk-provider.h	38;"	d
CLK_MULTIPLIER_ROUND_CLOSEST	clk-provider.h	660;"	d
CLK_MULTIPLIER_ZERO_BYPASS	clk-provider.h	659;"	d
CLK_MUX_HIWORD_MASK	clk-provider.h	517;"	d
CLK_MUX_INDEX_BIT	clk-provider.h	516;"	d
CLK_MUX_INDEX_ONE	clk-provider.h	515;"	d
CLK_MUX_READ_ONLY	clk-provider.h	518;"	d
CLK_MUX_ROUND_CLOSEST	clk-provider.h	519;"	d
CLK_OF_DECLARE	clk-provider.h	850;"	d
CLK_OF_DECLARE_DRIVER	clk-provider.h	856;"	d
CLK_OPS_PARENT_ENABLE	clk-provider.h	40;"	d
CLK_RECALC_NEW_RATES	clk-provider.h	36;"	d
CLK_SET_PARENT_GATE	clk-provider.h	28;"	d
CLK_SET_RATE_GATE	clk-provider.h	27;"	d
CLK_SET_RATE_NO_REPARENT	clk-provider.h	34;"	d
CLK_SET_RATE_PARENT	clk-provider.h	29;"	d
CLK_SET_RATE_UNGATE	clk-provider.h	37;"	d
COM_data	videodev2.h	/^	char COM_data[60];      \/* Data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
COM_len	videodev2.h	/^	int  COM_len;           \/* Length of data in JPEG COM segment *\/$/;"	m	struct:v4l2_jpegcompression
CONCATENATE	kernel.h	987;"	d
COUNT_ARGS	kernel.h	984;"	d
CREATE_TRACE_POINTS	i2c-core-base.c	52;"	d	file:
CREATE_TRACE_POINTS	i2c-core-smbus.c	23;"	d	file:
CREATE_TRACE_POINTS	v4l2-trace.c	6;"	d	file:
CVT_C	v4l2-dv-timings.c	395;"	d	file:
CVT_CELL_GRAN	v4l2-dv-timings.c	393;"	d	file:
CVT_C_PRIME	v4l2-dv-timings.c	398;"	d	file:
CVT_HSYNC_PERCENT	v4l2-dv-timings.c	390;"	d	file:
CVT_J	v4l2-dv-timings.c	397;"	d	file:
CVT_K	v4l2-dv-timings.c	396;"	d	file:
CVT_M	v4l2-dv-timings.c	394;"	d	file:
CVT_MIN_VSYNC_BP	v4l2-dv-timings.c	389;"	d	file:
CVT_MIN_V_BPORCH	v4l2-dv-timings.c	387;"	d	file:
CVT_MIN_V_PORCH_RND	v4l2-dv-timings.c	388;"	d	file:
CVT_M_PRIME	v4l2-dv-timings.c	399;"	d	file:
CVT_PXL_CLK_GRAN	v4l2-dv-timings.c	383;"	d	file:
CVT_PXL_CLK_GRAN_RB_V2	v4l2-dv-timings.c	384;"	d	file:
CVT_RB_H_BLANK	v4l2-dv-timings.c	406;"	d	file:
CVT_RB_H_SYNC	v4l2-dv-timings.c	405;"	d	file:
CVT_RB_MIN_V_BLANK	v4l2-dv-timings.c	404;"	d	file:
CVT_RB_MIN_V_BPORCH	v4l2-dv-timings.c	402;"	d	file:
CVT_RB_MIN_V_FPORCH	v4l2-dv-timings.c	409;"	d	file:
CVT_RB_V2_H_BLANK	v4l2-dv-timings.c	408;"	d	file:
CVT_RB_V2_MIN_V_FPORCH	v4l2-dv-timings.c	410;"	d	file:
CVT_RB_V_BPORCH	v4l2-dv-timings.c	411;"	d	file:
CVT_RB_V_FPORCH	v4l2-dv-timings.c	403;"	d	file:
DEFINE_IR_RAW_EVENT	rc-core.h	320;"	d
DEFINE_V4L_STUB_FUNC	v4l2-ioctl.c	2543;"	d	file:
DEMOD_NUM_PADS	v4l2-mc.h	/^	DEMOD_NUM_PADS$/;"	e	enum:demod_pad_index
DEMOD_PAD_AUDIO_OUT	v4l2-mc.h	/^	DEMOD_PAD_AUDIO_OUT,$/;"	e	enum:demod_pad_index
DEMOD_PAD_IF_INPUT	v4l2-mc.h	/^	DEMOD_PAD_IF_INPUT,$/;"	e	enum:demod_pad_index
DEMOD_PAD_VBI_OUT	v4l2-mc.h	/^	DEMOD_PAD_VBI_OUT,$/;"	e	enum:demod_pad_index
DEMOD_PAD_VID_OUT	v4l2-mc.h	/^	DEMOD_PAD_VID_OUT,$/;"	e	enum:demod_pad_index
DEVICE_ATTR	device.h	590;"	d
DEVICE_ATTR_IGNORE_LOCKDEP	device.h	610;"	d
DEVICE_ATTR_PREALLOC	device.h	592;"	d
DEVICE_ATTR_RO	device.h	597;"	d
DEVICE_ATTR_RW	device.h	595;"	d
DEVICE_ATTR_WO	device.h	599;"	d
DEVICE_BOOL_ATTR	device.h	607;"	d
DEVICE_INT_ATTR	device.h	604;"	d
DEVICE_ULONG_ATTR	device.h	601;"	d
DEV_DMA_COHERENT	property.h	/^	DEV_DMA_COHERENT,$/;"	e	enum:dev_dma_attr
DEV_DMA_NON_COHERENT	property.h	/^	DEV_DMA_NON_COHERENT,$/;"	e	enum:dev_dma_attr
DEV_DMA_NOT_SUPPORTED	property.h	/^	DEV_DMA_NOT_SUPPORTED,$/;"	e	enum:dev_dma_attr
DEV_PROP_MAX	property.h	/^	DEV_PROP_MAX,$/;"	e	enum:dev_prop_type
DEV_PROP_STRING	property.h	/^	DEV_PROP_STRING,$/;"	e	enum:dev_prop_type
DEV_PROP_U16	property.h	/^	DEV_PROP_U16,$/;"	e	enum:dev_prop_type
DEV_PROP_U32	property.h	/^	DEV_PROP_U32,$/;"	e	enum:dev_prop_type
DEV_PROP_U64	property.h	/^	DEV_PROP_U64,$/;"	e	enum:dev_prop_type
DEV_PROP_U8	property.h	/^	DEV_PROP_U8,$/;"	e	enum:dev_prop_type
DIV_ROUND_CLOSEST	kernel.h	167;"	d
DIV_ROUND_CLOSEST_ULL	kernel.h	182;"	d
DIV_ROUND_DOWN_ULL	kernel.h	118;"	d
DIV_ROUND_UP	kernel.h	116;"	d
DIV_ROUND_UP_SECTOR_T	kernel.h	125;"	d
DIV_ROUND_UP_SECTOR_T	kernel.h	127;"	d
DIV_ROUND_UP_ULL	kernel.h	121;"	d
DL_DEV_DRIVER_BOUND	device.h	/^	DL_DEV_DRIVER_BOUND,$/;"	e	enum:dl_dev_state
DL_DEV_NO_DRIVER	device.h	/^	DL_DEV_NO_DRIVER = 0,$/;"	e	enum:dl_dev_state
DL_DEV_PROBING	device.h	/^	DL_DEV_PROBING,$/;"	e	enum:dl_dev_state
DL_DEV_UNBINDING	device.h	/^	DL_DEV_UNBINDING,$/;"	e	enum:dl_dev_state
DL_FLAG_AUTOREMOVE_CONSUMER	device.h	828;"	d
DL_FLAG_AUTOREMOVE_SUPPLIER	device.h	831;"	d
DL_FLAG_PM_RUNTIME	device.h	829;"	d
DL_FLAG_RPM_ACTIVE	device.h	830;"	d
DL_FLAG_STATELESS	device.h	827;"	d
DL_STATE_ACTIVE	device.h	/^	DL_STATE_ACTIVE,$/;"	e	enum:device_link_state
DL_STATE_AVAILABLE	device.h	/^	DL_STATE_AVAILABLE,$/;"	e	enum:device_link_state
DL_STATE_CONSUMER_PROBE	device.h	/^	DL_STATE_CONSUMER_PROBE,$/;"	e	enum:device_link_state
DL_STATE_DORMANT	device.h	/^	DL_STATE_DORMANT = 0,$/;"	e	enum:device_link_state
DL_STATE_NONE	device.h	/^	DL_STATE_NONE = -1,$/;"	e	enum:device_link_state
DL_STATE_SUPPLIER_UNBIND	device.h	/^	DL_STATE_SUPPLIER_UNBIND,$/;"	e	enum:device_link_state
DMI_BIOS_DATE	mod_devicetable.h	/^	DMI_BIOS_DATE,$/;"	e	enum:dmi_field
DMI_BIOS_VENDOR	mod_devicetable.h	/^	DMI_BIOS_VENDOR,$/;"	e	enum:dmi_field
DMI_BIOS_VERSION	mod_devicetable.h	/^	DMI_BIOS_VERSION,$/;"	e	enum:dmi_field
DMI_BOARD_ASSET_TAG	mod_devicetable.h	/^	DMI_BOARD_ASSET_TAG,$/;"	e	enum:dmi_field
DMI_BOARD_NAME	mod_devicetable.h	/^	DMI_BOARD_NAME,$/;"	e	enum:dmi_field
DMI_BOARD_SERIAL	mod_devicetable.h	/^	DMI_BOARD_SERIAL,$/;"	e	enum:dmi_field
DMI_BOARD_VENDOR	mod_devicetable.h	/^	DMI_BOARD_VENDOR,$/;"	e	enum:dmi_field
DMI_BOARD_VERSION	mod_devicetable.h	/^	DMI_BOARD_VERSION,$/;"	e	enum:dmi_field
DMI_CHASSIS_ASSET_TAG	mod_devicetable.h	/^	DMI_CHASSIS_ASSET_TAG,$/;"	e	enum:dmi_field
DMI_CHASSIS_SERIAL	mod_devicetable.h	/^	DMI_CHASSIS_SERIAL,$/;"	e	enum:dmi_field
DMI_CHASSIS_TYPE	mod_devicetable.h	/^	DMI_CHASSIS_TYPE,$/;"	e	enum:dmi_field
DMI_CHASSIS_VENDOR	mod_devicetable.h	/^	DMI_CHASSIS_VENDOR,$/;"	e	enum:dmi_field
DMI_CHASSIS_VERSION	mod_devicetable.h	/^	DMI_CHASSIS_VERSION,$/;"	e	enum:dmi_field
DMI_EXACT_MATCH	mod_devicetable.h	541;"	d
DMI_MATCH	mod_devicetable.h	540;"	d
DMI_NONE	mod_devicetable.h	/^	DMI_NONE,$/;"	e	enum:dmi_field
DMI_OEM_STRING	mod_devicetable.h	/^	DMI_OEM_STRING,	\/* special case - will not be in dmi_ident *\/$/;"	e	enum:dmi_field
DMI_PRODUCT_FAMILY	mod_devicetable.h	/^	DMI_PRODUCT_FAMILY,$/;"	e	enum:dmi_field
DMI_PRODUCT_NAME	mod_devicetable.h	/^	DMI_PRODUCT_NAME,$/;"	e	enum:dmi_field
DMI_PRODUCT_SERIAL	mod_devicetable.h	/^	DMI_PRODUCT_SERIAL,$/;"	e	enum:dmi_field
DMI_PRODUCT_SKU	mod_devicetable.h	/^	DMI_PRODUCT_SKU,$/;"	e	enum:dmi_field
DMI_PRODUCT_UUID	mod_devicetable.h	/^	DMI_PRODUCT_UUID,$/;"	e	enum:dmi_field
DMI_PRODUCT_VERSION	mod_devicetable.h	/^	DMI_PRODUCT_VERSION,$/;"	e	enum:dmi_field
DMI_STRING_MAX	mod_devicetable.h	/^	DMI_STRING_MAX,$/;"	e	enum:dmi_field
DMI_SYS_VENDOR	mod_devicetable.h	/^	DMI_SYS_VENDOR,$/;"	e	enum:dmi_field
DMXDEV_CAP_DUPLEX	dmxdev.h	186;"	d
DMXDEV_STATE_ALLOCATED	dmxdev.h	/^	DMXDEV_STATE_ALLOCATED,$/;"	e	enum:dmxdev_state
DMXDEV_STATE_DONE	dmxdev.h	/^	DMXDEV_STATE_DONE,$/;"	e	enum:dmxdev_state
DMXDEV_STATE_FREE	dmxdev.h	/^	DMXDEV_STATE_FREE,$/;"	e	enum:dmxdev_state
DMXDEV_STATE_GO	dmxdev.h	/^	DMXDEV_STATE_GO,$/;"	e	enum:dmxdev_state
DMXDEV_STATE_SET	dmxdev.h	/^	DMXDEV_STATE_SET,$/;"	e	enum:dmxdev_state
DMXDEV_STATE_TIMEDOUT	dmxdev.h	/^	DMXDEV_STATE_TIMEDOUT$/;"	e	enum:dmxdev_state
DMXDEV_TYPE_NONE	dmxdev.h	/^	DMXDEV_TYPE_NONE,$/;"	e	enum:dmxdev_type
DMXDEV_TYPE_PES	dmxdev.h	/^	DMXDEV_TYPE_PES,$/;"	e	enum:dmxdev_type
DMXDEV_TYPE_SEC	dmxdev.h	/^	DMXDEV_TYPE_SEC,$/;"	e	enum:dmxdev_type
DMX_FE_ENTRY	demux.h	367;"	d
DMX_FRONTEND_0	demux.h	/^	DMX_FRONTEND_0,$/;"	e	enum:dmx_frontend_source
DMX_MAX_FILTER_SIZE	demux.h	44;"	d
DMX_MAX_PID	dvb_demux.h	226;"	d
DMX_MAX_SECFEED_SIZE	demux.h	56;"	d
DMX_MAX_SECTION_SIZE	demux.h	53;"	d
DMX_MEMORY_BASED_FILTERING	demux.h	/^	DMX_MEMORY_BASED_FILTERING = 8,$/;"	e	enum:dmx_demux_caps
DMX_MEMORY_FE	demux.h	/^	DMX_MEMORY_FE,$/;"	e	enum:dmx_frontend_source
DMX_SECTION_FILTERING	demux.h	/^	DMX_SECTION_FILTERING = 4,$/;"	e	enum:dmx_demux_caps
DMX_STATE_ALLOCATED	dvb_demux.h	/^	DMX_STATE_ALLOCATED,$/;"	e	enum:dvb_dmx_state
DMX_STATE_FREE	dvb_demux.h	/^	DMX_STATE_FREE,$/;"	e	enum:dvb_dmx_state
DMX_STATE_GO	dvb_demux.h	/^	DMX_STATE_GO,$/;"	e	enum:dvb_dmx_state
DMX_STATE_READY	dvb_demux.h	/^	DMX_STATE_READY,$/;"	e	enum:dvb_dmx_state
DMX_TS_FILTERING	demux.h	/^	DMX_TS_FILTERING = 1,$/;"	e	enum:dmx_demux_caps
DMX_TYPE_SEC	dvb_demux.h	/^	DMX_TYPE_SEC,$/;"	e	enum:dvb_dmx_filter_type
DMX_TYPE_TS	dvb_demux.h	/^	DMX_TYPE_TS,$/;"	e	enum:dvb_dmx_filter_type
DPM_FLAG_LEAVE_SUSPENDED	pm.h	583;"	d
DPM_FLAG_NEVER_SKIP	pm.h	580;"	d
DPM_FLAG_SMART_PREPARE	pm.h	581;"	d
DPM_FLAG_SMART_SUSPEND	pm.h	582;"	d
DPM_ORDER_DEV_AFTER_PARENT	pm.h	/^	DPM_ORDER_DEV_AFTER_PARENT,$/;"	e	enum:dpm_order
DPM_ORDER_DEV_LAST	pm.h	/^	DPM_ORDER_DEV_LAST,$/;"	e	enum:dpm_order
DPM_ORDER_NONE	pm.h	/^	DPM_ORDER_NONE,$/;"	e	enum:dpm_order
DPM_ORDER_PARENT_BEFORE_DEV	pm.h	/^	DPM_ORDER_PARENT_BEFORE_DEV,$/;"	e	enum:dpm_order
DRIVER_ATTR_IGNORE_LOCKDEP	bus.c	34;"	d	file:
DRIVER_ATTR_RO	device.h	323;"	d
DRIVER_ATTR_RW	device.h	321;"	d
DRIVER_ATTR_WO	device.h	325;"	d
DST_QUEUE_OFF_BASE	v4l2-mem2mem.c	53;"	d	file:
DUMP_ALL	kernel.h	/^	DUMP_ALL,$/;"	e	enum:ftrace_dump_mode
DUMP_NONE	kernel.h	/^	DUMP_NONE,$/;"	e	enum:ftrace_dump_mode
DUMP_ORIG	kernel.h	/^	DUMP_ORIG,$/;"	e	enum:ftrace_dump_mode
DVBFE_ALGO_CUSTOM	dvb_frontend.h	/^	DVBFE_ALGO_CUSTOM		= (1 <<  2),$/;"	e	enum:dvbfe_algo
DVBFE_ALGO_HW	dvb_frontend.h	/^	DVBFE_ALGO_HW			= (1 <<  0),$/;"	e	enum:dvbfe_algo
DVBFE_ALGO_RECOVERY	dvb_frontend.h	/^	DVBFE_ALGO_RECOVERY		= (1 << 31)$/;"	e	enum:dvbfe_algo
DVBFE_ALGO_SEARCH_AGAIN	dvb_frontend.h	/^	DVBFE_ALGO_SEARCH_AGAIN		= (1 <<  4),$/;"	e	enum:dvbfe_search
DVBFE_ALGO_SEARCH_ASLEEP	dvb_frontend.h	/^	DVBFE_ALGO_SEARCH_ASLEEP	= (1 <<  1),$/;"	e	enum:dvbfe_search
DVBFE_ALGO_SEARCH_ERROR	dvb_frontend.h	/^	DVBFE_ALGO_SEARCH_ERROR		= (1 << 31),$/;"	e	enum:dvbfe_search
DVBFE_ALGO_SEARCH_FAILED	dvb_frontend.h	/^	DVBFE_ALGO_SEARCH_FAILED	= (1 <<  2),$/;"	e	enum:dvbfe_search
DVBFE_ALGO_SEARCH_INVALID	dvb_frontend.h	/^	DVBFE_ALGO_SEARCH_INVALID	= (1 <<  3),$/;"	e	enum:dvbfe_search
DVBFE_ALGO_SEARCH_SUCCESS	dvb_frontend.h	/^	DVBFE_ALGO_SEARCH_SUCCESS	= (1 <<  0),$/;"	e	enum:dvbfe_search
DVBFE_ALGO_SW	dvb_frontend.h	/^	DVBFE_ALGO_SW			= (1 <<  1),$/;"	e	enum:dvbfe_algo
DVB_BUF_TYPE_CAPTURE	dvb_vb2.h	/^	DVB_BUF_TYPE_CAPTURE        = 1,$/;"	e	enum:dvb_buf_type
DVB_CA_EN50221_CAMCHANGE_INSERTED	dvb_ca_en50221.h	34;"	d
DVB_CA_EN50221_CAMCHANGE_REMOVED	dvb_ca_en50221.h	33;"	d
DVB_CA_EN50221_FLAG_IRQ_CAMCHANGE	dvb_ca_en50221.h	29;"	d
DVB_CA_EN50221_FLAG_IRQ_DA	dvb_ca_en50221.h	31;"	d
DVB_CA_EN50221_FLAG_IRQ_FR	dvb_ca_en50221.h	30;"	d
DVB_CA_EN50221_POLL_CAM_CHANGED	dvb_ca_en50221.h	26;"	d
DVB_CA_EN50221_POLL_CAM_PRESENT	dvb_ca_en50221.h	25;"	d
DVB_CA_EN50221_POLL_CAM_READY	dvb_ca_en50221.h	27;"	d
DVB_DEFINE_MOD_OPT_ADAPTER_NR	dvbdev.h	70;"	d
DVB_DEMUX_MASK_MAX	dvb_demux.h	57;"	d
DVB_DEVICE_AUDIO	dvbdev.h	/^	DVB_DEVICE_AUDIO,$/;"	e	enum:dvb_device_type
DVB_DEVICE_CA	dvbdev.h	/^	DVB_DEVICE_CA,$/;"	e	enum:dvb_device_type
DVB_DEVICE_DEMUX	dvbdev.h	/^	DVB_DEVICE_DEMUX,$/;"	e	enum:dvb_device_type
DVB_DEVICE_DVR	dvbdev.h	/^	DVB_DEVICE_DVR,$/;"	e	enum:dvb_device_type
DVB_DEVICE_FRONTEND	dvbdev.h	/^	DVB_DEVICE_FRONTEND,$/;"	e	enum:dvb_device_type
DVB_DEVICE_NET	dvbdev.h	/^	DVB_DEVICE_NET,$/;"	e	enum:dvb_device_type
DVB_DEVICE_OSD	dvbdev.h	/^	DVB_DEVICE_OSD,$/;"	e	enum:dvb_device_type
DVB_DEVICE_SEC	dvbdev.h	/^	DVB_DEVICE_SEC,$/;"	e	enum:dvb_device_type
DVB_DEVICE_VIDEO	dvbdev.h	/^	DVB_DEVICE_VIDEO,$/;"	e	enum:dvb_device_type
DVB_FE_DEVICE_REMOVED	dvb_frontend.h	661;"	d
DVB_FE_DEVICE_RESUME	dvb_frontend.h	662;"	d
DVB_FE_NORMAL_EXIT	dvb_frontend.h	660;"	d
DVB_FE_NO_EXIT	dvb_frontend.h	659;"	d
DVB_FRONTEND_COMPONENT_DEMOD	dvb_frontend.h	696;"	d
DVB_FRONTEND_COMPONENT_TUNER	dvb_frontend.h	695;"	d
DVB_MAJOR	dvbdev.h	28;"	d
DVB_MAX_ADAPTERS	dvbdev.h	31;"	d
DVB_MAX_ADAPTERS	dvbdev.h	33;"	d
DVB_NET_DEVICES_MAX	dvb_net.h	29;"	d
DVB_RINGBUFFER_PEEK	dvb_ringbuffer.h	125;"	d
DVB_RINGBUFFER_PKTHDRSIZE	dvb_ringbuffer.h	52;"	d
DVB_RINGBUFFER_SKIP	dvb_ringbuffer.h	134;"	d
DVB_RINGBUFFER_WRITE_BYTE	dvb_ringbuffer.h	177;"	d
DVB_UNSET	dvbdev.h	36;"	d
DVB_VB2_NAME_MAX	dvb_vb2.h	59;"	d
DVB_VB2_STATE_INIT	dvb_vb2.h	/^	DVB_VB2_STATE_INIT	= 0x1,$/;"	e	enum:dvb_vb2_states
DVB_VB2_STATE_NONE	dvb_vb2.h	/^	DVB_VB2_STATE_NONE	= 0x0,$/;"	e	enum:dvb_vb2_states
DVB_VB2_STATE_REQBUFS	dvb_vb2.h	/^	DVB_VB2_STATE_REQBUFS	= 0x2,$/;"	e	enum:dvb_vb2_states
DVB_VB2_STATE_STREAMON	dvb_vb2.h	/^	DVB_VB2_STATE_STREAMON	= 0x4,$/;"	e	enum:dvb_vb2_states
DVR_BUFFER_SIZE	dmxdev.h	190;"	d
EISA_DEVICE_MODALIAS_FMT	mod_devicetable.h	354;"	d
EISA_SIG_LEN	mod_devicetable.h	346;"	d
ELF_BITS	relocs_32.c	4;"	d	file:
ELF_BITS	relocs_64.c	4;"	d	file:
ELF_CLASS	relocs_32.c	11;"	d	file:
ELF_CLASS	relocs_64.c	24;"	d	file:
ELF_MACHINE	relocs_32.c	6;"	d	file:
ELF_MACHINE	relocs_64.c	6;"	d	file:
ELF_MACHINE_NAME	relocs_32.c	7;"	d	file:
ELF_MACHINE_NAME	relocs_64.c	7;"	d	file:
ELF_R_SYM	relocs_32.c	12;"	d	file:
ELF_R_SYM	relocs_64.c	25;"	d	file:
ELF_R_TYPE	relocs_32.c	13;"	d	file:
ELF_R_TYPE	relocs_64.c	26;"	d	file:
ELF_ST_BIND	relocs_32.c	15;"	d	file:
ELF_ST_BIND	relocs_64.c	28;"	d	file:
ELF_ST_TYPE	relocs_32.c	14;"	d	file:
ELF_ST_TYPE	relocs_64.c	27;"	d	file:
ELF_ST_VISIBILITY	relocs_32.c	16;"	d	file:
ELF_ST_VISIBILITY	relocs_64.c	29;"	d	file:
Elf64_Byte	relocs_64.c	/^typedef uint8_t Elf64_Byte;$/;"	t	file:
Elf64_Mips_Rela	relocs_64.c	/^} Elf64_Mips_Rela;$/;"	t	typeref:union:__anon32	file:
ElfW	relocs.c	4;"	d	file:
Elf_Addr	relocs.c	8;"	d	file:
Elf_Ehdr	relocs.c	9;"	d	file:
Elf_Phdr	relocs.c	10;"	d	file:
Elf_Rel	relocs_32.c	9;"	d	file:
Elf_Rel	relocs_64.c	9;"	d	file:
Elf_Shdr	relocs.c	11;"	d	file:
Elf_Sym	relocs.c	12;"	d	file:
FIELD_SIZEOF	kernel.h	114;"	d
FLASH_FAULT	v4l2-flash-led-class.c	/^	FLASH_FAULT,$/;"	e	enum:ctrl_init_data_id	file:
FLASH_INTENSITY	v4l2-flash-led-class.c	/^	FLASH_INTENSITY,$/;"	e	enum:ctrl_init_data_id	file:
FLASH_STROBE	v4l2-flash-led-class.c	/^	FLASH_STROBE,$/;"	e	enum:ctrl_init_data_id	file:
FLASH_TIMEOUT	v4l2-flash-led-class.c	/^	FLASH_TIMEOUT,$/;"	e	enum:ctrl_init_data_id	file:
GET_NEXT_COUNT_IF_FLAG	ffs-test.c	263;"	d	file:
GET_NEXT_COUNT_IF_FLAG	ffs-test.c	282;"	d	file:
GPIOD_ASIS	consumer.h	/^	GPIOD_ASIS	= 0,$/;"	e	enum:gpiod_flags
GPIOD_FLAGS_BIT_DIR_OUT	consumer.h	30;"	d
GPIOD_FLAGS_BIT_DIR_SET	consumer.h	29;"	d
GPIOD_FLAGS_BIT_DIR_VAL	consumer.h	31;"	d
GPIOD_FLAGS_BIT_NONEXCLUSIVE	consumer.h	33;"	d
GPIOD_FLAGS_BIT_OPEN_DRAIN	consumer.h	32;"	d
GPIOD_IN	consumer.h	/^	GPIOD_IN	= GPIOD_FLAGS_BIT_DIR_SET,$/;"	e	enum:gpiod_flags
GPIOD_OUT_HIGH	consumer.h	/^	GPIOD_OUT_HIGH	= GPIOD_FLAGS_BIT_DIR_SET | GPIOD_FLAGS_BIT_DIR_OUT |$/;"	e	enum:gpiod_flags
GPIOD_OUT_HIGH_OPEN_DRAIN	consumer.h	/^	GPIOD_OUT_HIGH_OPEN_DRAIN = GPIOD_OUT_HIGH | GPIOD_FLAGS_BIT_OPEN_DRAIN,$/;"	e	enum:gpiod_flags
GPIOD_OUT_LOW	consumer.h	/^	GPIOD_OUT_LOW	= GPIOD_FLAGS_BIT_DIR_SET | GPIOD_FLAGS_BIT_DIR_OUT,$/;"	e	enum:gpiod_flags
GPIOD_OUT_LOW_OPEN_DRAIN	consumer.h	/^	GPIOD_OUT_LOW_OPEN_DRAIN = GPIOD_OUT_LOW | GPIOD_FLAGS_BIT_OPEN_DRAIN,$/;"	e	enum:gpiod_flags
GPIOF_ACTIVE_LOW	gpio.h	31;"	d
GPIOF_DIR_IN	gpio.h	21;"	d
GPIOF_DIR_OUT	gpio.h	20;"	d
GPIOF_EXPORT	gpio.h	39;"	d
GPIOF_EXPORT_CHANGEABLE	gpio.h	40;"	d
GPIOF_EXPORT_DIR_CHANGEABLE	gpio.h	42;"	d
GPIOF_EXPORT_DIR_FIXED	gpio.h	41;"	d
GPIOF_IN	gpio.h	26;"	d
GPIOF_INIT_HIGH	gpio.h	24;"	d
GPIOF_INIT_LOW	gpio.h	23;"	d
GPIOF_OPEN_DRAIN	gpio.h	34;"	d
GPIOF_OPEN_SOURCE	gpio.h	37;"	d
GPIOF_OUT_INIT_HIGH	gpio.h	28;"	d
GPIOF_OUT_INIT_LOW	gpio.h	27;"	d
GPIO_ACTIVE_HIGH	machine.h	/^	GPIO_ACTIVE_HIGH = (0 << 0),$/;"	e	enum:gpio_lookup_flags
GPIO_ACTIVE_LOW	machine.h	/^	GPIO_ACTIVE_LOW = (1 << 0),$/;"	e	enum:gpio_lookup_flags
GPIO_HOG	machine.h	82;"	d
GPIO_LOOKUP	machine.h	62;"	d
GPIO_LOOKUP_IDX	machine.h	70;"	d
GPIO_OPEN_DRAIN	machine.h	/^	GPIO_OPEN_DRAIN = (1 << 1),$/;"	e	enum:gpio_lookup_flags
GPIO_OPEN_SOURCE	machine.h	/^	GPIO_OPEN_SOURCE = (1 << 2),$/;"	e	enum:gpio_lookup_flags
GPIO_PERSISTENT	machine.h	/^	GPIO_PERSISTENT = (0 << 3),$/;"	e	enum:gpio_lookup_flags
GPIO_REG_H	gpio-reg.h	3;"	d
GPIO_TRANSITORY	machine.h	/^	GPIO_TRANSITORY = (1 << 3),$/;"	e	enum:gpio_lookup_flags
GPL_ONLY	module.h	/^		GPL_ONLY,$/;"	e	enum:symsearch::__anon27
GTF_CELL_GRAN	v4l2-dv-timings.c	611;"	d	file:
GTF_D_C	v4l2-dv-timings.c	615;"	d	file:
GTF_D_C_PRIME	v4l2-dv-timings.c	618;"	d	file:
GTF_D_J	v4l2-dv-timings.c	617;"	d	file:
GTF_D_K	v4l2-dv-timings.c	616;"	d	file:
GTF_D_M	v4l2-dv-timings.c	614;"	d	file:
GTF_D_M_PRIME	v4l2-dv-timings.c	619;"	d	file:
GTF_MIN_VSYNC_BP	v4l2-dv-timings.c	609;"	d	file:
GTF_PXL_CLK_GRAN	v4l2-dv-timings.c	607;"	d	file:
GTF_S_C	v4l2-dv-timings.c	623;"	d	file:
GTF_S_C_PRIME	v4l2-dv-timings.c	626;"	d	file:
GTF_S_J	v4l2-dv-timings.c	625;"	d	file:
GTF_S_K	v4l2-dv-timings.c	624;"	d	file:
GTF_S_M	v4l2-dv-timings.c	622;"	d	file:
GTF_S_M_PRIME	v4l2-dv-timings.c	627;"	d	file:
GTF_V_FP	v4l2-dv-timings.c	610;"	d	file:
HID_ANY_ID	mod_devicetable.h	143;"	d
HID_BUS_ANY	mod_devicetable.h	144;"	d
HID_GROUP_ANY	mod_devicetable.h	145;"	d
I2C_ACPI_MAX_SCAN_DEPTH	i2c-core-acpi.c	208;"	d	file:
I2C_ADDRS	i2c.h	787;"	d
I2C_ADDR_7BITS_COUNT	i2c-core-base.c	59;"	d	file:
I2C_ADDR_7BITS_MAX	i2c-core-base.c	58;"	d	file:
I2C_ADDR_DEVICE_ID	i2c-core-base.c	61;"	d	file:
I2C_ADDR_OFFSET_SLAVE	i2c-core-base.c	56;"	d	file:
I2C_ADDR_OFFSET_TEN_BIT	i2c-core-base.c	55;"	d	file:
I2C_AQ_COMB	i2c.h	649;"	d
I2C_AQ_COMB_READ_SECOND	i2c.h	653;"	d
I2C_AQ_COMB_SAME_ADDR	i2c.h	655;"	d
I2C_AQ_COMB_WRITE_FIRST	i2c.h	651;"	d
I2C_AQ_COMB_WRITE_THEN_READ	i2c.h	657;"	d
I2C_AQ_NO_CLK_STRETCH	i2c.h	660;"	d
I2C_AQ_NO_ZERO_LEN	i2c.h	664;"	d
I2C_AQ_NO_ZERO_LEN_READ	i2c.h	662;"	d
I2C_AQ_NO_ZERO_LEN_WRITE	i2c.h	663;"	d
I2C_BOARD_INFO	i2c.h	439;"	d
I2C_CLASS_DDC	i2c.h	778;"	d
I2C_CLASS_DEPRECATED	i2c.h	781;"	d
I2C_CLASS_HWMON	i2c.h	777;"	d
I2C_CLASS_SPD	i2c.h	779;"	d
I2C_CLIENT_END	i2c.h	784;"	d
I2C_CLIENT_HOST_NOTIFY	i2c.h	771;"	d
I2C_CLIENT_PEC	i2c.h	767;"	d
I2C_CLIENT_SCCB	i2c.h	773;"	d
I2C_CLIENT_SLAVE	i2c.h	770;"	d
I2C_CLIENT_TEN	i2c.h	768;"	d
I2C_CLIENT_WAKE	i2c.h	772;"	d
I2C_DEVICE_ID_ANALOG_DEVICES	i2c.h	212;"	d
I2C_DEVICE_ID_ATMEL	i2c.h	220;"	d
I2C_DEVICE_ID_ESPROS_PHOTONICS_AG	i2c.h	216;"	d
I2C_DEVICE_ID_FLIR	i2c.h	218;"	d
I2C_DEVICE_ID_FUJITSU_SEMICONDUCTOR	i2c.h	217;"	d
I2C_DEVICE_ID_NONE	i2c.h	221;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS	i2c.h	207;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS_1	i2c.h	208;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS_2	i2c.h	209;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS_3	i2c.h	210;"	d
I2C_DEVICE_ID_O2MICRO	i2c.h	219;"	d
I2C_DEVICE_ID_ON_SEMICONDUCTOR	i2c.h	214;"	d
I2C_DEVICE_ID_RAMTRON_INTERNATIONAL	i2c.h	211;"	d
I2C_DEVICE_ID_SPRINTEK_CORPORATION	i2c.h	215;"	d
I2C_DEVICE_ID_STMICROELECTRONICS	i2c.h	213;"	d
I2C_LOCK_ROOT_ADAPTER	i2c.h	725;"	d
I2C_LOCK_SEGMENT	i2c.h	726;"	d
I2C_MAJOR	i2c-dev.h	27;"	d
I2C_MINORS	i2c-dev.c	55;"	d	file:
I2C_MODULE_PREFIX	mod_devicetable.h	434;"	d
I2C_MUX_ARBITRATOR	i2c-mux.h	57;"	d
I2C_MUX_GATE	i2c-mux.h	58;"	d
I2C_MUX_LOCKED	i2c-mux.h	56;"	d
I2C_NAME_SIZE	mod_devicetable.h	433;"	d
I2C_PCA_ADR	i2c-algo-pca.h	26;"	d
I2C_PCA_CHIP_9564	i2c-algo-pca.h	6;"	d
I2C_PCA_CHIP_9665	i2c-algo-pca.h	7;"	d
I2C_PCA_CON	i2c-algo-pca.h	27;"	d
I2C_PCA_CON_146kHz	i2c-algo-pca.h	16;"	d
I2C_PCA_CON_217kHz	i2c-algo-pca.h	15;"	d
I2C_PCA_CON_288kHz	i2c-algo-pca.h	14;"	d
I2C_PCA_CON_330kHz	i2c-algo-pca.h	13;"	d
I2C_PCA_CON_36kHz	i2c-algo-pca.h	20;"	d
I2C_PCA_CON_44kHz	i2c-algo-pca.h	19;"	d
I2C_PCA_CON_59kHz	i2c-algo-pca.h	18;"	d
I2C_PCA_CON_88kHz	i2c-algo-pca.h	17;"	d
I2C_PCA_CON_AA	i2c-algo-pca.h	49;"	d
I2C_PCA_CON_CR	i2c-algo-pca.h	54;"	d
I2C_PCA_CON_ENSIO	i2c-algo-pca.h	50;"	d
I2C_PCA_CON_SI	i2c-algo-pca.h	53;"	d
I2C_PCA_CON_STA	i2c-algo-pca.h	51;"	d
I2C_PCA_CON_STO	i2c-algo-pca.h	52;"	d
I2C_PCA_DAT	i2c-algo-pca.h	25;"	d
I2C_PCA_IADR	i2c-algo-pca.h	35;"	d
I2C_PCA_ICOUNT	i2c-algo-pca.h	34;"	d
I2C_PCA_IMODE	i2c-algo-pca.h	40;"	d
I2C_PCA_IND	i2c-algo-pca.h	31;"	d
I2C_PCA_INDPTR	i2c-algo-pca.h	30;"	d
I2C_PCA_IPRESET	i2c-algo-pca.h	39;"	d
I2C_PCA_ISCLH	i2c-algo-pca.h	37;"	d
I2C_PCA_ISCLL	i2c-algo-pca.h	36;"	d
I2C_PCA_ITO	i2c-algo-pca.h	38;"	d
I2C_PCA_MODE_FAST	i2c-algo-pca.h	44;"	d
I2C_PCA_MODE_FASTP	i2c-algo-pca.h	45;"	d
I2C_PCA_MODE_STD	i2c-algo-pca.h	43;"	d
I2C_PCA_MODE_TURBO	i2c-algo-pca.h	46;"	d
I2C_PCA_OSC_PER	i2c-algo-pca.h	10;"	d
I2C_PCA_STA	i2c-algo-pca.h	23;"	d
I2C_PCA_TO	i2c-algo-pca.h	24;"	d
I2C_PROTOCOL_SMBUS_ALERT	i2c.h	/^	I2C_PROTOCOL_SMBUS_ALERT,$/;"	e	enum:i2c_alert_protocol
I2C_PROTOCOL_SMBUS_HOST_NOTIFY	i2c.h	/^	I2C_PROTOCOL_SMBUS_HOST_NOTIFY,$/;"	e	enum:i2c_alert_protocol
I2C_SLAVE_EVENT_START_READ	i2c-pxa.h	/^	I2C_SLAVE_EVENT_START_READ,$/;"	e	enum:i2c_slave_event_e
I2C_SLAVE_EVENT_START_WRITE	i2c-pxa.h	/^	I2C_SLAVE_EVENT_START_WRITE,$/;"	e	enum:i2c_slave_event_e
I2C_SLAVE_EVENT_STOP	i2c-pxa.h	/^	I2C_SLAVE_EVENT_STOP$/;"	e	enum:i2c_slave_event_e
I2C_SLAVE_READ_PROCESSED	i2c.h	/^	I2C_SLAVE_READ_PROCESSED,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_READ_REQUESTED	i2c.h	/^	I2C_SLAVE_READ_REQUESTED,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_STOP	i2c.h	/^	I2C_SLAVE_STOP,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_WRITE_RECEIVED	i2c.h	/^	I2C_SLAVE_WRITE_RECEIVED,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_WRITE_REQUESTED	i2c.h	/^	I2C_SLAVE_WRITE_REQUESTED,$/;"	e	enum:i2c_slave_event
IEEE1394_MATCH_MODEL_ID	mod_devicetable.h	28;"	d
IEEE1394_MATCH_SPECIFIER_ID	mod_devicetable.h	29;"	d
IEEE1394_MATCH_VENDOR_ID	mod_devicetable.h	27;"	d
IEEE1394_MATCH_VERSION	mod_devicetable.h	30;"	d
IF_AUD_DEC_PAD_IF_INPUT	v4l2-mc.h	/^	IF_AUD_DEC_PAD_IF_INPUT,$/;"	e	enum:if_aud_dec_pad_index
IF_AUD_DEC_PAD_NUM_PADS	v4l2-mc.h	/^	IF_AUD_DEC_PAD_NUM_PADS$/;"	e	enum:if_aud_dec_pad_index
IF_AUD_DEC_PAD_OUT	v4l2-mc.h	/^	IF_AUD_DEC_PAD_OUT,$/;"	e	enum:if_aud_dec_pad_index
IF_VID_DEC_PAD_IF_INPUT	v4l2-mc.h	/^	IF_VID_DEC_PAD_IF_INPUT,$/;"	e	enum:if_vid_dec_pad_index
IF_VID_DEC_PAD_NUM_PADS	v4l2-mc.h	/^	IF_VID_DEC_PAD_NUM_PADS$/;"	e	enum:if_vid_dec_pad_index
IF_VID_DEC_PAD_OUT	v4l2-mc.h	/^	IF_VID_DEC_PAD_OUT,$/;"	e	enum:if_vid_dec_pad_index
IMX219_ANA_GAIN_DEFAULT	imx219.c	69;"	d	file:
IMX219_ANA_GAIN_MAX	imx219.c	67;"	d	file:
IMX219_ANA_GAIN_MIN	imx219.c	66;"	d	file:
IMX219_ANA_GAIN_STEP	imx219.c	68;"	d	file:
IMX219_CHIP_ID	imx219.c	39;"	d	file:
IMX219_DGTL_GAIN_DEFAULT	imx219.c	75;"	d	file:
IMX219_DGTL_GAIN_MAX	imx219.c	74;"	d	file:
IMX219_DGTL_GAIN_MIN	imx219.c	73;"	d	file:
IMX219_DGTL_GAIN_STEP	imx219.c	76;"	d	file:
IMX219_EXPOSURE_DEFAULT	imx219.c	61;"	d	file:
IMX219_EXPOSURE_MAX	imx219.c	62;"	d	file:
IMX219_EXPOSURE_MIN	imx219.c	59;"	d	file:
IMX219_EXPOSURE_STEP	imx219.c	60;"	d	file:
IMX219_FLL_DEFAULT	imx219.c	52;"	d	file:
IMX219_FLL_MAX	imx219.c	50;"	d	file:
IMX219_FLL_MIN	imx219.c	49;"	d	file:
IMX219_FLL_STEP	imx219.c	51;"	d	file:
IMX219_MODE_STANDBY	imx219.c	34;"	d	file:
IMX219_MODE_STREAMING	imx219.c	35;"	d	file:
IMX219_NUM_SUPPLIES	imx219.c	318;"	d	file:
IMX219_PPL_DEFAULT	imx219.c	55;"	d	file:
IMX219_REG_ANALOG_GAIN	imx219.c	65;"	d	file:
IMX219_REG_CHIP_ID	imx219.c	38;"	d	file:
IMX219_REG_DIGITAL_GAIN	imx219.c	72;"	d	file:
IMX219_REG_EXPOSURE	imx219.c	58;"	d	file:
IMX219_REG_MODE_SELECT	imx219.c	33;"	d	file:
IMX219_REG_TEST_PATTERN	imx219.c	79;"	d	file:
IMX219_REG_VALUE_08BIT	imx219.c	30;"	d	file:
IMX219_REG_VALUE_16BIT	imx219.c	31;"	d	file:
IMX219_REG_VTS	imx219.c	42;"	d	file:
IMX219_TEST_PATTERN_COLOR_BARS	imx219.c	82;"	d	file:
IMX219_TEST_PATTERN_DISABLE	imx219.c	80;"	d	file:
IMX219_TEST_PATTERN_GREY_COLOR	imx219.c	83;"	d	file:
IMX219_TEST_PATTERN_PN9	imx219.c	84;"	d	file:
IMX219_TEST_PATTERN_SOLID_COLOR	imx219.c	81;"	d	file:
IMX219_VTS_15FPS	imx219.c	43;"	d	file:
IMX219_VTS_30FPS_1080P	imx219.c	44;"	d	file:
IMX219_VTS_30FPS_BINNED	imx219.c	45;"	d	file:
IMX219_VTS_MAX	imx219.c	46;"	d	file:
IMX219_XCLR_DELAY_MS	imx219.c	320;"	d	file:
IMX258_ANA_GAIN_DEFAULT	imx258.c	51;"	d	file:
IMX258_ANA_GAIN_MAX	imx258.c	49;"	d	file:
IMX258_ANA_GAIN_MIN	imx258.c	48;"	d	file:
IMX258_ANA_GAIN_STEP	imx258.c	50;"	d	file:
IMX258_CHIP_ID	imx258.c	22;"	d	file:
IMX258_DGTL_GAIN_DEFAULT	imx258.c	60;"	d	file:
IMX258_DGTL_GAIN_MAX	imx258.c	59;"	d	file:
IMX258_DGTL_GAIN_MIN	imx258.c	58;"	d	file:
IMX258_DGTL_GAIN_STEP	imx258.c	61;"	d	file:
IMX258_EXPOSURE_DEFAULT	imx258.c	43;"	d	file:
IMX258_EXPOSURE_MAX	imx258.c	44;"	d	file:
IMX258_EXPOSURE_MIN	imx258.c	41;"	d	file:
IMX258_EXPOSURE_STEP	imx258.c	42;"	d	file:
IMX258_FLL_DEFAULT	imx258.c	34;"	d	file:
IMX258_FLL_MAX	imx258.c	32;"	d	file:
IMX258_FLL_MIN	imx258.c	31;"	d	file:
IMX258_FLL_STEP	imx258.c	33;"	d	file:
IMX258_LINK_FREQ_1267MBPS	imx258.c	/^	IMX258_LINK_FREQ_1267MBPS,$/;"	e	enum:__anon14	file:
IMX258_LINK_FREQ_320MHZ	imx258.c	523;"	d	file:
IMX258_LINK_FREQ_634MHZ	imx258.c	522;"	d	file:
IMX258_LINK_FREQ_640MBPS	imx258.c	/^	IMX258_LINK_FREQ_640MBPS,$/;"	e	enum:__anon14	file:
IMX258_MODE_STANDBY	imx258.c	17;"	d	file:
IMX258_MODE_STREAMING	imx258.c	18;"	d	file:
IMX258_PPL_DEFAULT	imx258.c	37;"	d	file:
IMX258_REG_ANALOG_GAIN	imx258.c	47;"	d	file:
IMX258_REG_B_DIGITAL_GAIN	imx258.c	56;"	d	file:
IMX258_REG_CHIP_ID	imx258.c	21;"	d	file:
IMX258_REG_EXPOSURE	imx258.c	40;"	d	file:
IMX258_REG_GB_DIGITAL_GAIN	imx258.c	57;"	d	file:
IMX258_REG_GR_DIGITAL_GAIN	imx258.c	54;"	d	file:
IMX258_REG_MODE_SELECT	imx258.c	16;"	d	file:
IMX258_REG_R_DIGITAL_GAIN	imx258.c	55;"	d	file:
IMX258_REG_TEST_PATTERN	imx258.c	64;"	d	file:
IMX258_REG_VALUE_08BIT	imx258.c	13;"	d	file:
IMX258_REG_VALUE_16BIT	imx258.c	14;"	d	file:
IMX258_TEST_PATTERN_COLOR_BARS	imx258.c	67;"	d	file:
IMX258_TEST_PATTERN_DISABLE	imx258.c	65;"	d	file:
IMX258_TEST_PATTERN_GREY_COLOR	imx258.c	68;"	d	file:
IMX258_TEST_PATTERN_PN9	imx258.c	69;"	d	file:
IMX258_TEST_PATTERN_SOLID_COLOR	imx258.c	66;"	d	file:
IMX258_VTS_30FPS	imx258.c	25;"	d	file:
IMX258_VTS_30FPS_2K	imx258.c	26;"	d	file:
IMX258_VTS_30FPS_VGA	imx258.c	27;"	d	file:
IMX258_VTS_MAX	imx258.c	28;"	d	file:
INDICATOR_INTENSITY	v4l2-flash-led-class.c	/^	INDICATOR_INTENSITY,$/;"	e	enum:ctrl_init_data_id	file:
INFO_FL_ALWAYS_COPY	v4l2-ioctl.c	2536;"	d	file:
INFO_FL_CLEAR	v4l2-ioctl.c	2538;"	d	file:
INFO_FL_CLEAR_MASK	v4l2-ioctl.c	2541;"	d	file:
INFO_FL_CTRL	v4l2-ioctl.c	2532;"	d	file:
INFO_FL_PRIO	v4l2-ioctl.c	2530;"	d	file:
INFO_FL_QUEUE	v4l2-ioctl.c	2534;"	d	file:
INPUT_DEVICE_ID_ABS_MAX	mod_devicetable.h	297;"	d
INPUT_DEVICE_ID_EV_MAX	mod_devicetable.h	293;"	d
INPUT_DEVICE_ID_FF_MAX	mod_devicetable.h	301;"	d
INPUT_DEVICE_ID_KEY_MAX	mod_devicetable.h	295;"	d
INPUT_DEVICE_ID_KEY_MIN_INTERESTING	mod_devicetable.h	294;"	d
INPUT_DEVICE_ID_LED_MAX	mod_devicetable.h	299;"	d
INPUT_DEVICE_ID_MATCH_ABSBIT	mod_devicetable.h	313;"	d
INPUT_DEVICE_ID_MATCH_BUS	mod_devicetable.h	305;"	d
INPUT_DEVICE_ID_MATCH_EVBIT	mod_devicetable.h	310;"	d
INPUT_DEVICE_ID_MATCH_FFBIT	mod_devicetable.h	317;"	d
INPUT_DEVICE_ID_MATCH_KEYBIT	mod_devicetable.h	311;"	d
INPUT_DEVICE_ID_MATCH_LEDBIT	mod_devicetable.h	315;"	d
INPUT_DEVICE_ID_MATCH_MSCIT	mod_devicetable.h	314;"	d
INPUT_DEVICE_ID_MATCH_PRODUCT	mod_devicetable.h	307;"	d
INPUT_DEVICE_ID_MATCH_PROPBIT	mod_devicetable.h	319;"	d
INPUT_DEVICE_ID_MATCH_RELBIT	mod_devicetable.h	312;"	d
INPUT_DEVICE_ID_MATCH_SNDBIT	mod_devicetable.h	316;"	d
INPUT_DEVICE_ID_MATCH_SWBIT	mod_devicetable.h	318;"	d
INPUT_DEVICE_ID_MATCH_VENDOR	mod_devicetable.h	306;"	d
INPUT_DEVICE_ID_MATCH_VERSION	mod_devicetable.h	308;"	d
INPUT_DEVICE_ID_MSC_MAX	mod_devicetable.h	298;"	d
INPUT_DEVICE_ID_PROP_MAX	mod_devicetable.h	303;"	d
INPUT_DEVICE_ID_REL_MAX	mod_devicetable.h	296;"	d
INPUT_DEVICE_ID_SND_MAX	mod_devicetable.h	300;"	d
INPUT_DEVICE_ID_SW_MAX	mod_devicetable.h	302;"	d
INT_MAX	kernel.h	22;"	d
INT_MIN	kernel.h	23;"	d
IOCTL_INFO	v4l2-ioctl.c	2551;"	d	file:
IPACK_ANY_FORMAT	mod_devicetable.h	651;"	d
IPACK_ANY_ID	mod_devicetable.h	652;"	d
IR_DEFAULT_TIMEOUT	rc-core.h	327;"	d
IR_MAX_DURATION	rc-core.h	328;"	d
ISAPNP_ANY_ID	mod_devicetable.h	587;"	d
IS_ALIGNED	kernel.h	62;"	d
ITV0	videodev2.h	/^		struct v4l2_mpeg_vbi_ITV0 ITV0;$/;"	m	union:v4l2_mpeg_vbi_fmt_ivtv::__anon65	typeref:struct:v4l2_mpeg_vbi_fmt_ivtv::__anon65::v4l2_mpeg_vbi_ITV0
LED_MODE	v4l2-flash-led-class.c	/^	LED_MODE,$/;"	e	enum:ctrl_init_data_id	file:
LINUX_CEC_NOTIFIER_H	cec-notifier.h	10;"	d
LINUX_CEC_PIN_H	cec-pin.h	9;"	d
LINUX_MOD_DEVICETABLE_H	mod_devicetable.h	9;"	d
LLONG_MAX	kernel.h	28;"	d
LLONG_MIN	kernel.h	29;"	d
LOCKDEP_NOW_UNRELIABLE	kernel.h	/^	LOCKDEP_NOW_UNRELIABLE$/;"	e	enum:lockdep_ok
LOCKDEP_STILL_OK	kernel.h	/^	LOCKDEP_STILL_OK,$/;"	e	enum:lockdep_ok
LONG_MAX	kernel.h	25;"	d
LONG_MIN	kernel.h	26;"	d
MAC_address	tveeprom.h	/^	u8 MAC_address[ETH_ALEN];$/;"	m	struct:tveeprom
MAGIC_BUFFER	videobuf-core.c	26;"	d	file:
MAGIC_CHECK	videobuf-core.c	27;"	d	file:
MAGIC_CHECK	videobuf-dma-contig.c	34;"	d	file:
MAGIC_CHECK	videobuf-dma-sg.c	40;"	d	file:
MAGIC_CHECK	videobuf-vmalloc.c	33;"	d	file:
MAGIC_DC_MEM	videobuf-dma-contig.c	33;"	d	file:
MAGIC_DMABUF	videobuf-dma-sg.c	37;"	d	file:
MAGIC_DMABUF	videobuf-vmalloc.c	30;"	d	file:
MAGIC_QTYPE_OPS	videobuf-core.h	117;"	d
MAGIC_SG_MEM	videobuf-dma-sg.c	38;"	d	file:
MAGIC_VMAL_MEM	videobuf-vmalloc.c	31;"	d	file:
MAX_DELSYS	dvb_frontend.h	53;"	d
MAX_DVB_DEMUX_USERS	dvb_demux.h	217;"	d
MAX_EVENT	dvb_frontend.h	496;"	d
MAX_PID	dvb_demux.h	59;"	d
MAX_UDELAY_MS	delay.h	39;"	d
MDIO_ID_ARGS	mod_devicetable.h	555;"	d
MDIO_ID_FMT	mod_devicetable.h	554;"	d
MDIO_MODULE_PREFIX	mod_devicetable.h	552;"	d
MDIO_NAME_SIZE	mod_devicetable.h	551;"	d
MEDIA_API_VERSION	media.h	423;"	d
MEDIA_BITS_PER_ID	media-entity.h	48;"	d
MEDIA_BITS_PER_TYPE	media-entity.h	47;"	d
MEDIA_BUS_FMT_AHSV8888_1X32	media-bus-format.h	154;"	d
MEDIA_BUS_FMT_ARGB8888_1X32	media-bus-format.h	59;"	d
MEDIA_BUS_FMT_AYUV8_1X32	media-bus-format.h	105;"	d
MEDIA_BUS_FMT_BGR565_2X8_BE	media-bus-format.h	44;"	d
MEDIA_BUS_FMT_BGR565_2X8_LE	media-bus-format.h	45;"	d
MEDIA_BUS_FMT_BGR888_1X24	media-bus-format.h	52;"	d
MEDIA_BUS_FMT_FIXED	media-bus-format.h	35;"	d
MEDIA_BUS_FMT_GBR888_1X24	media-bus-format.h	53;"	d
MEDIA_BUS_FMT_JPEG_1X8	media-bus-format.h	146;"	d
MEDIA_BUS_FMT_RBG888_1X24	media-bus-format.h	49;"	d
MEDIA_BUS_FMT_RGB101010_1X30	media-bus-format.h	61;"	d
MEDIA_BUS_FMT_RGB121212_1X36	media-bus-format.h	62;"	d
MEDIA_BUS_FMT_RGB161616_1X48	media-bus-format.h	63;"	d
MEDIA_BUS_FMT_RGB444_1X12	media-bus-format.h	38;"	d
MEDIA_BUS_FMT_RGB444_2X8_PADHI_BE	media-bus-format.h	39;"	d
MEDIA_BUS_FMT_RGB444_2X8_PADHI_LE	media-bus-format.h	40;"	d
MEDIA_BUS_FMT_RGB555_2X8_PADHI_BE	media-bus-format.h	41;"	d
MEDIA_BUS_FMT_RGB555_2X8_PADHI_LE	media-bus-format.h	42;"	d
MEDIA_BUS_FMT_RGB565_1X16	media-bus-format.h	43;"	d
MEDIA_BUS_FMT_RGB565_2X8_BE	media-bus-format.h	46;"	d
MEDIA_BUS_FMT_RGB565_2X8_LE	media-bus-format.h	47;"	d
MEDIA_BUS_FMT_RGB666_1X18	media-bus-format.h	48;"	d
MEDIA_BUS_FMT_RGB666_1X24_CPADHI	media-bus-format.h	50;"	d
MEDIA_BUS_FMT_RGB666_1X7X3_SPWG	media-bus-format.h	51;"	d
MEDIA_BUS_FMT_RGB888_1X24	media-bus-format.h	54;"	d
MEDIA_BUS_FMT_RGB888_1X32_PADHI	media-bus-format.h	60;"	d
MEDIA_BUS_FMT_RGB888_1X7X4_JEIDA	media-bus-format.h	58;"	d
MEDIA_BUS_FMT_RGB888_1X7X4_SPWG	media-bus-format.h	57;"	d
MEDIA_BUS_FMT_RGB888_2X12_BE	media-bus-format.h	55;"	d
MEDIA_BUS_FMT_RGB888_2X12_LE	media-bus-format.h	56;"	d
MEDIA_BUS_FMT_S5C_UYVY_JPEG_1X8	media-bus-format.h	151;"	d
MEDIA_BUS_FMT_SBGGR10_1X10	media-bus-format.h	128;"	d
MEDIA_BUS_FMT_SBGGR10_2X8_PADHI_BE	media-bus-format.h	124;"	d
MEDIA_BUS_FMT_SBGGR10_2X8_PADHI_LE	media-bus-format.h	125;"	d
MEDIA_BUS_FMT_SBGGR10_2X8_PADLO_BE	media-bus-format.h	126;"	d
MEDIA_BUS_FMT_SBGGR10_2X8_PADLO_LE	media-bus-format.h	127;"	d
MEDIA_BUS_FMT_SBGGR10_ALAW8_1X8	media-bus-format.h	116;"	d
MEDIA_BUS_FMT_SBGGR10_DPCM8_1X8	media-bus-format.h	120;"	d
MEDIA_BUS_FMT_SBGGR12_1X12	media-bus-format.h	132;"	d
MEDIA_BUS_FMT_SBGGR14_1X14	media-bus-format.h	136;"	d
MEDIA_BUS_FMT_SBGGR16_1X16	media-bus-format.h	140;"	d
MEDIA_BUS_FMT_SBGGR8_1X8	media-bus-format.h	112;"	d
MEDIA_BUS_FMT_SGBRG10_1X10	media-bus-format.h	129;"	d
MEDIA_BUS_FMT_SGBRG10_ALAW8_1X8	media-bus-format.h	117;"	d
MEDIA_BUS_FMT_SGBRG10_DPCM8_1X8	media-bus-format.h	121;"	d
MEDIA_BUS_FMT_SGBRG12_1X12	media-bus-format.h	133;"	d
MEDIA_BUS_FMT_SGBRG14_1X14	media-bus-format.h	137;"	d
MEDIA_BUS_FMT_SGBRG16_1X16	media-bus-format.h	141;"	d
MEDIA_BUS_FMT_SGBRG8_1X8	media-bus-format.h	113;"	d
MEDIA_BUS_FMT_SGRBG10_1X10	media-bus-format.h	130;"	d
MEDIA_BUS_FMT_SGRBG10_ALAW8_1X8	media-bus-format.h	118;"	d
MEDIA_BUS_FMT_SGRBG10_DPCM8_1X8	media-bus-format.h	122;"	d
MEDIA_BUS_FMT_SGRBG12_1X12	media-bus-format.h	134;"	d
MEDIA_BUS_FMT_SGRBG14_1X14	media-bus-format.h	138;"	d
MEDIA_BUS_FMT_SGRBG16_1X16	media-bus-format.h	142;"	d
MEDIA_BUS_FMT_SGRBG8_1X8	media-bus-format.h	114;"	d
MEDIA_BUS_FMT_SRGGB10_1X10	media-bus-format.h	131;"	d
MEDIA_BUS_FMT_SRGGB10_ALAW8_1X8	media-bus-format.h	119;"	d
MEDIA_BUS_FMT_SRGGB10_DPCM8_1X8	media-bus-format.h	123;"	d
MEDIA_BUS_FMT_SRGGB12_1X12	media-bus-format.h	135;"	d
MEDIA_BUS_FMT_SRGGB14_1X14	media-bus-format.h	139;"	d
MEDIA_BUS_FMT_SRGGB16_1X16	media-bus-format.h	143;"	d
MEDIA_BUS_FMT_SRGGB8_1X8	media-bus-format.h	115;"	d
MEDIA_BUS_FMT_UV8_1X8	media-bus-format.h	67;"	d
MEDIA_BUS_FMT_UYVY10_1X20	media-bus-format.h	92;"	d
MEDIA_BUS_FMT_UYVY10_2X10	media-bus-format.h	78;"	d
MEDIA_BUS_FMT_UYVY12_1X24	media-bus-format.h	99;"	d
MEDIA_BUS_FMT_UYVY12_2X12	media-bus-format.h	83;"	d
MEDIA_BUS_FMT_UYVY8_1X16	media-bus-format.h	87;"	d
MEDIA_BUS_FMT_UYVY8_1_5X8	media-bus-format.h	68;"	d
MEDIA_BUS_FMT_UYVY8_2X8	media-bus-format.h	72;"	d
MEDIA_BUS_FMT_UYYVYY10_0_5X30	media-bus-format.h	104;"	d
MEDIA_BUS_FMT_UYYVYY12_0_5X36	media-bus-format.h	106;"	d
MEDIA_BUS_FMT_UYYVYY16_0_5X48	media-bus-format.h	109;"	d
MEDIA_BUS_FMT_UYYVYY8_0_5X24	media-bus-format.h	98;"	d
MEDIA_BUS_FMT_VUY8_1X24	media-bus-format.h	96;"	d
MEDIA_BUS_FMT_VYUY10_1X20	media-bus-format.h	93;"	d
MEDIA_BUS_FMT_VYUY10_2X10	media-bus-format.h	79;"	d
MEDIA_BUS_FMT_VYUY12_1X24	media-bus-format.h	100;"	d
MEDIA_BUS_FMT_VYUY12_2X12	media-bus-format.h	84;"	d
MEDIA_BUS_FMT_VYUY8_1X16	media-bus-format.h	88;"	d
MEDIA_BUS_FMT_VYUY8_1_5X8	media-bus-format.h	69;"	d
MEDIA_BUS_FMT_VYUY8_2X8	media-bus-format.h	73;"	d
MEDIA_BUS_FMT_Y10_1X10	media-bus-format.h	76;"	d
MEDIA_BUS_FMT_Y10_2X8_PADHI_LE	media-bus-format.h	77;"	d
MEDIA_BUS_FMT_Y12_1X12	media-bus-format.h	82;"	d
MEDIA_BUS_FMT_Y8_1X8	media-bus-format.h	66;"	d
MEDIA_BUS_FMT_YDYUYDYV8_1X16	media-bus-format.h	91;"	d
MEDIA_BUS_FMT_YUV10_1X30	media-bus-format.h	103;"	d
MEDIA_BUS_FMT_YUV12_1X36	media-bus-format.h	107;"	d
MEDIA_BUS_FMT_YUV16_1X48	media-bus-format.h	108;"	d
MEDIA_BUS_FMT_YUV8_1X24	media-bus-format.h	97;"	d
MEDIA_BUS_FMT_YUYV10_1X20	media-bus-format.h	94;"	d
MEDIA_BUS_FMT_YUYV10_2X10	media-bus-format.h	80;"	d
MEDIA_BUS_FMT_YUYV12_1X24	media-bus-format.h	101;"	d
MEDIA_BUS_FMT_YUYV12_2X12	media-bus-format.h	85;"	d
MEDIA_BUS_FMT_YUYV8_1X16	media-bus-format.h	89;"	d
MEDIA_BUS_FMT_YUYV8_1_5X8	media-bus-format.h	70;"	d
MEDIA_BUS_FMT_YUYV8_2X8	media-bus-format.h	74;"	d
MEDIA_BUS_FMT_YVYU10_1X20	media-bus-format.h	95;"	d
MEDIA_BUS_FMT_YVYU10_2X10	media-bus-format.h	81;"	d
MEDIA_BUS_FMT_YVYU12_1X24	media-bus-format.h	102;"	d
MEDIA_BUS_FMT_YVYU12_2X12	media-bus-format.h	86;"	d
MEDIA_BUS_FMT_YVYU8_1X16	media-bus-format.h	90;"	d
MEDIA_BUS_FMT_YVYU8_1_5X8	media-bus-format.h	71;"	d
MEDIA_BUS_FMT_YVYU8_2X8	media-bus-format.h	75;"	d
MEDIA_DEV_NOTIFY_POST_LINK_CH	media-device.h	171;"	d
MEDIA_DEV_NOTIFY_PRE_LINK_CH	media-device.h	170;"	d
MEDIA_ENTITY_ENUM_MAX_DEPTH	media-entity.h	71;"	d
MEDIA_ENTITY_TYPE_BASE	media-entity.h	/^	MEDIA_ENTITY_TYPE_BASE,$/;"	e	enum:media_entity_type
MEDIA_ENTITY_TYPE_V4L2_SUBDEV	media-entity.h	/^	MEDIA_ENTITY_TYPE_V4L2_SUBDEV,$/;"	e	enum:media_entity_type
MEDIA_ENTITY_TYPE_VIDEO_DEVICE	media-entity.h	/^	MEDIA_ENTITY_TYPE_VIDEO_DEVICE,$/;"	e	enum:media_entity_type
MEDIA_ENT_FL_CONNECTOR	media.h	146;"	d
MEDIA_ENT_FL_DEFAULT	media.h	145;"	d
MEDIA_ENT_F_ATV_DECODER	media.h	140;"	d
MEDIA_ENT_F_AUDIO_CAPTURE	media.h	115;"	d
MEDIA_ENT_F_AUDIO_MIXER	media.h	117;"	d
MEDIA_ENT_F_AUDIO_PLAYBACK	media.h	116;"	d
MEDIA_ENT_F_BASE	media.h	51;"	d
MEDIA_ENT_F_CAM_SENSOR	media.h	87;"	d
MEDIA_ENT_F_CONN_COMPOSITE	media.h	277;"	d
MEDIA_ENT_F_CONN_RF	media.h	275;"	d
MEDIA_ENT_F_CONN_SVIDEO	media.h	276;"	d
MEDIA_ENT_F_DTV_CA	media.h	73;"	d
MEDIA_ENT_F_DTV_DECODER	media.h	405;"	d
MEDIA_ENT_F_DTV_DEMOD	media.h	71;"	d
MEDIA_ENT_F_DTV_NET_DECAP	media.h	74;"	d
MEDIA_ENT_F_DV_DECODER	media.h	141;"	d
MEDIA_ENT_F_DV_ENCODER	media.h	142;"	d
MEDIA_ENT_F_FLASH	media.h	88;"	d
MEDIA_ENT_F_IF_AUD_DECODER	media.h	110;"	d
MEDIA_ENT_F_IF_VID_DECODER	media.h	109;"	d
MEDIA_ENT_F_IO_DTV	media.h	80;"	d
MEDIA_ENT_F_IO_SWRADIO	media.h	82;"	d
MEDIA_ENT_F_IO_V4L	media.h	79;"	d
MEDIA_ENT_F_IO_VBI	media.h	81;"	d
MEDIA_ENT_F_LENS	media.h	89;"	d
MEDIA_ENT_F_OLD_BASE	media.h	52;"	d
MEDIA_ENT_F_OLD_SUBDEV_BASE	media.h	53;"	d
MEDIA_ENT_F_PROC_VIDEO_COMPOSER	media.h	122;"	d
MEDIA_ENT_F_PROC_VIDEO_DECODER	media.h	129;"	d
MEDIA_ENT_F_PROC_VIDEO_ENCODER	media.h	128;"	d
MEDIA_ENT_F_PROC_VIDEO_LUT	media.h	125;"	d
MEDIA_ENT_F_PROC_VIDEO_PIXEL_ENC_CONV	media.h	124;"	d
MEDIA_ENT_F_PROC_VIDEO_PIXEL_FORMATTER	media.h	123;"	d
MEDIA_ENT_F_PROC_VIDEO_SCALER	media.h	126;"	d
MEDIA_ENT_F_PROC_VIDEO_STATISTICS	media.h	127;"	d
MEDIA_ENT_F_TS_DEMUX	media.h	72;"	d
MEDIA_ENT_F_TUNER	media.h	101;"	d
MEDIA_ENT_F_UNKNOWN	media.h	59;"	d
MEDIA_ENT_F_V4L2_SUBDEV_UNKNOWN	media.h	66;"	d
MEDIA_ENT_F_VID_IF_BRIDGE	media.h	135;"	d
MEDIA_ENT_F_VID_MUX	media.h	134;"	d
MEDIA_ENT_ID_FLAG_NEXT	media.h	149;"	d
MEDIA_ENT_SUBTYPE_MASK	media.h	385;"	d
MEDIA_ENT_TYPE_MASK	media.h	384;"	d
MEDIA_ENT_TYPE_SHIFT	media.h	383;"	d
MEDIA_ENT_T_DEVNODE	media.h	390;"	d
MEDIA_ENT_T_DEVNODE_ALSA	media.h	393;"	d
MEDIA_ENT_T_DEVNODE_DVB	media.h	394;"	d
MEDIA_ENT_T_DEVNODE_FB	media.h	392;"	d
MEDIA_ENT_T_DEVNODE_UNKNOWN	media.h	387;"	d
MEDIA_ENT_T_DEVNODE_V4L	media.h	391;"	d
MEDIA_ENT_T_UNKNOWN	media.h	396;"	d
MEDIA_ENT_T_V4L2_SUBDEV	media.h	398;"	d
MEDIA_ENT_T_V4L2_SUBDEV_DECODER	media.h	402;"	d
MEDIA_ENT_T_V4L2_SUBDEV_FLASH	media.h	400;"	d
MEDIA_ENT_T_V4L2_SUBDEV_LENS	media.h	401;"	d
MEDIA_ENT_T_V4L2_SUBDEV_SENSOR	media.h	399;"	d
MEDIA_ENT_T_V4L2_SUBDEV_TUNER	media.h	403;"	d
MEDIA_ENT_T_V4L2_VIDEO	media.h	397;"	d
MEDIA_FLAG_REGISTERED	media-devnode.h	39;"	d
MEDIA_GRAPH_ENTITY	media-entity.h	/^	MEDIA_GRAPH_ENTITY,$/;"	e	enum:media_gobj_type
MEDIA_GRAPH_INTF_DEVNODE	media-entity.h	/^	MEDIA_GRAPH_INTF_DEVNODE,$/;"	e	enum:media_gobj_type
MEDIA_GRAPH_LINK	media-entity.h	/^	MEDIA_GRAPH_LINK,$/;"	e	enum:media_gobj_type
MEDIA_GRAPH_PAD	media-entity.h	/^	MEDIA_GRAPH_PAD,$/;"	e	enum:media_gobj_type
MEDIA_ID_MASK	media-entity.h	49;"	d
MEDIA_INTF_T_ALSA_BASE	media.h	412;"	d
MEDIA_INTF_T_ALSA_COMPRESS	media.h	416;"	d
MEDIA_INTF_T_ALSA_CONTROL	media.h	415;"	d
MEDIA_INTF_T_ALSA_HWDEP	media.h	418;"	d
MEDIA_INTF_T_ALSA_PCM_CAPTURE	media.h	413;"	d
MEDIA_INTF_T_ALSA_PCM_PLAYBACK	media.h	414;"	d
MEDIA_INTF_T_ALSA_RAWMIDI	media.h	417;"	d
MEDIA_INTF_T_ALSA_SEQUENCER	media.h	419;"	d
MEDIA_INTF_T_ALSA_TIMER	media.h	420;"	d
MEDIA_INTF_T_DVB_BASE	media.h	247;"	d
MEDIA_INTF_T_DVB_CA	media.h	255;"	d
MEDIA_INTF_T_DVB_DEMUX	media.h	253;"	d
MEDIA_INTF_T_DVB_DVR	media.h	254;"	d
MEDIA_INTF_T_DVB_FE	media.h	252;"	d
MEDIA_INTF_T_DVB_NET	media.h	256;"	d
MEDIA_INTF_T_V4L_BASE	media.h	248;"	d
MEDIA_INTF_T_V4L_RADIO	media.h	260;"	d
MEDIA_INTF_T_V4L_SUBDEV	media.h	261;"	d
MEDIA_INTF_T_V4L_SWRADIO	media.h	262;"	d
MEDIA_INTF_T_V4L_TOUCH	media.h	263;"	d
MEDIA_INTF_T_V4L_VBI	media.h	259;"	d
MEDIA_INTF_T_V4L_VIDEO	media.h	258;"	d
MEDIA_IOC_DEVICE_INFO	media.h	367;"	d
MEDIA_IOC_ENUM_ENTITIES	media.h	368;"	d
MEDIA_IOC_ENUM_LINKS	media.h	369;"	d
MEDIA_IOC_G_TOPOLOGY	media.h	371;"	d
MEDIA_IOC_SETUP_LINK	media.h	370;"	d
MEDIA_LNK_FL_DATA_LINK	media.h	226;"	d
MEDIA_LNK_FL_DYNAMIC	media.h	223;"	d
MEDIA_LNK_FL_ENABLED	media.h	221;"	d
MEDIA_LNK_FL_IMMUTABLE	media.h	222;"	d
MEDIA_LNK_FL_INTERFACE_LINK	media.h	227;"	d
MEDIA_LNK_FL_LINK_TYPE	media.h	225;"	d
MEDIA_PAD_FL_MUST_CONNECT	media.h	212;"	d
MEDIA_PAD_FL_SINK	media.h	210;"	d
MEDIA_PAD_FL_SOURCE	media.h	211;"	d
MEDIA_V2_ENTITY_HAS_FLAGS	media.h	291;"	d
MEDIA_V2_PAD_HAS_INDEX	media.h	326;"	d
MEDIA_V4L2_CLK_H	v4l2-clk.h	15;"	d
MEI_CL_MODULE_PREFIX	mod_devicetable.h	659;"	d
MEI_CL_NAME_SIZE	mod_devicetable.h	660;"	d
MEI_CL_VERSION_ANY	mod_devicetable.h	661;"	d
MEM2MEM_ENT_TYPE_PROC	v4l2-mem2mem.c	/^	MEM2MEM_ENT_TYPE_PROC$/;"	e	enum:v4l2_m2m_entity_type	file:
MEM2MEM_ENT_TYPE_SINK	v4l2-mem2mem.c	/^	MEM2MEM_ENT_TYPE_SINK,$/;"	e	enum:v4l2_m2m_entity_type	file:
MEM2MEM_ENT_TYPE_SOURCE	v4l2-mem2mem.c	/^	MEM2MEM_ENT_TYPE_SOURCE,$/;"	e	enum:v4l2_m2m_entity_type	file:
MHz	dvb_frontend.h	57;"	d
MODULE_ALIAS	module.h	165;"	d
MODULE_ALIAS_CHARDEV	device.h	1575;"	d
MODULE_ALIAS_CHARDEV_MAJOR	device.h	1577;"	d
MODULE_ARCH_INIT	module.h	487;"	d
MODULE_AUTHOR	module.h	206;"	d
MODULE_DESCRIPTION	module.h	209;"	d
MODULE_DEVICE_TABLE	module.h	213;"	d
MODULE_DEVICE_TABLE	module.h	217;"	d
MODULE_FIRMWARE	module.h	260;"	d
MODULE_INFO	module.h	162;"	d
MODULE_LICENSE	module.h	200;"	d
MODULE_NAME_LEN	module.h	34;"	d
MODULE_SIG_STRING	module.h	29;"	d
MODULE_SOFTDEP	module.h	170;"	d
MODULE_STATE_COMING	module.h	/^	MODULE_STATE_COMING,	\/* Full formed, running module_init. *\/$/;"	e	enum:module_state
MODULE_STATE_GOING	module.h	/^	MODULE_STATE_GOING,	\/* Going away. *\/$/;"	e	enum:module_state
MODULE_STATE_LIVE	module.h	/^	MODULE_STATE_LIVE,	\/* Normal state. *\/$/;"	e	enum:module_state
MODULE_STATE_UNFORMED	module.h	/^	MODULE_STATE_UNFORMED,	\/* Still setting it up. *\/$/;"	e	enum:module_state
MODULE_SUPPORTED_DEVICE	module.h	32;"	d
MODULE_VERSION	module.h	238;"	d
MODULE_VERSION	module.h	240;"	d
MS_TO_NS	rc-core.h	331;"	d
MS_TO_US	rc-core.h	330;"	d
NOT_GPL_ONLY	module.h	/^		NOT_GPL_ONLY,$/;"	e	enum:symsearch::__anon27
NR_FWNODE_REFERENCE_ARGS	fwnode.h	37;"	d
NR_OF_V4L2_FWNODE_BUS_TYPE	v4l2-fwnode.c	/^	NR_OF_V4L2_FWNODE_BUS_TYPE,$/;"	e	enum:v4l2_fwnode_bus_type	file:
NUM_FLASH_CTRLS	v4l2-flash-led-class.c	/^	NUM_FLASH_CTRLS,$/;"	e	enum:ctrl_init_data_id	file:
PANIC_CPU_INVALID	kernel.h	546;"	d
PAT_PIPE	ffs-test.c	/^enum pattern { PAT_ZERO, PAT_SEQ, PAT_PIPE };$/;"	e	enum:pattern	file:
PAT_SEQ	ffs-test.c	/^enum pattern { PAT_ZERO, PAT_SEQ, PAT_PIPE };$/;"	e	enum:pattern	file:
PAT_ZERO	ffs-test.c	/^enum pattern { PAT_ZERO, PAT_SEQ, PAT_PIPE };$/;"	e	enum:pattern	file:
PA_HVERSION_ANY_ID	mod_devicetable.h	365;"	d
PA_HVERSION_REV_ANY_ID	mod_devicetable.h	364;"	d
PA_HWTYPE_ANY_ID	mod_devicetable.h	363;"	d
PA_SVERSION_ANY_ID	mod_devicetable.h	366;"	d
PCI_ANY_ID	mod_devicetable.h	17;"	d
PCI_EPF_MODULE_PREFIX	mod_devicetable.h	444;"	d
PCI_EPF_NAME_SIZE	mod_devicetable.h	443;"	d
PCMCIA_DEV_ID_MATCH_ANONYMOUS	mod_devicetable.h	290;"	d
PCMCIA_DEV_ID_MATCH_CARD_ID	mod_devicetable.h	281;"	d
PCMCIA_DEV_ID_MATCH_DEVICE_NO	mod_devicetable.h	288;"	d
PCMCIA_DEV_ID_MATCH_FAKE_CIS	mod_devicetable.h	289;"	d
PCMCIA_DEV_ID_MATCH_FUNCTION	mod_devicetable.h	283;"	d
PCMCIA_DEV_ID_MATCH_FUNC_ID	mod_devicetable.h	282;"	d
PCMCIA_DEV_ID_MATCH_MANF_ID	mod_devicetable.h	280;"	d
PCMCIA_DEV_ID_MATCH_PROD_ID1	mod_devicetable.h	284;"	d
PCMCIA_DEV_ID_MATCH_PROD_ID2	mod_devicetable.h	285;"	d
PCMCIA_DEV_ID_MATCH_PROD_ID3	mod_devicetable.h	286;"	d
PCMCIA_DEV_ID_MATCH_PROD_ID4	mod_devicetable.h	287;"	d
PHYS_ADDR_MAX	kernel.h	32;"	d
PLATFORM_MODULE_PREFIX	mod_devicetable.h	544;"	d
PLATFORM_NAME_SIZE	mod_devicetable.h	543;"	d
PMSG_AUTO_RESUME	pm.h	480;"	d
PMSG_AUTO_SUSPEND	pm.h	478;"	d
PMSG_FREEZE	pm.h	464;"	d
PMSG_HIBERNATE	pm.h	467;"	d
PMSG_INVALID	pm.h	462;"	d
PMSG_IS_AUTO	pm.h	483;"	d
PMSG_ON	pm.h	463;"	d
PMSG_QUIESCE	pm.h	465;"	d
PMSG_RECOVER	pm.h	471;"	d
PMSG_REMOTE_RESUME	pm.h	476;"	d
PMSG_RESTORE	pm.h	470;"	d
PMSG_RESUME	pm.h	468;"	d
PMSG_SUSPEND	pm.h	466;"	d
PMSG_THAW	pm.h	469;"	d
PMSG_USER_RESUME	pm.h	474;"	d
PMSG_USER_SUSPEND	pm.h	472;"	d
PM_EVENT_AUTO	pm.h	453;"	d
PM_EVENT_AUTO_RESUME	pm.h	460;"	d
PM_EVENT_AUTO_SUSPEND	pm.h	459;"	d
PM_EVENT_FREEZE	pm.h	443;"	d
PM_EVENT_HIBERNATE	pm.h	445;"	d
PM_EVENT_INVALID	pm.h	441;"	d
PM_EVENT_ON	pm.h	442;"	d
PM_EVENT_PRETHAW	pm.h	676;"	d
PM_EVENT_QUIESCE	pm.h	446;"	d
PM_EVENT_RECOVER	pm.h	450;"	d
PM_EVENT_REMOTE	pm.h	452;"	d
PM_EVENT_REMOTE_RESUME	pm.h	458;"	d
PM_EVENT_RESTORE	pm.h	449;"	d
PM_EVENT_RESUME	pm.h	447;"	d
PM_EVENT_SLEEP	pm.h	455;"	d
PM_EVENT_SUSPEND	pm.h	444;"	d
PM_EVENT_THAW	pm.h	448;"	d
PM_EVENT_USER	pm.h	451;"	d
PM_EVENT_USER_RESUME	pm.h	457;"	d
PM_EVENT_USER_SUSPEND	pm.h	456;"	d
PNP_ID_LEN	mod_devicetable.h	198;"	d
PNP_MAX_DEVICES	mod_devicetable.h	199;"	d
POLY	i2c-core-smbus.c	29;"	d	file:
POST_RATE_CHANGE	clk.h	43;"	d
PRE_RATE_CHANGE	clk.h	42;"	d
PROBE_DEFAULT_STRATEGY	device.h	/^	PROBE_DEFAULT_STRATEGY,$/;"	e	enum:probe_type
PROBE_FORCE_SYNCHRONOUS	device.h	/^	PROBE_FORCE_SYNCHRONOUS,$/;"	e	enum:probe_type
PROBE_PREFER_ASYNCHRONOUS	device.h	/^	PROBE_PREFER_ASYNCHRONOUS,$/;"	e	enum:probe_type
PROPERTY_ENTRY_BOOL	property.h	266;"	d
PROPERTY_ENTRY_INTEGER	property.h	241;"	d
PROPERTY_ENTRY_INTEGER_ARRAY	property.h	214;"	d
PROPERTY_ENTRY_STRING	property.h	258;"	d
PROPERTY_ENTRY_STRING_ARRAY	property.h	232;"	d
PROPERTY_ENTRY_U16	property.h	251;"	d
PROPERTY_ENTRY_U16_ARRAY	property.h	225;"	d
PROPERTY_ENTRY_U32	property.h	253;"	d
PROPERTY_ENTRY_U32_ARRAY	property.h	227;"	d
PROPERTY_ENTRY_U64	property.h	255;"	d
PROPERTY_ENTRY_U64_ARRAY	property.h	229;"	d
PROPERTY_ENTRY_U8	property.h	249;"	d
PROPERTY_ENTRY_U8_ARRAY	property.h	223;"	d
PTR_ALIGN	kernel.h	61;"	d
QCIF_HEIGHT	v4l2-image-sizes.h	17;"	d
QCIF_WIDTH	v4l2-image-sizes.h	16;"	d
QQCIF_HEIGHT	v4l2-image-sizes.h	20;"	d
QQCIF_WIDTH	v4l2-image-sizes.h	19;"	d
QQVGA_HEIGHT	v4l2-image-sizes.h	23;"	d
QQVGA_WIDTH	v4l2-image-sizes.h	22;"	d
QVGA_HEIGHT	v4l2-image-sizes.h	26;"	d
QVGA_WIDTH	v4l2-image-sizes.h	25;"	d
RC_DRIVER_IR_RAW	rc-core.h	/^	RC_DRIVER_IR_RAW,$/;"	e	enum:rc_driver_type
RC_DRIVER_IR_RAW_TX	rc-core.h	/^	RC_DRIVER_IR_RAW_TX,$/;"	e	enum:rc_driver_type
RC_DRIVER_SCANCODE	rc-core.h	/^	RC_DRIVER_SCANCODE = 0,$/;"	e	enum:rc_driver_type
RC_FILTER_MAX	rc-core.h	/^	RC_FILTER_MAX$/;"	e	enum:rc_filter_type
RC_FILTER_NORMAL	rc-core.h	/^	RC_FILTER_NORMAL = 0,$/;"	e	enum:rc_filter_type
RC_FILTER_WAKEUP	rc-core.h	/^	RC_FILTER_WAKEUP,$/;"	e	enum:rc_filter_type
RC_MAP_ADSTECH_DVB_T_PCI	rc-map.h	160;"	d
RC_MAP_ALINK_DTU_M	rc-map.h	161;"	d
RC_MAP_ANYSEE	rc-map.h	162;"	d
RC_MAP_APAC_VIEWCOMP	rc-map.h	163;"	d
RC_MAP_ASTROMETA_T2HYBRID	rc-map.h	164;"	d
RC_MAP_ASUS_PC39	rc-map.h	165;"	d
RC_MAP_ASUS_PS3_100	rc-map.h	166;"	d
RC_MAP_ATI_TV_WONDER_HD_600	rc-map.h	167;"	d
RC_MAP_ATI_X10	rc-map.h	168;"	d
RC_MAP_AVERMEDIA	rc-map.h	175;"	d
RC_MAP_AVERMEDIA_A16D	rc-map.h	169;"	d
RC_MAP_AVERMEDIA_CARDBUS	rc-map.h	170;"	d
RC_MAP_AVERMEDIA_DVBT	rc-map.h	171;"	d
RC_MAP_AVERMEDIA_M135A	rc-map.h	172;"	d
RC_MAP_AVERMEDIA_M733A_RM_K6	rc-map.h	173;"	d
RC_MAP_AVERMEDIA_RM_KS	rc-map.h	174;"	d
RC_MAP_AVERTV_303	rc-map.h	176;"	d
RC_MAP_AZUREWAVE_AD_TU700	rc-map.h	177;"	d
RC_MAP_BEHOLD	rc-map.h	179;"	d
RC_MAP_BEHOLD_COLUMBUS	rc-map.h	178;"	d
RC_MAP_BUDGET_CI_OLD	rc-map.h	180;"	d
RC_MAP_CEC	rc-map.h	181;"	d
RC_MAP_CINERGY	rc-map.h	183;"	d
RC_MAP_CINERGY_1400	rc-map.h	182;"	d
RC_MAP_D680_DMB	rc-map.h	184;"	d
RC_MAP_DELOCK_61959	rc-map.h	185;"	d
RC_MAP_DIB0700_NEC_TABLE	rc-map.h	186;"	d
RC_MAP_DIB0700_RC5_TABLE	rc-map.h	187;"	d
RC_MAP_DIGITALNOW_TINYTWIN	rc-map.h	188;"	d
RC_MAP_DIGITTRADE	rc-map.h	189;"	d
RC_MAP_DM1105_NEC	rc-map.h	190;"	d
RC_MAP_DNTV_LIVE_DVBT_PRO	rc-map.h	191;"	d
RC_MAP_DNTV_LIVE_DVB_T	rc-map.h	192;"	d
RC_MAP_DTT200U	rc-map.h	193;"	d
RC_MAP_DVBSKY	rc-map.h	194;"	d
RC_MAP_DVICO_MCE	rc-map.h	195;"	d
RC_MAP_DVICO_PORTABLE	rc-map.h	196;"	d
RC_MAP_EMPTY	rc-map.h	197;"	d
RC_MAP_EM_TERRATEC	rc-map.h	198;"	d
RC_MAP_ENCORE_ENLTV	rc-map.h	201;"	d
RC_MAP_ENCORE_ENLTV2	rc-map.h	199;"	d
RC_MAP_ENCORE_ENLTV_FM53	rc-map.h	200;"	d
RC_MAP_EVGA_INDTUBE	rc-map.h	202;"	d
RC_MAP_EZTV	rc-map.h	203;"	d
RC_MAP_FLYDVB	rc-map.h	204;"	d
RC_MAP_FLYVIDEO	rc-map.h	205;"	d
RC_MAP_FUSIONHDTV_MCE	rc-map.h	206;"	d
RC_MAP_GADMEI_RM008Z	rc-map.h	207;"	d
RC_MAP_GEEKBOX	rc-map.h	208;"	d
RC_MAP_GENIUS_TVGO_A11MCE	rc-map.h	209;"	d
RC_MAP_GOTVIEW7135	rc-map.h	210;"	d
RC_MAP_HAUPPAUGE	rc-map.h	250;"	d
RC_MAP_HAUPPAUGE_NEW	rc-map.h	211;"	d
RC_MAP_HISI_POPLAR	rc-map.h	212;"	d
RC_MAP_HISI_TV_DEMO	rc-map.h	213;"	d
RC_MAP_IMON_MCE	rc-map.h	214;"	d
RC_MAP_IMON_PAD	rc-map.h	215;"	d
RC_MAP_IMON_RSC	rc-map.h	216;"	d
RC_MAP_IODATA_BCTV7E	rc-map.h	217;"	d
RC_MAP_IT913X_V1	rc-map.h	218;"	d
RC_MAP_IT913X_V2	rc-map.h	219;"	d
RC_MAP_KAIOMY	rc-map.h	220;"	d
RC_MAP_KWORLD_315U	rc-map.h	221;"	d
RC_MAP_KWORLD_PC150U	rc-map.h	222;"	d
RC_MAP_KWORLD_PLUS_TV_ANALOG	rc-map.h	223;"	d
RC_MAP_LEADTEK_Y04G0051	rc-map.h	224;"	d
RC_MAP_LME2510	rc-map.h	225;"	d
RC_MAP_MANLI	rc-map.h	226;"	d
RC_MAP_MEDION_X10	rc-map.h	227;"	d
RC_MAP_MEDION_X10_DIGITAINER	rc-map.h	228;"	d
RC_MAP_MEDION_X10_OR2X	rc-map.h	229;"	d
RC_MAP_MSI_DIGIVOX_II	rc-map.h	230;"	d
RC_MAP_MSI_DIGIVOX_III	rc-map.h	231;"	d
RC_MAP_MSI_TVANYWHERE	rc-map.h	233;"	d
RC_MAP_MSI_TVANYWHERE_PLUS	rc-map.h	232;"	d
RC_MAP_NEBULA	rc-map.h	234;"	d
RC_MAP_NEC_TERRATEC_CINERGY_XS	rc-map.h	235;"	d
RC_MAP_NORWOOD	rc-map.h	236;"	d
RC_MAP_NPGTECH	rc-map.h	237;"	d
RC_MAP_PCTV_SEDNA	rc-map.h	238;"	d
RC_MAP_PINNACLE_COLOR	rc-map.h	239;"	d
RC_MAP_PINNACLE_GREY	rc-map.h	240;"	d
RC_MAP_PINNACLE_PCTV_HD	rc-map.h	241;"	d
RC_MAP_PIXELVIEW	rc-map.h	243;"	d
RC_MAP_PIXELVIEW_002T	rc-map.h	244;"	d
RC_MAP_PIXELVIEW_MK12	rc-map.h	245;"	d
RC_MAP_PIXELVIEW_NEW	rc-map.h	242;"	d
RC_MAP_POWERCOLOR_REAL_ANGEL	rc-map.h	246;"	d
RC_MAP_PROTEUS_2309	rc-map.h	247;"	d
RC_MAP_PURPLETV	rc-map.h	248;"	d
RC_MAP_PV951	rc-map.h	249;"	d
RC_MAP_RC5_TV	rc-map.h	251;"	d
RC_MAP_RC6_MCE	rc-map.h	252;"	d
RC_MAP_REAL_AUDIO_220_32_KEYS	rc-map.h	253;"	d
RC_MAP_REDDO	rc-map.h	254;"	d
RC_MAP_SNAPSTREAM_FIREFLY	rc-map.h	255;"	d
RC_MAP_STREAMZAP	rc-map.h	256;"	d
RC_MAP_SU3000	rc-map.h	279;"	d
RC_MAP_TANGO	rc-map.h	257;"	d
RC_MAP_TBS_NEC	rc-map.h	258;"	d
RC_MAP_TECHNISAT_TS35	rc-map.h	259;"	d
RC_MAP_TECHNISAT_USB2	rc-map.h	260;"	d
RC_MAP_TERRATEC_CINERGY_C_PCI	rc-map.h	261;"	d
RC_MAP_TERRATEC_CINERGY_S2_HD	rc-map.h	262;"	d
RC_MAP_TERRATEC_CINERGY_XS	rc-map.h	263;"	d
RC_MAP_TERRATEC_SLIM	rc-map.h	264;"	d
RC_MAP_TERRATEC_SLIM_2	rc-map.h	265;"	d
RC_MAP_TEVII_NEC	rc-map.h	266;"	d
RC_MAP_TIVO	rc-map.h	267;"	d
RC_MAP_TOTAL_MEDIA_IN_HAND	rc-map.h	268;"	d
RC_MAP_TOTAL_MEDIA_IN_HAND_02	rc-map.h	269;"	d
RC_MAP_TREKSTOR	rc-map.h	270;"	d
RC_MAP_TT_1500	rc-map.h	271;"	d
RC_MAP_TWINHAN_DTV_CAB_CI	rc-map.h	272;"	d
RC_MAP_TWINHAN_VP1027_DVBS	rc-map.h	273;"	d
RC_MAP_VIDEOMATE_K100	rc-map.h	274;"	d
RC_MAP_VIDEOMATE_S350	rc-map.h	275;"	d
RC_MAP_VIDEOMATE_TV_PVR	rc-map.h	276;"	d
RC_MAP_WINFAST	rc-map.h	277;"	d
RC_MAP_WINFAST_USBII_DELUXE	rc-map.h	278;"	d
RC_MAP_ZX_IRDEC	rc-map.h	280;"	d
RC_PROTO_BIT_ALL	rc-map.h	41;"	d
RC_PROTO_BIT_ALL_IR_DECODER	rc-map.h	56;"	d
RC_PROTO_BIT_ALL_IR_ENCODER	rc-map.h	69;"	d
RC_PROTO_BIT_CEC	rc-map.h	38;"	d
RC_PROTO_BIT_IMON	rc-map.h	39;"	d
RC_PROTO_BIT_JVC	rc-map.h	21;"	d
RC_PROTO_BIT_MCIR2_KBD	rc-map.h	29;"	d
RC_PROTO_BIT_MCIR2_MSE	rc-map.h	30;"	d
RC_PROTO_BIT_NEC	rc-map.h	25;"	d
RC_PROTO_BIT_NEC32	rc-map.h	27;"	d
RC_PROTO_BIT_NECX	rc-map.h	26;"	d
RC_PROTO_BIT_NONE	rc-map.h	15;"	d
RC_PROTO_BIT_OTHER	rc-map.h	17;"	d
RC_PROTO_BIT_RC5	rc-map.h	18;"	d
RC_PROTO_BIT_RC5X_20	rc-map.h	19;"	d
RC_PROTO_BIT_RC5_SZ	rc-map.h	20;"	d
RC_PROTO_BIT_RC6_0	rc-map.h	31;"	d
RC_PROTO_BIT_RC6_6A_20	rc-map.h	32;"	d
RC_PROTO_BIT_RC6_6A_24	rc-map.h	33;"	d
RC_PROTO_BIT_RC6_6A_32	rc-map.h	34;"	d
RC_PROTO_BIT_RC6_MCE	rc-map.h	35;"	d
RC_PROTO_BIT_SANYO	rc-map.h	28;"	d
RC_PROTO_BIT_SHARP	rc-map.h	36;"	d
RC_PROTO_BIT_SONY12	rc-map.h	22;"	d
RC_PROTO_BIT_SONY15	rc-map.h	23;"	d
RC_PROTO_BIT_SONY20	rc-map.h	24;"	d
RC_PROTO_BIT_UNKNOWN	rc-map.h	16;"	d
RC_PROTO_BIT_XMP	rc-map.h	37;"	d
RC_SCANCODE_NEC	rc-map.h	84;"	d
RC_SCANCODE_NEC32	rc-map.h	86;"	d
RC_SCANCODE_NECX	rc-map.h	85;"	d
RC_SCANCODE_OTHER	rc-map.h	83;"	d
RC_SCANCODE_RC5	rc-map.h	87;"	d
RC_SCANCODE_RC5_SZ	rc-map.h	88;"	d
RC_SCANCODE_RC6_0	rc-map.h	89;"	d
RC_SCANCODE_RC6_6A	rc-map.h	90;"	d
RC_SCANCODE_UNKNOWN	rc-map.h	82;"	d
READ	kernel.h	65;"	d
REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD	kernel.h	1021;"	d
RECOVERY_CLK_CNT	i2c-core-base.c	183;"	d	file:
RECOVERY_NDELAY	i2c-core-base.c	182;"	d	file:
REGULATOR_ERROR_FAIL	consumer1.h	140;"	d
REGULATOR_ERROR_OVER_CURRENT	consumer1.h	138;"	d
REGULATOR_ERROR_OVER_TEMP	consumer1.h	141;"	d
REGULATOR_ERROR_REGULATION_OUT	consumer1.h	139;"	d
REGULATOR_ERROR_UNDER_VOLTAGE	consumer1.h	137;"	d
REGULATOR_EVENT_ABORT_DISABLE	consumer1.h	122;"	d
REGULATOR_EVENT_ABORT_VOLTAGE_CHANGE	consumer1.h	120;"	d
REGULATOR_EVENT_DISABLE	consumer1.h	118;"	d
REGULATOR_EVENT_ENABLE	consumer1.h	123;"	d
REGULATOR_EVENT_FAIL	consumer1.h	114;"	d
REGULATOR_EVENT_FORCE_DISABLE	consumer1.h	116;"	d
REGULATOR_EVENT_OVER_CURRENT	consumer1.h	112;"	d
REGULATOR_EVENT_OVER_TEMP	consumer1.h	115;"	d
REGULATOR_EVENT_PRE_DISABLE	consumer1.h	121;"	d
REGULATOR_EVENT_PRE_VOLTAGE_CHANGE	consumer1.h	119;"	d
REGULATOR_EVENT_REGULATION_OUT	consumer1.h	113;"	d
REGULATOR_EVENT_UNDER_VOLTAGE	consumer1.h	111;"	d
REGULATOR_EVENT_VOLTAGE_CHANGE	consumer1.h	117;"	d
REGULATOR_MODE_FAST	consumer1.h	84;"	d
REGULATOR_MODE_IDLE	consumer1.h	86;"	d
REGULATOR_MODE_INVALID	consumer1.h	83;"	d
REGULATOR_MODE_NORMAL	consumer1.h	85;"	d
REGULATOR_MODE_STANDBY	consumer1.h	87;"	d
REG_CONFIG_FLIP_TEST_PATTERN	imx258.c	74;"	d	file:
REG_CONFIG_MIRROR_FLIP	imx258.c	73;"	d	file:
REG_MIRROR_FLIP_CONTROL	imx258.c	72;"	d	file:
RELOCS_H	relocs.h	3;"	d
REL_TYPE	relocs.c	63;"	d	file:
REL_TYPE	relocs.c	82;"	d	file:
REPEAT_BYTE	kernel.h	55;"	d
RIO_ANY_ID	mod_devicetable.h	681;"	d
ROUND_TO_RANGE	v4l2-ctrls.c	1534;"	d	file:
RPMSG_DEVICE_MODALIAS_FMT	mod_devicetable.h	425;"	d
RPMSG_NAME_SIZE	mod_devicetable.h	424;"	d
RPM_ACTIVE	pm.h	/^	RPM_ACTIVE = 0,$/;"	e	enum:rpm_status
RPM_ASYNC	pm_runtime.h	19;"	d
RPM_AUTO	pm_runtime.h	24;"	d
RPM_GET_PUT	pm_runtime.h	22;"	d
RPM_NOWAIT	pm_runtime.h	20;"	d
RPM_REQ_AUTOSUSPEND	pm.h	/^	RPM_REQ_AUTOSUSPEND,$/;"	e	enum:rpm_request
RPM_REQ_IDLE	pm.h	/^	RPM_REQ_IDLE,$/;"	e	enum:rpm_request
RPM_REQ_NONE	pm.h	/^	RPM_REQ_NONE = 0,$/;"	e	enum:rpm_request
RPM_REQ_RESUME	pm.h	/^	RPM_REQ_RESUME,$/;"	e	enum:rpm_request
RPM_REQ_SUSPEND	pm.h	/^	RPM_REQ_SUSPEND,$/;"	e	enum:rpm_request
RPM_RESUMING	pm.h	/^	RPM_RESUMING,$/;"	e	enum:rpm_status
RPM_SUSPENDED	pm.h	/^	RPM_SUSPENDED,$/;"	e	enum:rpm_status
RPM_SUSPENDING	pm.h	/^	RPM_SUSPENDING,$/;"	e	enum:rpm_status
R_MIPS_PC21_S2	relocs.h	25;"	d
R_MIPS_PC26_S2	relocs.h	29;"	d
S16_MAX	kernel.h	38;"	d
S16_MIN	kernel.h	39;"	d
S32_MAX	kernel.h	41;"	d
S32_MIN	kernel.h	42;"	d
S64_MAX	kernel.h	44;"	d
S64_MIN	kernel.h	45;"	d
S8_MAX	kernel.h	35;"	d
S8_MIN	kernel.h	36;"	d
SDIO_ANY_ID	mod_devicetable.h	370;"	d
SERIO_ANY	mod_devicetable.h	215;"	d
SET_LATE_SYSTEM_SLEEP_PM_OPS	pm.h	329;"	d
SET_LATE_SYSTEM_SLEEP_PM_OPS	pm.h	337;"	d
SET_NOIRQ_SYSTEM_SLEEP_PM_OPS	pm.h	341;"	d
SET_NOIRQ_SYSTEM_SLEEP_PM_OPS	pm.h	349;"	d
SET_RUNTIME_PM_OPS	pm.h	353;"	d
SET_RUNTIME_PM_OPS	pm.h	358;"	d
SET_SYSTEM_SLEEP_PM_OPS	pm.h	317;"	d
SET_SYSTEM_SLEEP_PM_OPS	pm.h	325;"	d
SET_VALID_IOCTL	v4l2-dev.c	507;"	d	file:
SHRT_MAX	kernel.h	20;"	d
SHRT_MIN	kernel.h	21;"	d
SHT_REL_TYPE	relocs_32.c	8;"	d	file:
SHT_REL_TYPE	relocs_64.c	8;"	d	file:
SIMPLE_DEV_PM_OPS	pm.h	365;"	d
SIZE_MAX	kernel.h	31;"	d
SLIMBUS_MODULE_PREFIX	mod_devicetable.h	464;"	d
SLIMBUS_NAME_SIZE	mod_devicetable.h	463;"	d
SOCAM_DATAWIDTH	soc_camera.h	319;"	d
SOCAM_DATAWIDTH_10	soc_camera.h	323;"	d
SOCAM_DATAWIDTH_12	soc_camera.h	324;"	d
SOCAM_DATAWIDTH_15	soc_camera.h	325;"	d
SOCAM_DATAWIDTH_16	soc_camera.h	326;"	d
SOCAM_DATAWIDTH_18	soc_camera.h	327;"	d
SOCAM_DATAWIDTH_24	soc_camera.h	328;"	d
SOCAM_DATAWIDTH_4	soc_camera.h	320;"	d
SOCAM_DATAWIDTH_8	soc_camera.h	321;"	d
SOCAM_DATAWIDTH_9	soc_camera.h	322;"	d
SOCAM_DATAWIDTH_MASK	soc_camera.h	330;"	d
SOCAM_HOST_CAP_STRIDE	soc_camera.h	61;"	d
SOCAM_SENSE_PCLK_CHANGED	soc_camera.h	293;"	d
SOCAM_SENSOR_INVERT_DATA	soc_camera.h	127;"	d
SOCAM_SENSOR_INVERT_HSYNC	soc_camera.h	125;"	d
SOCAM_SENSOR_INVERT_MCLK	soc_camera.h	124;"	d
SOCAM_SENSOR_INVERT_PCLK	soc_camera.h	123;"	d
SOCAM_SENSOR_INVERT_VSYNC	soc_camera.h	126;"	d
SOCAM_SUBDEV_DATA_PROCESSOR	soc_camera.h	/^	SOCAM_SUBDEV_DATA_PROCESSOR,$/;"	e	enum:soc_camera_subdev_role
SOCAM_SUBDEV_DATA_SINK	soc_camera.h	/^	SOCAM_SUBDEV_DATA_SINK,$/;"	e	enum:soc_camera_subdev_role
SOCAM_SUBDEV_DATA_SOURCE	soc_camera.h	/^	SOCAM_SUBDEV_DATA_SOURCE = 1,$/;"	e	enum:soc_camera_subdev_role
SOC_CAMERA_H	soc_camera.h	13;"	d
SPEED_PKTS_INTERVAL	dvb_demux.h	61;"	d
SPI_MODULE_PREFIX	mod_devicetable.h	454;"	d
SPI_NAME_SIZE	mod_devicetable.h	453;"	d
SPMI_MODULE_PREFIX	mod_devicetable.h	486;"	d
SPMI_NAME_SIZE	mod_devicetable.h	485;"	d
SSB_ANY_ID	mod_devicetable.h	390;"	d
SSB_ANY_REV	mod_devicetable.h	391;"	d
SSB_ANY_VENDOR	mod_devicetable.h	389;"	d
SSB_DEVICE	mod_devicetable.h	386;"	d
STACK_MAGIC	kernel.h	47;"	d
STROBE_SOURCE	v4l2-flash-led-class.c	/^	STROBE_SOURCE,$/;"	e	enum:ctrl_init_data_id	file:
STROBE_STATUS	v4l2-flash-led-class.c	/^	STROBE_STATUS,$/;"	e	enum:ctrl_init_data_id	file:
STROBE_STOP	v4l2-flash-led-class.c	/^	STROBE_STOP,$/;"	e	enum:ctrl_init_data_id	file:
STR_INTERFACE	ffs-test.c	342;"	d	file:
STR_INTERFACE_	ffs-test.c	321;"	d	file:
SVGA_HEIGHT	v4l2-image-sizes.h	29;"	d
SVGA_WIDTH	v4l2-image-sizes.h	28;"	d
SXGA_HEIGHT	v4l2-image-sizes.h	32;"	d
SXGA_WIDTH	v4l2-image-sizes.h	31;"	d
SYSFS_PREALLOC	sysfs1.h	99;"	d
SYSTEM_BOOTING	kernel.h	/^	SYSTEM_BOOTING,$/;"	e	enum:system_states
SYSTEM_HALT	kernel.h	/^	SYSTEM_HALT,$/;"	e	enum:system_states
SYSTEM_POWER_OFF	kernel.h	/^	SYSTEM_POWER_OFF,$/;"	e	enum:system_states
SYSTEM_RESTART	kernel.h	/^	SYSTEM_RESTART,$/;"	e	enum:system_states
SYSTEM_RUNNING	kernel.h	/^	SYSTEM_RUNNING,$/;"	e	enum:system_states
SYSTEM_SCHEDULING	kernel.h	/^	SYSTEM_SCHEDULING,$/;"	e	enum:system_states
SYSTEM_SUSPEND	kernel.h	/^	SYSTEM_SUSPEND,$/;"	e	enum:system_states
S_ABS	relocs.h	/^	S_ABS,$/;"	e	enum:symtype
S_LIN	relocs.h	/^	S_LIN,$/;"	e	enum:symtype
S_NSYMTYPES	relocs.h	/^	S_NSYMTYPES$/;"	e	enum:symtype
S_REL	relocs.h	/^	S_REL,$/;"	e	enum:symtype
S_SEG	relocs.h	/^	S_SEG,$/;"	e	enum:symtype
TAINT_AUX	kernel.h	600;"	d
TAINT_BAD_PAGE	kernel.h	589;"	d
TAINT_CPU_OUT_OF_SPEC	kernel.h	586;"	d
TAINT_CRAP	kernel.h	594;"	d
TAINT_DIE	kernel.h	591;"	d
TAINT_FIRMWARE_WORKAROUND	kernel.h	595;"	d
TAINT_FLAGS_COUNT	kernel.h	602;"	d
TAINT_FORCED_MODULE	kernel.h	585;"	d
TAINT_FORCED_RMMOD	kernel.h	587;"	d
TAINT_LIVEPATCH	kernel.h	599;"	d
TAINT_MACHINE_CHECK	kernel.h	588;"	d
TAINT_OOT_MODULE	kernel.h	596;"	d
TAINT_OVERRIDDEN_ACPI_TABLE	kernel.h	592;"	d
TAINT_PROPRIETARY_MODULE	kernel.h	584;"	d
TAINT_RANDSTRUCT	kernel.h	601;"	d
TAINT_SOFTLOCKUP	kernel.h	598;"	d
TAINT_UNSIGNED_MODULE	kernel.h	597;"	d
TAINT_USER	kernel.h	590;"	d
TAINT_WARN	kernel.h	593;"	d
TBSVC_MATCH_PROTOCOL_ID	mod_devicetable.h	745;"	d
TBSVC_MATCH_PROTOCOL_KEY	mod_devicetable.h	744;"	d
TBSVC_MATCH_PROTOCOL_REVISION	mod_devicetable.h	747;"	d
TBSVC_MATCH_PROTOCOL_VERSION	mod_devicetable.h	746;"	d
TDA9887_AUTOMUTE	tuner.h	165;"	d
TDA9887_DEEMPHASIS_50	tuner.h	163;"	d
TDA9887_DEEMPHASIS_75	tuner.h	164;"	d
TDA9887_DEEMPHASIS_MASK	tuner.h	161;"	d
TDA9887_DEEMPHASIS_NONE	tuner.h	162;"	d
TDA9887_GAIN_NORMAL	tuner.h	167;"	d
TDA9887_GATING_18	tuner.h	166;"	d
TDA9887_INTERCARRIER	tuner.h	150;"	d
TDA9887_INTERCARRIER_NTSC	tuner.h	153;"	d
TDA9887_PORT1_ACTIVE	tuner.h	151;"	d
TDA9887_PORT1_INACTIVE	tuner.h	147;"	d
TDA9887_PORT2_ACTIVE	tuner.h	152;"	d
TDA9887_PORT2_INACTIVE	tuner.h	148;"	d
TDA9887_PRESENT	tuner.h	146;"	d
TDA9887_QSS	tuner.h	149;"	d
TDA9887_RIF_41_3	tuner.h	168;"	d
TDA9887_TOP	tuner.h	157;"	d
TDA9887_TOP_MASK	tuner.h	155;"	d
TDA9887_TOP_SET	tuner.h	156;"	d
TEST_CASES	testusb.c	51;"	d	file:
TORCH_INTENSITY	v4l2-flash-led-class.c	/^	TORCH_INTENSITY,$/;"	e	enum:ctrl_init_data_id	file:
TRANS_ABORT	v4l2-mem2mem.c	47;"	d	file:
TRANS_QUEUED	v4l2-mem2mem.c	43;"	d	file:
TRANS_RUNNING	v4l2-mem2mem.c	45;"	d	file:
TS_DECODER	demux.h	/^	TS_DECODER = 4,$/;"	e	enum:ts_filter_type
TS_DEMUX	demux.h	/^	TS_DEMUX = 8,$/;"	e	enum:ts_filter_type
TS_PACKET	demux.h	/^	TS_PACKET = 1,$/;"	e	enum:ts_filter_type
TS_PAYLOAD_ONLY	demux.h	/^	TS_PAYLOAD_ONLY = 2,$/;"	e	enum:ts_filter_type
TUNER_ABSENT	tuner.h	32;"	d
TUNER_ALPS_TSBB5_PAL_I	tuner.h	40;"	d
TUNER_ALPS_TSBC5_PAL	tuner.h	43;"	d
TUNER_ALPS_TSBE1_PAL	tuner.h	39;"	d
TUNER_ALPS_TSBE5_PAL	tuner.h	42;"	d
TUNER_ALPS_TSBH1_NTSC	tuner.h	38;"	d
TUNER_ALPS_TSHC6_NTSC	tuner.h	45;"	d
TUNER_HITACHI_NTSC	tuner.h	77;"	d
TUNER_LG_NTSC_FM	tuner.h	60;"	d
TUNER_LG_NTSC_NEW_TAPC	tuner.h	75;"	d
TUNER_LG_NTSC_TAPE	tuner.h	89;"	d
TUNER_LG_PAL	tuner.h	63;"	d
TUNER_LG_PAL_FM	tuner.h	62;"	d
TUNER_LG_PAL_I	tuner.h	59;"	d
TUNER_LG_PAL_I_FM	tuner.h	58;"	d
TUNER_LG_PAL_NEW_TAPC	tuner.h	73;"	d
TUNER_LG_TALN	tuner.h	113;"	d
TUNER_LG_TDVS_H06XF	tuner.h	111;"	d
TUNER_MICROTUNE_4042FI5	tuner.h	92;"	d
TUNER_MICROTUNE_4049FM5	tuner.h	87;"	d
TUNER_MT2032	tuner.h	68;"	d
TUNER_NUM_PADS	v4l2-mc.h	/^	TUNER_NUM_PADS$/;"	e	enum:tuner_pad_index
TUNER_NXP_TDA18271	tuner.h	133;"	d
TUNER_PAD_AUD_OUT	v4l2-mc.h	/^	TUNER_PAD_AUD_OUT,$/;"	e	enum:tuner_pad_index
TUNER_PAD_OUTPUT	v4l2-mc.h	/^	TUNER_PAD_OUTPUT,$/;"	e	enum:tuner_pad_index
TUNER_PAD_RF_INPUT	v4l2-mc.h	/^	TUNER_PAD_RF_INPUT,$/;"	e	enum:tuner_pad_index
TUNER_PANASONIC_VP27	tuner.h	88;"	d
TUNER_PARAM_TYPE_DIGITAL	tuner-types.h	/^	TUNER_PARAM_TYPE_DIGITAL,$/;"	e	enum:param_type
TUNER_PARAM_TYPE_NTSC	tuner-types.h	/^	TUNER_PARAM_TYPE_NTSC,$/;"	e	enum:param_type
TUNER_PARAM_TYPE_PAL	tuner-types.h	/^	TUNER_PARAM_TYPE_PAL,$/;"	e	enum:param_type
TUNER_PARAM_TYPE_RADIO	tuner-types.h	/^	TUNER_PARAM_TYPE_RADIO,$/;"	e	enum:param_type
TUNER_PARAM_TYPE_SECAM	tuner-types.h	/^	TUNER_PARAM_TYPE_SECAM,$/;"	e	enum:param_type
TUNER_PARTSNIC_PTI_5NF05	tuner.h	131;"	d
TUNER_PHILIPS_4IN1	tuner.h	82;"	d
TUNER_PHILIPS_CU1216L	tuner.h	132;"	d
TUNER_PHILIPS_FCV1236D	tuner.h	79;"	d
TUNER_PHILIPS_FM1216ME_MK3	tuner.h	74;"	d
TUNER_PHILIPS_FM1216MK5	tuner.h	128;"	d
TUNER_PHILIPS_FM1236_MK3	tuner.h	80;"	d
TUNER_PHILIPS_FM1256_IH3	tuner.h	94;"	d
TUNER_PHILIPS_FMD1216MEX_MK3	tuner.h	127;"	d
TUNER_PHILIPS_FMD1216ME_MK3	tuner.h	109;"	d
TUNER_PHILIPS_FQ1216AME_MK4	tuner.h	101;"	d
TUNER_PHILIPS_FQ1216LME_MK3	tuner.h	129;"	d
TUNER_PHILIPS_FQ1216ME	tuner.h	57;"	d
TUNER_PHILIPS_FQ1236A_MK4	tuner.h	102;"	d
TUNER_PHILIPS_FQ1236_MK5	tuner.h	135;"	d
TUNER_PHILIPS_FQ1286	tuner.h	97;"	d
TUNER_PHILIPS_NTSC	tuner.h	29;"	d
TUNER_PHILIPS_NTSC_M	tuner.h	48;"	d
TUNER_PHILIPS_PAL	tuner.h	33;"	d
TUNER_PHILIPS_PAL_DK	tuner.h	55;"	d
TUNER_PHILIPS_PAL_I	tuner.h	28;"	d
TUNER_PHILIPS_PAL_MK	tuner.h	78;"	d
TUNER_PHILIPS_SECAM	tuner.h	30;"	d
TUNER_PHILIPS_TD1316	tuner.h	114;"	d
TUNER_PHILIPS_TDA8290	tuner.h	98;"	d
TUNER_PHILIPS_TUV1236D	tuner.h	116;"	d
TUNER_SAMSUNG_TCPG_6121P30A	tuner.h	122;"	d
TUNER_SAMSUNG_TCPN_2121P30A	tuner.h	118;"	d
TUNER_SET_CONFIG	v4l2-common.h	267;"	d
TUNER_SHARP_2U5JF5540_NTSC	tuner.h	65;"	d
TUNER_SONY_BTF_PB463Z	tuner.h	143;"	d
TUNER_SONY_BTF_PG472Z	tuner.h	141;"	d
TUNER_SONY_BTF_PK467Z	tuner.h	142;"	d
TUNER_SONY_BTF_PXN01Z	tuner.h	134;"	d
TUNER_STATUS_LOCKED	dvb_frontend.h	245;"	d
TUNER_STATUS_STEREO	dvb_frontend.h	246;"	d
TUNER_Samsung_PAL_TCPM9091PD27	tuner.h	67;"	d
TUNER_TCL_2002MB	tuner.h	99;"	d
TUNER_TCL_2002N	tuner.h	93;"	d
TUNER_TCL_MF02GIP_5N	tuner.h	126;"	d
TUNER_TDA9887	tuner.h	123;"	d
TUNER_TEA5761	tuner.h	124;"	d
TUNER_TEA5767	tuner.h	108;"	d
TUNER_TEMIC_4006FH5_PAL	tuner.h	44;"	d
TUNER_TEMIC_4006FN5_MULTI_PAL	tuner.h	50;"	d
TUNER_TEMIC_4009FN5_MULTI_PAL_FM	tuner.h	64;"	d
TUNER_TEMIC_4009FR5_PAL	tuner.h	52;"	d
TUNER_TEMIC_4012FY5	tuner.h	70;"	d
TUNER_TEMIC_4036FY5_NTSC	tuner.h	37;"	d
TUNER_TEMIC_4039FR5_NTSC	tuner.h	53;"	d
TUNER_TEMIC_4046FM5	tuner.h	54;"	d
TUNER_TEMIC_4066FY5_PAL_I	tuner.h	49;"	d
TUNER_TEMIC_4106FH5	tuner.h	69;"	d
TUNER_TEMIC_4136FY5	tuner.h	72;"	d
TUNER_TEMIC_NTSC	tuner.h	34;"	d
TUNER_TEMIC_PAL	tuner.h	27;"	d
TUNER_TEMIC_PAL_DK	tuner.h	47;"	d
TUNER_TEMIC_PAL_I	tuner.h	35;"	d
TUNER_TENA_9533_DI	tuner.h	107;"	d
TUNER_TENA_TNF_5337	tuner.h	136;"	d
TUNER_THOMSON_DTT7610	tuner.h	96;"	d
TUNER_THOMSON_DTT761X	tuner.h	106;"	d
TUNER_THOMSON_FE6600	tuner.h	121;"	d
TUNER_TNF_5335MF	tuner.h	117;"	d
TUNER_TNF_8831BGFF	tuner.h	91;"	d
TUNER_XC2028	tuner.h	119;"	d
TUNER_XC4000	tuner.h	138;"	d
TUNER_XC5000	tuner.h	125;"	d
TUNER_XC5000C	tuner.h	139;"	d
TUNER_YMEC_TVF66T5_B_DFF	tuner.h	112;"	d
TUNER_YMEC_TVF_5533MF	tuner.h	104;"	d
TUNER_YMEC_TVF_8531MF	tuner.h	103;"	d
TVEEPROM_AUDPROC_INTERNAL	tveeprom.h	/^	TVEEPROM_AUDPROC_INTERNAL,$/;"	e	enum:tveeprom_audio_processor
TVEEPROM_AUDPROC_MSP	tveeprom.h	/^	TVEEPROM_AUDPROC_MSP,$/;"	e	enum:tveeprom_audio_processor
TVEEPROM_AUDPROC_NONE	tveeprom.h	/^	TVEEPROM_AUDPROC_NONE,$/;"	e	enum:tveeprom_audio_processor
TVEEPROM_AUDPROC_OTHER	tveeprom.h	/^	TVEEPROM_AUDPROC_OTHER,$/;"	e	enum:tveeprom_audio_processor
TYPEC_ANY_MODE	mod_devicetable.h	751;"	d
T_ANALOG_TV	tuner.h	/^	T_ANALOG_TV     = 1 << V4L2_TUNER_ANALOG_TV,$/;"	e	enum:tuner_mode
T_RADIO	tuner.h	/^	T_RADIO		= 1 << V4L2_TUNER_RADIO,$/;"	e	enum:tuner_mode
U16_MAX	kernel.h	37;"	d
U32_MAX	kernel.h	40;"	d
U64_MAX	kernel.h	43;"	d
U8_MAX	kernel.h	34;"	d
UINT_MAX	kernel.h	24;"	d
ULLONG_MAX	kernel.h	30;"	d
ULONG_MAX	kernel.h	27;"	d
UNIVERSAL_DEV_PM_OPS	pm.h	383;"	d
UNSET	tuner-core.c	44;"	d	file:
UNSET	videobuf-core.h	22;"	d
USBTEST_REQUEST	testusb.c	66;"	d	file:
USB_CLASS_PER_INTERFACE	testusb.c	75;"	d	file:
USB_CLASS_VENDOR_SPEC	testusb.c	76;"	d	file:
USB_DEVICE_ID_MATCH_DEV_CLASS	mod_devicetable.h	135;"	d
USB_DEVICE_ID_MATCH_DEV_HI	mod_devicetable.h	134;"	d
USB_DEVICE_ID_MATCH_DEV_LO	mod_devicetable.h	133;"	d
USB_DEVICE_ID_MATCH_DEV_PROTOCOL	mod_devicetable.h	137;"	d
USB_DEVICE_ID_MATCH_DEV_SUBCLASS	mod_devicetable.h	136;"	d
USB_DEVICE_ID_MATCH_INT_CLASS	mod_devicetable.h	138;"	d
USB_DEVICE_ID_MATCH_INT_NUMBER	mod_devicetable.h	141;"	d
USB_DEVICE_ID_MATCH_INT_PROTOCOL	mod_devicetable.h	140;"	d
USB_DEVICE_ID_MATCH_INT_SUBCLASS	mod_devicetable.h	139;"	d
USB_DEVICE_ID_MATCH_PRODUCT	mod_devicetable.h	132;"	d
USB_DEVICE_ID_MATCH_VENDOR	mod_devicetable.h	131;"	d
USB_DT_DEVICE	testusb.c	72;"	d	file:
USB_DT_INTERFACE	testusb.c	73;"	d	file:
USB_PID_ADSTECH_USB2_COLD	dvb-usb-ids.h	87;"	d
USB_PID_ADSTECH_USB2_WARM	dvb-usb-ids.h	88;"	d
USB_PID_AFATECH_AF9005	dvb-usb-ids.h	89;"	d
USB_PID_AFATECH_AF9015_9015	dvb-usb-ids.h	90;"	d
USB_PID_AFATECH_AF9015_9016	dvb-usb-ids.h	91;"	d
USB_PID_AFATECH_AF9035_1000	dvb-usb-ids.h	92;"	d
USB_PID_AFATECH_AF9035_1001	dvb-usb-ids.h	93;"	d
USB_PID_AFATECH_AF9035_1002	dvb-usb-ids.h	94;"	d
USB_PID_AFATECH_AF9035_1003	dvb-usb-ids.h	95;"	d
USB_PID_AFATECH_AF9035_9035	dvb-usb-ids.h	96;"	d
USB_PID_ANSONIC_DVBT_USB	dvb-usb-ids.h	100;"	d
USB_PID_ANYSEE	dvb-usb-ids.h	101;"	d
USB_PID_ARTEC_T14BR	dvb-usb-ids.h	206;"	d
USB_PID_ARTEC_T14_COLD	dvb-usb-ids.h	204;"	d
USB_PID_ARTEC_T14_WARM	dvb-usb-ids.h	205;"	d
USB_PID_ASUS_U3000	dvb-usb-ids.h	370;"	d
USB_PID_ASUS_U3000H	dvb-usb-ids.h	371;"	d
USB_PID_ASUS_U3100	dvb-usb-ids.h	372;"	d
USB_PID_ASUS_U3100MINI_PLUS	dvb-usb-ids.h	373;"	d
USB_PID_AVERMEDIA_1867	dvb-usb-ids.h	257;"	d
USB_PID_AVERMEDIA_A309	dvb-usb-ids.h	245;"	d
USB_PID_AVERMEDIA_A310	dvb-usb-ids.h	246;"	d
USB_PID_AVERMEDIA_A805	dvb-usb-ids.h	249;"	d
USB_PID_AVERMEDIA_A815M	dvb-usb-ids.h	250;"	d
USB_PID_AVERMEDIA_A835	dvb-usb-ids.h	251;"	d
USB_PID_AVERMEDIA_A835B_1835	dvb-usb-ids.h	253;"	d
USB_PID_AVERMEDIA_A835B_2835	dvb-usb-ids.h	254;"	d
USB_PID_AVERMEDIA_A835B_3835	dvb-usb-ids.h	255;"	d
USB_PID_AVERMEDIA_A835B_4835	dvb-usb-ids.h	256;"	d
USB_PID_AVERMEDIA_A850	dvb-usb-ids.h	247;"	d
USB_PID_AVERMEDIA_A850T	dvb-usb-ids.h	248;"	d
USB_PID_AVERMEDIA_A867	dvb-usb-ids.h	258;"	d
USB_PID_AVERMEDIA_B835	dvb-usb-ids.h	252;"	d
USB_PID_AVERMEDIA_DVBT_USB2_COLD	dvb-usb-ids.h	106;"	d
USB_PID_AVERMEDIA_DVBT_USB2_WARM	dvb-usb-ids.h	107;"	d
USB_PID_AVERMEDIA_DVBT_USB_COLD	dvb-usb-ids.h	104;"	d
USB_PID_AVERMEDIA_DVBT_USB_WARM	dvb-usb-ids.h	105;"	d
USB_PID_AVERMEDIA_EXPRESS	dvb-usb-ids.h	235;"	d
USB_PID_AVERMEDIA_H335	dvb-usb-ids.h	259;"	d
USB_PID_AVERMEDIA_HYBRID_ULTRA_USB_M039R	dvb-usb-ids.h	240;"	d
USB_PID_AVERMEDIA_HYBRID_ULTRA_USB_M039R_ATSC	dvb-usb-ids.h	241;"	d
USB_PID_AVERMEDIA_HYBRID_ULTRA_USB_M039R_DVBT	dvb-usb-ids.h	242;"	d
USB_PID_AVERMEDIA_MCE_USB_M038	dvb-usb-ids.h	239;"	d
USB_PID_AVERMEDIA_TD110	dvb-usb-ids.h	260;"	d
USB_PID_AVERMEDIA_TWINSTAR	dvb-usb-ids.h	261;"	d
USB_PID_AVERMEDIA_VOLAR	dvb-usb-ids.h	236;"	d
USB_PID_AVERMEDIA_VOLAR_2	dvb-usb-ids.h	237;"	d
USB_PID_AVERMEDIA_VOLAR_A868R	dvb-usb-ids.h	238;"	d
USB_PID_AVERMEDIA_VOLAR_X	dvb-usb-ids.h	243;"	d
USB_PID_AVERMEDIA_VOLAR_X_2	dvb-usb-ids.h	244;"	d
USB_PID_AZUREWAVE_6007	dvb-usb-ids.h	103;"	d
USB_PID_AZUREWAVE_AD_TU700	dvb-usb-ids.h	102;"	d
USB_PID_AZUREWAVE_AZ6027	dvb-usb-ids.h	406;"	d
USB_PID_COMPRO_DVBU2000_COLD	dvb-usb-ids.h	108;"	d
USB_PID_COMPRO_DVBU2000_UNK_COLD	dvb-usb-ids.h	110;"	d
USB_PID_COMPRO_DVBU2000_UNK_WARM	dvb-usb-ids.h	111;"	d
USB_PID_COMPRO_DVBU2000_WARM	dvb-usb-ids.h	109;"	d
USB_PID_COMPRO_VIDEOMATE_U500	dvb-usb-ids.h	112;"	d
USB_PID_COMPRO_VIDEOMATE_U500_PC	dvb-usb-ids.h	113;"	d
USB_PID_CONCEPTRONIC_CTVDIGRCU	dvb-usb-ids.h	114;"	d
USB_PID_CONEXANT_D680_DMB	dvb-usb-ids.h	115;"	d
USB_PID_CPYTO_REDI_PC50A	dvb-usb-ids.h	414;"	d
USB_PID_CREATIX_CTX1921	dvb-usb-ids.h	116;"	d
USB_PID_CTVDIGDUAL_V2	dvb-usb-ids.h	415;"	d
USB_PID_DELOCK_USB2_DVBT	dvb-usb-ids.h	117;"	d
USB_PID_DIBCOM_ANCHOR_2135_COLD	dvb-usb-ids.h	136;"	d
USB_PID_DIBCOM_HOOK_DEFAULT	dvb-usb-ids.h	118;"	d
USB_PID_DIBCOM_HOOK_DEFAULT_REENUM	dvb-usb-ids.h	119;"	d
USB_PID_DIBCOM_MOD3000_COLD	dvb-usb-ids.h	120;"	d
USB_PID_DIBCOM_MOD3000_WARM	dvb-usb-ids.h	121;"	d
USB_PID_DIBCOM_MOD3001_COLD	dvb-usb-ids.h	122;"	d
USB_PID_DIBCOM_MOD3001_WARM	dvb-usb-ids.h	123;"	d
USB_PID_DIBCOM_NIM7090	dvb-usb-ids.h	138;"	d
USB_PID_DIBCOM_NIM8096MD	dvb-usb-ids.h	134;"	d
USB_PID_DIBCOM_NIM9090M	dvb-usb-ids.h	141;"	d
USB_PID_DIBCOM_NIM9090MD	dvb-usb-ids.h	142;"	d
USB_PID_DIBCOM_STK7070P	dvb-usb-ids.h	128;"	d
USB_PID_DIBCOM_STK7070PD	dvb-usb-ids.h	129;"	d
USB_PID_DIBCOM_STK7700D	dvb-usb-ids.h	126;"	d
USB_PID_DIBCOM_STK7700P	dvb-usb-ids.h	124;"	d
USB_PID_DIBCOM_STK7700P_PC	dvb-usb-ids.h	125;"	d
USB_PID_DIBCOM_STK7700_U7000	dvb-usb-ids.h	127;"	d
USB_PID_DIBCOM_STK7770P	dvb-usb-ids.h	137;"	d
USB_PID_DIBCOM_STK807XP	dvb-usb-ids.h	130;"	d
USB_PID_DIBCOM_STK807XPVR	dvb-usb-ids.h	131;"	d
USB_PID_DIBCOM_STK8096GP	dvb-usb-ids.h	132;"	d
USB_PID_DIBCOM_STK8096PVR	dvb-usb-ids.h	133;"	d
USB_PID_DIBCOM_TFE7090PVR	dvb-usb-ids.h	139;"	d
USB_PID_DIBCOM_TFE7790P	dvb-usb-ids.h	140;"	d
USB_PID_DIBCOM_TFE8096P	dvb-usb-ids.h	135;"	d
USB_PID_DIGITALNOW_BLUEBIRD_DUAL_1_COLD	dvb-usb-ids.h	333;"	d
USB_PID_DIGITALNOW_BLUEBIRD_DUAL_1_WARM	dvb-usb-ids.h	334;"	d
USB_PID_DIGIVOX_MINI_SL_COLD	dvb-usb-ids.h	342;"	d
USB_PID_DIGIVOX_MINI_SL_WARM	dvb-usb-ids.h	343;"	d
USB_PID_DNTV_TINYUSB2_COLD	dvb-usb-ids.h	195;"	d
USB_PID_DNTV_TINYUSB2_WARM	dvb-usb-ids.h	196;"	d
USB_PID_DPOSH_M9206_COLD	dvb-usb-ids.h	143;"	d
USB_PID_DPOSH_M9206_WARM	dvb-usb-ids.h	144;"	d
USB_PID_DTT200U_COLD	dvb-usb-ids.h	213;"	d
USB_PID_DTT200U_WARM	dvb-usb-ids.h	214;"	d
USB_PID_DVB_T_USB_STICK_HIGH_SPEED_COLD	dvb-usb-ids.h	397;"	d
USB_PID_DVB_T_USB_STICK_HIGH_SPEED_WARM	dvb-usb-ids.h	398;"	d
USB_PID_DVICO_BLUEBIRD_DUAL_1_COLD	dvb-usb-ids.h	325;"	d
USB_PID_DVICO_BLUEBIRD_DUAL_1_WARM	dvb-usb-ids.h	326;"	d
USB_PID_DVICO_BLUEBIRD_DUAL_2_COLD	dvb-usb-ids.h	327;"	d
USB_PID_DVICO_BLUEBIRD_DUAL_2_WARM	dvb-usb-ids.h	328;"	d
USB_PID_DVICO_BLUEBIRD_DUAL_4	dvb-usb-ids.h	329;"	d
USB_PID_DVICO_BLUEBIRD_DUAL_4_REV_2	dvb-usb-ids.h	330;"	d
USB_PID_DVICO_BLUEBIRD_DVB_T_NANO_2	dvb-usb-ids.h	331;"	d
USB_PID_DVICO_BLUEBIRD_DVB_T_NANO_2_NFW_WARM	dvb-usb-ids.h	332;"	d
USB_PID_DVICO_BLUEBIRD_LG064F_COLD	dvb-usb-ids.h	319;"	d
USB_PID_DVICO_BLUEBIRD_LG064F_WARM	dvb-usb-ids.h	320;"	d
USB_PID_DVICO_BLUEBIRD_LGDT	dvb-usb-ids.h	318;"	d
USB_PID_DVICO_BLUEBIRD_LGZ201_COLD	dvb-usb-ids.h	321;"	d
USB_PID_DVICO_BLUEBIRD_LGZ201_WARM	dvb-usb-ids.h	322;"	d
USB_PID_DVICO_BLUEBIRD_TH7579_COLD	dvb-usb-ids.h	323;"	d
USB_PID_DVICO_BLUEBIRD_TH7579_WARM	dvb-usb-ids.h	324;"	d
USB_PID_DW2102	dvb-usb-ids.h	380;"	d
USB_PID_DW2104	dvb-usb-ids.h	381;"	d
USB_PID_DW3101	dvb-usb-ids.h	382;"	d
USB_PID_E3C_EC168	dvb-usb-ids.h	145;"	d
USB_PID_E3C_EC168_2	dvb-usb-ids.h	146;"	d
USB_PID_E3C_EC168_3	dvb-usb-ids.h	147;"	d
USB_PID_E3C_EC168_4	dvb-usb-ids.h	148;"	d
USB_PID_E3C_EC168_5	dvb-usb-ids.h	149;"	d
USB_PID_ELGATO_EYETV_DIVERSITY	dvb-usb-ids.h	390;"	d
USB_PID_ELGATO_EYETV_DTT	dvb-usb-ids.h	391;"	d
USB_PID_ELGATO_EYETV_DTT_2	dvb-usb-ids.h	392;"	d
USB_PID_ELGATO_EYETV_DTT_Dlx	dvb-usb-ids.h	393;"	d
USB_PID_ELGATO_EYETV_SAT	dvb-usb-ids.h	394;"	d
USB_PID_ELGATO_EYETV_SAT_V2	dvb-usb-ids.h	395;"	d
USB_PID_ELGATO_EYETV_SAT_V3	dvb-usb-ids.h	396;"	d
USB_PID_EVOLVEO_XTRATV_STICK	dvb-usb-ids.h	422;"	d
USB_PID_FREECOM_DVBT	dvb-usb-ids.h	150;"	d
USB_PID_FREECOM_DVBT_2	dvb-usb-ids.h	151;"	d
USB_PID_FRIIO_WHITE	dvb-usb-ids.h	399;"	d
USB_PID_GENIUS_TVGO_DVB_T03	dvb-usb-ids.h	153;"	d
USB_PID_GENPIX_8PSK_REV_1_COLD	dvb-usb-ids.h	355;"	d
USB_PID_GENPIX_8PSK_REV_1_WARM	dvb-usb-ids.h	356;"	d
USB_PID_GENPIX_8PSK_REV_2	dvb-usb-ids.h	357;"	d
USB_PID_GENPIX_SKYWALKER_1	dvb-usb-ids.h	358;"	d
USB_PID_GENPIX_SKYWALKER_2	dvb-usb-ids.h	360;"	d
USB_PID_GENPIX_SKYWALKER_CW3K	dvb-usb-ids.h	359;"	d
USB_PID_GIGABYTE_U7000	dvb-usb-ids.h	368;"	d
USB_PID_GIGABYTE_U8000	dvb-usb-ids.h	369;"	d
USB_PID_GOTVIEW_SAT_HD	dvb-usb-ids.h	156;"	d
USB_PID_GRANDTEC_DVBT_USB2_COLD	dvb-usb-ids.h	344;"	d
USB_PID_GRANDTEC_DVBT_USB2_WARM	dvb-usb-ids.h	345;"	d
USB_PID_GRANDTEC_DVBT_USB_COLD	dvb-usb-ids.h	154;"	d
USB_PID_GRANDTEC_DVBT_USB_WARM	dvb-usb-ids.h	155;"	d
USB_PID_HAMA_DVBT_HYBRID	dvb-usb-ids.h	423;"	d
USB_PID_HANFTEK_UMT_010_COLD	dvb-usb-ids.h	211;"	d
USB_PID_HANFTEK_UMT_010_WARM	dvb-usb-ids.h	212;"	d
USB_PID_HAUPPAUGE_MYTV_T	dvb-usb-ids.h	230;"	d
USB_PID_HAUPPAUGE_NOVA_TD_STICK	dvb-usb-ids.h	231;"	d
USB_PID_HAUPPAUGE_NOVA_TD_STICK_52009	dvb-usb-ids.h	232;"	d
USB_PID_HAUPPAUGE_NOVA_T_500	dvb-usb-ids.h	224;"	d
USB_PID_HAUPPAUGE_NOVA_T_500_2	dvb-usb-ids.h	225;"	d
USB_PID_HAUPPAUGE_NOVA_T_500_3	dvb-usb-ids.h	226;"	d
USB_PID_HAUPPAUGE_NOVA_T_STICK	dvb-usb-ids.h	227;"	d
USB_PID_HAUPPAUGE_NOVA_T_STICK_2	dvb-usb-ids.h	228;"	d
USB_PID_HAUPPAUGE_NOVA_T_STICK_3	dvb-usb-ids.h	229;"	d
USB_PID_HAUPPAUGE_TIGER_ATSC	dvb-usb-ids.h	233;"	d
USB_PID_HAUPPAUGE_TIGER_ATSC_B210	dvb-usb-ids.h	234;"	d
USB_PID_INTEL_CE9500	dvb-usb-ids.h	157;"	d
USB_PID_ITETECH_IT9135	dvb-usb-ids.h	158;"	d
USB_PID_ITETECH_IT9135_9005	dvb-usb-ids.h	159;"	d
USB_PID_ITETECH_IT9135_9006	dvb-usb-ids.h	160;"	d
USB_PID_ITETECH_IT9303	dvb-usb-ids.h	161;"	d
USB_PID_KWORLD_395U	dvb-usb-ids.h	164;"	d
USB_PID_KWORLD_395U_2	dvb-usb-ids.h	165;"	d
USB_PID_KWORLD_395U_3	dvb-usb-ids.h	166;"	d
USB_PID_KWORLD_395U_4	dvb-usb-ids.h	167;"	d
USB_PID_KWORLD_399U	dvb-usb-ids.h	162;"	d
USB_PID_KWORLD_399U_2	dvb-usb-ids.h	163;"	d
USB_PID_KWORLD_MC810	dvb-usb-ids.h	168;"	d
USB_PID_KWORLD_PC160_2T	dvb-usb-ids.h	169;"	d
USB_PID_KWORLD_PC160_T	dvb-usb-ids.h	170;"	d
USB_PID_KWORLD_UB383_T	dvb-usb-ids.h	171;"	d
USB_PID_KWORLD_UB499_2T_T09	dvb-usb-ids.h	172;"	d
USB_PID_KWORLD_VSTREAM_COLD	dvb-usb-ids.h	173;"	d
USB_PID_KWORLD_VSTREAM_WARM	dvb-usb-ids.h	174;"	d
USB_PID_KYE_DVB_T_COLD	dvb-usb-ids.h	338;"	d
USB_PID_KYE_DVB_T_WARM	dvb-usb-ids.h	339;"	d
USB_PID_LIFEVIEW_TV_WALKER_TWIN_COLD	dvb-usb-ids.h	366;"	d
USB_PID_LIFEVIEW_TV_WALKER_TWIN_WARM	dvb-usb-ids.h	367;"	d
USB_PID_LITEON_DVB_T_COLD	dvb-usb-ids.h	340;"	d
USB_PID_LITEON_DVB_T_WARM	dvb-usb-ids.h	341;"	d
USB_PID_MEDION_MD95700	dvb-usb-ids.h	335;"	d
USB_PID_MSI_DIGIVOX_DUO	dvb-usb-ids.h	363;"	d
USB_PID_MSI_DIGI_VOX_MINI_II	dvb-usb-ids.h	362;"	d
USB_PID_MSI_DIGI_VOX_MINI_III	dvb-usb-ids.h	385;"	d
USB_PID_MSI_MEGASKY580	dvb-usb-ids.h	336;"	d
USB_PID_MSI_MEGASKY580_55801	dvb-usb-ids.h	337;"	d
USB_PID_MYGICA_D689	dvb-usb-ids.h	387;"	d
USB_PID_MYGICA_T230	dvb-usb-ids.h	388;"	d
USB_PID_MYGICA_T230C	dvb-usb-ids.h	389;"	d
USB_PID_NEBULA_DIGITV	dvb-usb-ids.h	317;"	d
USB_PID_NOXON_DAB_STICK	dvb-usb-ids.h	287;"	d
USB_PID_NOXON_DAB_STICK_REV2	dvb-usb-ids.h	288;"	d
USB_PID_NOXON_DAB_STICK_REV3	dvb-usb-ids.h	289;"	d
USB_PID_OPERA1_COLD	dvb-usb-ids.h	364;"	d
USB_PID_OPERA1_WARM	dvb-usb-ids.h	365;"	d
USB_PID_PCTV_2002E	dvb-usb-ids.h	416;"	d
USB_PID_PCTV_2002E_SE	dvb-usb-ids.h	417;"	d
USB_PID_PCTV_200E	dvb-usb-ids.h	307;"	d
USB_PID_PCTV_400E	dvb-usb-ids.h	308;"	d
USB_PID_PCTV_450E	dvb-usb-ids.h	309;"	d
USB_PID_PCTV_452E	dvb-usb-ids.h	310;"	d
USB_PID_PCTV_78E	dvb-usb-ids.h	311;"	d
USB_PID_PCTV_79E	dvb-usb-ids.h	312;"	d
USB_PID_PINNACLE_EXPRESSCARD_320CX	dvb-usb-ids.h	290;"	d
USB_PID_PINNACLE_PCTV2000E	dvb-usb-ids.h	291;"	d
USB_PID_PINNACLE_PCTV282E	dvb-usb-ids.h	305;"	d
USB_PID_PINNACLE_PCTV310E	dvb-usb-ids.h	297;"	d
USB_PID_PINNACLE_PCTV340E	dvb-usb-ids.h	300;"	d
USB_PID_PINNACLE_PCTV340E_SE	dvb-usb-ids.h	301;"	d
USB_PID_PINNACLE_PCTV71E	dvb-usb-ids.h	294;"	d
USB_PID_PINNACLE_PCTV72E	dvb-usb-ids.h	295;"	d
USB_PID_PINNACLE_PCTV73A	dvb-usb-ids.h	302;"	d
USB_PID_PINNACLE_PCTV73E	dvb-usb-ids.h	296;"	d
USB_PID_PINNACLE_PCTV73ESE	dvb-usb-ids.h	303;"	d
USB_PID_PINNACLE_PCTV74E	dvb-usb-ids.h	304;"	d
USB_PID_PINNACLE_PCTV801E	dvb-usb-ids.h	298;"	d
USB_PID_PINNACLE_PCTV801E_SE	dvb-usb-ids.h	299;"	d
USB_PID_PINNACLE_PCTV_DUAL_DIVERSITY_DVB_T	dvb-usb-ids.h	293;"	d
USB_PID_PINNACLE_PCTV_DVB_T_FLASH	dvb-usb-ids.h	292;"	d
USB_PID_PIXELVIEW_SBTVD	dvb-usb-ids.h	306;"	d
USB_PID_PROF_1100	dvb-usb-ids.h	175;"	d
USB_PID_REALTEK_RTL2831U	dvb-usb-ids.h	313;"	d
USB_PID_REALTEK_RTL2832U	dvb-usb-ids.h	314;"	d
USB_PID_SIGMATEK_DVB_110	dvb-usb-ids.h	361;"	d
USB_PID_SONY_PLAYTV	dvb-usb-ids.h	386;"	d
USB_PID_SVEON_STV20	dvb-usb-ids.h	401;"	d
USB_PID_SVEON_STV20_RTL2832U	dvb-usb-ids.h	402;"	d
USB_PID_SVEON_STV21	dvb-usb-ids.h	403;"	d
USB_PID_SVEON_STV22	dvb-usb-ids.h	404;"	d
USB_PID_SVEON_STV22_IT9137	dvb-usb-ids.h	405;"	d
USB_PID_SVEON_STV27	dvb-usb-ids.h	418;"	d
USB_PID_TECHNISAT_AIRSTAR_TELESTICK_2	dvb-usb-ids.h	412;"	d
USB_PID_TECHNISAT_USB2_CABLESTAR_HDCI	dvb-usb-ids.h	411;"	d
USB_PID_TECHNISAT_USB2_DVB_S2	dvb-usb-ids.h	413;"	d
USB_PID_TECHNISAT_USB2_HDCI_V1	dvb-usb-ids.h	409;"	d
USB_PID_TECHNISAT_USB2_HDCI_V2	dvb-usb-ids.h	410;"	d
USB_PID_TECHNOTREND_CONNECT_CT2_4650_CI	dvb-usb-ids.h	266;"	d
USB_PID_TECHNOTREND_CONNECT_CT2_4650_CI_2	dvb-usb-ids.h	267;"	d
USB_PID_TECHNOTREND_CONNECT_CT3650	dvb-usb-ids.h	264;"	d
USB_PID_TECHNOTREND_CONNECT_S2400	dvb-usb-ids.h	262;"	d
USB_PID_TECHNOTREND_CONNECT_S2400_8KEEPROM	dvb-usb-ids.h	263;"	d
USB_PID_TECHNOTREND_CONNECT_S2_3600	dvb-usb-ids.h	315;"	d
USB_PID_TECHNOTREND_CONNECT_S2_3650_CI	dvb-usb-ids.h	316;"	d
USB_PID_TECHNOTREND_CONNECT_S2_4600	dvb-usb-ids.h	265;"	d
USB_PID_TECHNOTREND_CONNECT_S2_4650_CI	dvb-usb-ids.h	269;"	d
USB_PID_TECHNOTREND_TVSTICK_CT2_4400	dvb-usb-ids.h	268;"	d
USB_PID_TELESTAR_STARSTICK_2	dvb-usb-ids.h	384;"	d
USB_PID_TERRATEC_CINERGY_DT_XS_DIVERSITY	dvb-usb-ids.h	270;"	d
USB_PID_TERRATEC_CINERGY_DT_XS_DIVERSITY_2	dvb-usb-ids.h	271;"	d
USB_PID_TERRATEC_CINERGY_HT_EXPRESS	dvb-usb-ids.h	273;"	d
USB_PID_TERRATEC_CINERGY_HT_USB_XE	dvb-usb-ids.h	272;"	d
USB_PID_TERRATEC_CINERGY_S	dvb-usb-ids.h	176;"	d
USB_PID_TERRATEC_CINERGY_S2_R1	dvb-usb-ids.h	277;"	d
USB_PID_TERRATEC_CINERGY_S2_R2	dvb-usb-ids.h	278;"	d
USB_PID_TERRATEC_CINERGY_S2_R3	dvb-usb-ids.h	279;"	d
USB_PID_TERRATEC_CINERGY_S2_R4	dvb-usb-ids.h	280;"	d
USB_PID_TERRATEC_CINERGY_T_EXPRESS	dvb-usb-ids.h	274;"	d
USB_PID_TERRATEC_CINERGY_T_STICK	dvb-usb-ids.h	179;"	d
USB_PID_TERRATEC_CINERGY_T_STICK_BLACK_REV1	dvb-usb-ids.h	182;"	d
USB_PID_TERRATEC_CINERGY_T_STICK_DUAL_RC	dvb-usb-ids.h	181;"	d
USB_PID_TERRATEC_CINERGY_T_STICK_RC	dvb-usb-ids.h	180;"	d
USB_PID_TERRATEC_CINERGY_T_USB_XE	dvb-usb-ids.h	177;"	d
USB_PID_TERRATEC_CINERGY_T_USB_XE_REV2	dvb-usb-ids.h	178;"	d
USB_PID_TERRATEC_CINERGY_T_XXS	dvb-usb-ids.h	275;"	d
USB_PID_TERRATEC_CINERGY_T_XXS_2	dvb-usb-ids.h	276;"	d
USB_PID_TERRATEC_DVBS2CI_V1	dvb-usb-ids.h	407;"	d
USB_PID_TERRATEC_DVBS2CI_V2	dvb-usb-ids.h	408;"	d
USB_PID_TERRATEC_H7	dvb-usb-ids.h	281;"	d
USB_PID_TERRATEC_H7_2	dvb-usb-ids.h	282;"	d
USB_PID_TERRATEC_H7_3	dvb-usb-ids.h	283;"	d
USB_PID_TERRATEC_T1	dvb-usb-ids.h	284;"	d
USB_PID_TERRATEC_T3	dvb-usb-ids.h	285;"	d
USB_PID_TERRATEC_T5	dvb-usb-ids.h	286;"	d
USB_PID_TEVII_S421	dvb-usb-ids.h	62;"	d
USB_PID_TEVII_S480_1	dvb-usb-ids.h	63;"	d
USB_PID_TEVII_S480_2	dvb-usb-ids.h	64;"	d
USB_PID_TEVII_S630	dvb-usb-ids.h	65;"	d
USB_PID_TEVII_S632	dvb-usb-ids.h	66;"	d
USB_PID_TEVII_S650	dvb-usb-ids.h	67;"	d
USB_PID_TEVII_S660	dvb-usb-ids.h	68;"	d
USB_PID_TEVII_S662	dvb-usb-ids.h	69;"	d
USB_PID_TINYTWIN	dvb-usb-ids.h	192;"	d
USB_PID_TINYTWIN_2	dvb-usb-ids.h	193;"	d
USB_PID_TINYTWIN_3	dvb-usb-ids.h	194;"	d
USB_PID_TREKSTOR_DVBT	dvb-usb-ids.h	97;"	d
USB_PID_TREKSTOR_TERRES_2_0	dvb-usb-ids.h	98;"	d
USB_PID_TURBOX_DTT_2000	dvb-usb-ids.h	419;"	d
USB_PID_TVWAY_PLUS	dvb-usb-ids.h	400;"	d
USB_PID_TWINHAN_VP7020_COLD	dvb-usb-ids.h	185;"	d
USB_PID_TWINHAN_VP7020_WARM	dvb-usb-ids.h	186;"	d
USB_PID_TWINHAN_VP7021_COLD	dvb-usb-ids.h	189;"	d
USB_PID_TWINHAN_VP7021_WARM	dvb-usb-ids.h	190;"	d
USB_PID_TWINHAN_VP7041_COLD	dvb-usb-ids.h	183;"	d
USB_PID_TWINHAN_VP7041_WARM	dvb-usb-ids.h	184;"	d
USB_PID_TWINHAN_VP7045_COLD	dvb-usb-ids.h	187;"	d
USB_PID_TWINHAN_VP7045_WARM	dvb-usb-ids.h	188;"	d
USB_PID_TWINHAN_VP7049	dvb-usb-ids.h	191;"	d
USB_PID_ULTIMA_TVBOX_AN2235_COLD	dvb-usb-ids.h	199;"	d
USB_PID_ULTIMA_TVBOX_AN2235_WARM	dvb-usb-ids.h	200;"	d
USB_PID_ULTIMA_TVBOX_ANCHOR_COLD	dvb-usb-ids.h	201;"	d
USB_PID_ULTIMA_TVBOX_COLD	dvb-usb-ids.h	197;"	d
USB_PID_ULTIMA_TVBOX_USB2_COLD	dvb-usb-ids.h	202;"	d
USB_PID_ULTIMA_TVBOX_USB2_FX_COLD	dvb-usb-ids.h	207;"	d
USB_PID_ULTIMA_TVBOX_USB2_FX_WARM	dvb-usb-ids.h	208;"	d
USB_PID_ULTIMA_TVBOX_USB2_WARM	dvb-usb-ids.h	203;"	d
USB_PID_ULTIMA_TVBOX_WARM	dvb-usb-ids.h	198;"	d
USB_PID_UNIWILL_STK7700P	dvb-usb-ids.h	152;"	d
USB_PID_UNK_HYPER_PALTEK_COLD	dvb-usb-ids.h	209;"	d
USB_PID_UNK_HYPER_PALTEK_WARM	dvb-usb-ids.h	210;"	d
USB_PID_WINFAST_DTV2000DS	dvb-usb-ids.h	346;"	d
USB_PID_WINFAST_DTV2000DS_PLUS	dvb-usb-ids.h	347;"	d
USB_PID_WINFAST_DTV_DONGLE_COLD	dvb-usb-ids.h	348;"	d
USB_PID_WINFAST_DTV_DONGLE_GOLD	dvb-usb-ids.h	353;"	d
USB_PID_WINFAST_DTV_DONGLE_H	dvb-usb-ids.h	351;"	d
USB_PID_WINFAST_DTV_DONGLE_MINID	dvb-usb-ids.h	354;"	d
USB_PID_WINFAST_DTV_DONGLE_STK7700P	dvb-usb-ids.h	350;"	d
USB_PID_WINFAST_DTV_DONGLE_STK7700P_2	dvb-usb-ids.h	352;"	d
USB_PID_WINFAST_DTV_DONGLE_WARM	dvb-usb-ids.h	349;"	d
USB_PID_WINTV_NOVA_T_USB2_COLD	dvb-usb-ids.h	222;"	d
USB_PID_WINTV_NOVA_T_USB2_WARM	dvb-usb-ids.h	223;"	d
USB_PID_WINTV_SOLOHD	dvb-usb-ids.h	420;"	d
USB_PID_WINTV_SOLOHD_2	dvb-usb-ids.h	421;"	d
USB_PID_WT220U_COLD	dvb-usb-ids.h	216;"	d
USB_PID_WT220U_FC_COLD	dvb-usb-ids.h	218;"	d
USB_PID_WT220U_FC_WARM	dvb-usb-ids.h	219;"	d
USB_PID_WT220U_WARM	dvb-usb-ids.h	217;"	d
USB_PID_WT220U_ZAP250_COLD	dvb-usb-ids.h	215;"	d
USB_PID_WT220U_ZL0353_COLD	dvb-usb-ids.h	220;"	d
USB_PID_WT220U_ZL0353_WARM	dvb-usb-ids.h	221;"	d
USB_PID_XBOX_ONE_TUNER	dvb-usb-ids.h	424;"	d
USB_PID_XTENSIONS_XD_380	dvb-usb-ids.h	383;"	d
USB_PID_YUAN_EC372S	dvb-usb-ids.h	374;"	d
USB_PID_YUAN_MC770	dvb-usb-ids.h	377;"	d
USB_PID_YUAN_PD378S	dvb-usb-ids.h	376;"	d
USB_PID_YUAN_STK7700D	dvb-usb-ids.h	378;"	d
USB_PID_YUAN_STK7700D_2	dvb-usb-ids.h	379;"	d
USB_PID_YUAN_STK7700PH	dvb-usb-ids.h	375;"	d
USB_SPEED_FULL	testusb.c	/^	USB_SPEED_LOW, USB_SPEED_FULL,		\/* usb 1.1 *\/$/;"	e	enum:usb_device_speed	file:
USB_SPEED_HIGH	testusb.c	/^	USB_SPEED_HIGH				\/* usb 2.0 *\/$/;"	e	enum:usb_device_speed	file:
USB_SPEED_LOW	testusb.c	/^	USB_SPEED_LOW, USB_SPEED_FULL,		\/* usb 1.1 *\/$/;"	e	enum:usb_device_speed	file:
USB_SPEED_UNKNOWN	testusb.c	/^	USB_SPEED_UNKNOWN = 0,			\/* enumerating *\/$/;"	e	enum:usb_device_speed	file:
USB_VID_774	dvb-usb-ids.h	79;"	d
USB_VID_ADSTECH	dvb-usb-ids.h	14;"	d
USB_VID_AFATECH	dvb-usb-ids.h	15;"	d
USB_VID_ALCOR_MICRO	dvb-usb-ids.h	16;"	d
USB_VID_ALINK	dvb-usb-ids.h	17;"	d
USB_VID_ALINK_DTU	dvb-usb-ids.h	99;"	d
USB_VID_AMT	dvb-usb-ids.h	18;"	d
USB_VID_ANCHOR	dvb-usb-ids.h	19;"	d
USB_VID_ANSONIC	dvb-usb-ids.h	20;"	d
USB_VID_ANUBIS_ELECTRONIC	dvb-usb-ids.h	21;"	d
USB_VID_ASUS	dvb-usb-ids.h	22;"	d
USB_VID_AVERMEDIA	dvb-usb-ids.h	23;"	d
USB_VID_AZUREWAVE	dvb-usb-ids.h	81;"	d
USB_VID_COMPRO	dvb-usb-ids.h	24;"	d
USB_VID_COMPRO_UNK	dvb-usb-ids.h	25;"	d
USB_VID_CONEXANT	dvb-usb-ids.h	26;"	d
USB_VID_CYPRESS	dvb-usb-ids.h	27;"	d
USB_VID_DEXATEK	dvb-usb-ids.h	28;"	d
USB_VID_DIBCOM	dvb-usb-ids.h	29;"	d
USB_VID_DPOSH	dvb-usb-ids.h	30;"	d
USB_VID_DVICO	dvb-usb-ids.h	31;"	d
USB_VID_E3C	dvb-usb-ids.h	32;"	d
USB_VID_ELGATO	dvb-usb-ids.h	33;"	d
USB_VID_EMPIA	dvb-usb-ids.h	34;"	d
USB_VID_EVOLUTEPC	dvb-usb-ids.h	80;"	d
USB_VID_GENPIX	dvb-usb-ids.h	35;"	d
USB_VID_GIGABYTE	dvb-usb-ids.h	74;"	d
USB_VID_GRANDTEC	dvb-usb-ids.h	36;"	d
USB_VID_GTEK	dvb-usb-ids.h	37;"	d
USB_VID_HAMA	dvb-usb-ids.h	83;"	d
USB_VID_HANFTEK	dvb-usb-ids.h	38;"	d
USB_VID_HAUPPAUGE	dvb-usb-ids.h	39;"	d
USB_VID_HUMAX_COEX	dvb-usb-ids.h	78;"	d
USB_VID_HYPER_PALTEK	dvb-usb-ids.h	40;"	d
USB_VID_INTEL	dvb-usb-ids.h	41;"	d
USB_VID_ITETECH	dvb-usb-ids.h	42;"	d
USB_VID_KWORLD	dvb-usb-ids.h	43;"	d
USB_VID_KWORLD_2	dvb-usb-ids.h	44;"	d
USB_VID_KYE	dvb-usb-ids.h	45;"	d
USB_VID_LEADTEK	dvb-usb-ids.h	46;"	d
USB_VID_LITEON	dvb-usb-ids.h	47;"	d
USB_VID_MEDION	dvb-usb-ids.h	48;"	d
USB_VID_MICROSOFT	dvb-usb-ids.h	84;"	d
USB_VID_MIGLIA	dvb-usb-ids.h	49;"	d
USB_VID_MSI	dvb-usb-ids.h	50;"	d
USB_VID_MSI_2	dvb-usb-ids.h	51;"	d
USB_VID_OPERA1	dvb-usb-ids.h	52;"	d
USB_VID_PCTV	dvb-usb-ids.h	54;"	d
USB_VID_PINNACLE	dvb-usb-ids.h	53;"	d
USB_VID_PIXELVIEW	dvb-usb-ids.h	55;"	d
USB_VID_REALTEK	dvb-usb-ids.h	56;"	d
USB_VID_SONY	dvb-usb-ids.h	61;"	d
USB_VID_TECHNISAT	dvb-usb-ids.h	82;"	d
USB_VID_TECHNOTREND	dvb-usb-ids.h	57;"	d
USB_VID_TELESTAR	dvb-usb-ids.h	59;"	d
USB_VID_TERRATEC	dvb-usb-ids.h	58;"	d
USB_VID_TWINHAN	dvb-usb-ids.h	70;"	d
USB_VID_ULTIMA_ELECTRONIC	dvb-usb-ids.h	71;"	d
USB_VID_UNIWILL	dvb-usb-ids.h	72;"	d
USB_VID_VISIONPLUS	dvb-usb-ids.h	60;"	d
USB_VID_WIDEVIEW	dvb-usb-ids.h	73;"	d
USB_VID_XTENSIONS	dvb-usb-ids.h	76;"	d
USB_VID_YUAN	dvb-usb-ids.h	75;"	d
USB_VID_ZYDAS	dvb-usb-ids.h	77;"	d
USE_BSD	relocs.h	15;"	d
USHRT_MAX	kernel.h	19;"	d
US_TO_NS	rc-core.h	329;"	d
UXGA_HEIGHT	v4l2-image-sizes.h	38;"	d
UXGA_WIDTH	v4l2-image-sizes.h	37;"	d
V4L2_ASYNC_H	v4l2-async.h	12;"	d
V4L2_ASYNC_MATCH_CUSTOM	v4l2-async.h	/^	V4L2_ASYNC_MATCH_CUSTOM,$/;"	e	enum:v4l2_async_match_type
V4L2_ASYNC_MATCH_DEVNAME	v4l2-async.h	/^	V4L2_ASYNC_MATCH_DEVNAME,$/;"	e	enum:v4l2_async_match_type
V4L2_ASYNC_MATCH_FWNODE	v4l2-async.h	/^	V4L2_ASYNC_MATCH_FWNODE,$/;"	e	enum:v4l2_async_match_type
V4L2_ASYNC_MATCH_I2C	v4l2-async.h	/^	V4L2_ASYNC_MATCH_I2C,$/;"	e	enum:v4l2_async_match_type
V4L2_AUDCAP_AVL	videodev2.h	1849;"	d
V4L2_AUDCAP_STEREO	videodev2.h	1848;"	d
V4L2_AUDMODE_AVL	videodev2.h	1852;"	d
V4L2_BAND_MODULATION_AM	videodev2.h	1791;"	d
V4L2_BAND_MODULATION_FM	videodev2.h	1790;"	d
V4L2_BAND_MODULATION_VSB	videodev2.h	1789;"	d
V4L2_BUF_CAP_SUPPORTS_DMABUF	videodev2.h	882;"	d
V4L2_BUF_CAP_SUPPORTS_MMAP	videodev2.h	880;"	d
V4L2_BUF_CAP_SUPPORTS_ORPHANED_BUFS	videodev2.h	884;"	d
V4L2_BUF_CAP_SUPPORTS_REQUESTS	videodev2.h	883;"	d
V4L2_BUF_CAP_SUPPORTS_USERPTR	videodev2.h	881;"	d
V4L2_BUF_FLAG_BFRAME	videodev2.h	983;"	d
V4L2_BUF_FLAG_DONE	videodev2.h	977;"	d
V4L2_BUF_FLAG_ERROR	videodev2.h	985;"	d
V4L2_BUF_FLAG_KEYFRAME	videodev2.h	979;"	d
V4L2_BUF_FLAG_LAST	videodev2.h	1003;"	d
V4L2_BUF_FLAG_MAPPED	videodev2.h	973;"	d
V4L2_BUF_FLAG_NO_CACHE_CLEAN	videodev2.h	992;"	d
V4L2_BUF_FLAG_NO_CACHE_INVALIDATE	videodev2.h	991;"	d
V4L2_BUF_FLAG_PFRAME	videodev2.h	981;"	d
V4L2_BUF_FLAG_PREPARED	videodev2.h	989;"	d
V4L2_BUF_FLAG_QUEUED	videodev2.h	975;"	d
V4L2_BUF_FLAG_TIMECODE	videodev2.h	987;"	d
V4L2_BUF_FLAG_TIMESTAMP_COPY	videodev2.h	997;"	d
V4L2_BUF_FLAG_TIMESTAMP_MASK	videodev2.h	994;"	d
V4L2_BUF_FLAG_TIMESTAMP_MONOTONIC	videodev2.h	996;"	d
V4L2_BUF_FLAG_TIMESTAMP_UNKNOWN	videodev2.h	995;"	d
V4L2_BUF_FLAG_TSTAMP_SRC_EOF	videodev2.h	1000;"	d
V4L2_BUF_FLAG_TSTAMP_SRC_MASK	videodev2.h	999;"	d
V4L2_BUF_FLAG_TSTAMP_SRC_SOE	videodev2.h	1001;"	d
V4L2_BUF_TYPE_META_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_META_CAPTURE         = 13,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_PRIVATE	videodev2.h	/^	V4L2_BUF_TYPE_PRIVATE              = 0x80,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SDR_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_SDR_CAPTURE          = 11,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SDR_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_SDR_OUTPUT           = 12,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SLICED_VBI_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_SLICED_VBI_CAPTURE   = 6,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_SLICED_VBI_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_SLICED_VBI_OUTPUT    = 7,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_VBI_CAPTURE          = 4,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VBI_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_VBI_OUTPUT           = 5,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_CAPTURE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_CAPTURE        = 1,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE = 9,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT         = 2,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE  = 10,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY = 8,$/;"	e	enum:v4l2_buf_type
V4L2_BUF_TYPE_VIDEO_OVERLAY	videodev2.h	/^	V4L2_BUF_TYPE_VIDEO_OVERLAY        = 3,$/;"	e	enum:v4l2_buf_type
V4L2_CAP_ASYNCIO	videodev2.h	475;"	d
V4L2_CAP_AUDIO	videodev2.h	465;"	d
V4L2_CAP_DEVICE_CAPS	videodev2.h	480;"	d
V4L2_CAP_EXT_PIX_FORMAT	videodev2.h	470;"	d
V4L2_CAP_HW_FREQ_SEEK	videodev2.h	452;"	d
V4L2_CAP_META_CAPTURE	videodev2.h	472;"	d
V4L2_CAP_MODULATOR	videodev2.h	467;"	d
V4L2_CAP_RADIO	videodev2.h	466;"	d
V4L2_CAP_RDS_CAPTURE	videodev2.h	450;"	d
V4L2_CAP_RDS_OUTPUT	videodev2.h	453;"	d
V4L2_CAP_READWRITE	videodev2.h	474;"	d
V4L2_CAP_SDR_CAPTURE	videodev2.h	469;"	d
V4L2_CAP_SDR_OUTPUT	videodev2.h	471;"	d
V4L2_CAP_SLICED_VBI_CAPTURE	videodev2.h	448;"	d
V4L2_CAP_SLICED_VBI_OUTPUT	videodev2.h	449;"	d
V4L2_CAP_STREAMING	videodev2.h	476;"	d
V4L2_CAP_TIMEPERFRAME	videodev2.h	1099;"	d
V4L2_CAP_TOUCH	videodev2.h	478;"	d
V4L2_CAP_TUNER	videodev2.h	464;"	d
V4L2_CAP_VBI_CAPTURE	videodev2.h	446;"	d
V4L2_CAP_VBI_OUTPUT	videodev2.h	447;"	d
V4L2_CAP_VIDEO_CAPTURE	videodev2.h	443;"	d
V4L2_CAP_VIDEO_CAPTURE_MPLANE	videodev2.h	456;"	d
V4L2_CAP_VIDEO_M2M	videodev2.h	462;"	d
V4L2_CAP_VIDEO_M2M_MPLANE	videodev2.h	460;"	d
V4L2_CAP_VIDEO_OUTPUT	videodev2.h	444;"	d
V4L2_CAP_VIDEO_OUTPUT_MPLANE	videodev2.h	458;"	d
V4L2_CAP_VIDEO_OUTPUT_OVERLAY	videodev2.h	451;"	d
V4L2_CAP_VIDEO_OVERLAY	videodev2.h	445;"	d
V4L2_CHIP_FL_READABLE	videodev2.h	2311;"	d
V4L2_CHIP_FL_WRITABLE	videodev2.h	2312;"	d
V4L2_CHIP_MATCH_AC97	videodev2.h	2294;"	d
V4L2_CHIP_MATCH_BRIDGE	videodev2.h	2287;"	d
V4L2_CHIP_MATCH_HOST	videodev2.h	2291;"	d
V4L2_CHIP_MATCH_I2C_ADDR	videodev2.h	2293;"	d
V4L2_CHIP_MATCH_I2C_DRIVER	videodev2.h	2292;"	d
V4L2_CHIP_MATCH_SUBDEV	videodev2.h	2288;"	d
V4L2_CID_MAX_CTRLS	videodev2.h	1717;"	d
V4L2_CID_PRIVATE_BASE	videodev2.h	1719;"	d
V4L2_CLK_NAME_SIZE	v4l2-clk.h	68;"	d
V4L2_COLORSPACE_470_SYSTEM_BG	videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_BG = 6,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_470_SYSTEM_M	videodev2.h	/^	V4L2_COLORSPACE_470_SYSTEM_M  = 5,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_ADOBERGB	videodev2.h	397;"	d
V4L2_COLORSPACE_BT2020	videodev2.h	/^	V4L2_COLORSPACE_BT2020        = 10,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_BT878	videodev2.h	/^	V4L2_COLORSPACE_BT878         = 4,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_DCI_P3	videodev2.h	/^	V4L2_COLORSPACE_DCI_P3        = 12,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_DEFAULT	videodev2.h	/^	V4L2_COLORSPACE_DEFAULT       = 0,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_JPEG	videodev2.h	/^	V4L2_COLORSPACE_JPEG          = 7,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_OPRGB	videodev2.h	/^	V4L2_COLORSPACE_OPRGB         = 9,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_RAW	videodev2.h	/^	V4L2_COLORSPACE_RAW           = 11,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_REC709	videodev2.h	/^	V4L2_COLORSPACE_REC709        = 3,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE170M	videodev2.h	/^	V4L2_COLORSPACE_SMPTE170M     = 1,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SMPTE240M	videodev2.h	/^	V4L2_COLORSPACE_SMPTE240M     = 2,$/;"	e	enum:v4l2_colorspace
V4L2_COLORSPACE_SRGB	videodev2.h	/^	V4L2_COLORSPACE_SRGB          = 8,$/;"	e	enum:v4l2_colorspace
V4L2_COMMON_H_	v4l2-common.h	27;"	d
V4L2_CTRL_COMPOUND_TYPES	videodev2.h	/^	V4L2_CTRL_COMPOUND_TYPES     = 0x0100,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_DRIVER_PRIV	videodev2.h	1635;"	d
V4L2_CTRL_FLAG_DISABLED	videodev2.h	1700;"	d
V4L2_CTRL_FLAG_EXECUTE_ON_WRITE	videodev2.h	1709;"	d
V4L2_CTRL_FLAG_GRABBED	videodev2.h	1701;"	d
V4L2_CTRL_FLAG_HAS_PAYLOAD	videodev2.h	1708;"	d
V4L2_CTRL_FLAG_INACTIVE	videodev2.h	1704;"	d
V4L2_CTRL_FLAG_MODIFY_LAYOUT	videodev2.h	1710;"	d
V4L2_CTRL_FLAG_NEXT_COMPOUND	videodev2.h	1714;"	d
V4L2_CTRL_FLAG_NEXT_CTRL	videodev2.h	1713;"	d
V4L2_CTRL_FLAG_READ_ONLY	videodev2.h	1702;"	d
V4L2_CTRL_FLAG_SLIDER	videodev2.h	1705;"	d
V4L2_CTRL_FLAG_UPDATE	videodev2.h	1703;"	d
V4L2_CTRL_FLAG_VOLATILE	videodev2.h	1707;"	d
V4L2_CTRL_FLAG_WRITE_ONLY	videodev2.h	1706;"	d
V4L2_CTRL_ID2CLASS	videodev2.h	1632;"	d
V4L2_CTRL_ID2WHICH	videodev2.h	1634;"	d
V4L2_CTRL_ID_MASK	videodev2.h	1630;"	d
V4L2_CTRL_MAX_DIMS	videodev2.h	1636;"	d
V4L2_CTRL_TYPE_BITMASK	videodev2.h	/^	V4L2_CTRL_TYPE_BITMASK       = 8,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_BOOLEAN	videodev2.h	/^	V4L2_CTRL_TYPE_BOOLEAN	     = 2,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_BUTTON	videodev2.h	/^	V4L2_CTRL_TYPE_BUTTON	     = 4,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_CTRL_CLASS	videodev2.h	/^	V4L2_CTRL_TYPE_CTRL_CLASS    = 6,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER	     = 1,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER64	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER64     = 5,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_INTEGER_MENU	videodev2.h	/^	V4L2_CTRL_TYPE_INTEGER_MENU  = 9,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_MENU	videodev2.h	/^	V4L2_CTRL_TYPE_MENU	     = 3,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_STRING	videodev2.h	/^	V4L2_CTRL_TYPE_STRING        = 7,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_U16	videodev2.h	/^	V4L2_CTRL_TYPE_U16	     = 0x0101,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_U32	videodev2.h	/^	V4L2_CTRL_TYPE_U32	     = 0x0102,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_TYPE_U8	videodev2.h	/^	V4L2_CTRL_TYPE_U8	     = 0x0100,$/;"	e	enum:v4l2_ctrl_type
V4L2_CTRL_WHICH_CUR_VAL	videodev2.h	1637;"	d
V4L2_CTRL_WHICH_DEF_VAL	videodev2.h	1638;"	d
V4L2_DEC_CMD_PAUSE	videodev2.h	1909;"	d
V4L2_DEC_CMD_PAUSE_TO_BLACK	videodev2.h	1916;"	d
V4L2_DEC_CMD_RESUME	videodev2.h	1910;"	d
V4L2_DEC_CMD_START	videodev2.h	1907;"	d
V4L2_DEC_CMD_START_MUTE_AUDIO	videodev2.h	1913;"	d
V4L2_DEC_CMD_STOP	videodev2.h	1908;"	d
V4L2_DEC_CMD_STOP_IMMEDIATELY	videodev2.h	1920;"	d
V4L2_DEC_CMD_STOP_TO_BLACK	videodev2.h	1919;"	d
V4L2_DEC_START_FMT_GOP	videodev2.h	1927;"	d
V4L2_DEC_START_FMT_NONE	videodev2.h	1925;"	d
V4L2_DEVICE_NAME_SIZE	v4l2-device.h	28;"	d
V4L2_DEVICE_NOTIFY_EVENT	v4l2-subdev.h	39;"	d
V4L2_DEV_DEBUG_FOP	v4l2-ioctl.h	601;"	d
V4L2_DEV_DEBUG_IOCTL	v4l2-ioctl.h	597;"	d
V4L2_DEV_DEBUG_IOCTL_ARG	v4l2-ioctl.h	599;"	d
V4L2_DEV_DEBUG_POLL	v4l2-ioctl.h	605;"	d
V4L2_DEV_DEBUG_STREAMING	v4l2-ioctl.h	603;"	d
V4L2_DV_BT_656_1120	videodev2.h	1452;"	d
V4L2_DV_BT_BLANKING_HEIGHT	videodev2.h	1433;"	d
V4L2_DV_BT_BLANKING_WIDTH	videodev2.h	1429;"	d
V4L2_DV_BT_CAP_CUSTOM	videodev2.h	1499;"	d
V4L2_DV_BT_CAP_INTERLACED	videodev2.h	1493;"	d
V4L2_DV_BT_CAP_PROGRESSIVE	videodev2.h	1495;"	d
V4L2_DV_BT_CAP_REDUCED_BLANKING	videodev2.h	1497;"	d
V4L2_DV_BT_FRAME_HEIGHT	videodev2.h	1436;"	d
V4L2_DV_BT_FRAME_WIDTH	videodev2.h	1431;"	d
V4L2_DV_BT_STD_CEA861	videodev2.h	1359;"	d
V4L2_DV_BT_STD_CVT	videodev2.h	1361;"	d
V4L2_DV_BT_STD_DMT	videodev2.h	1360;"	d
V4L2_DV_BT_STD_GTF	videodev2.h	1362;"	d
V4L2_DV_BT_STD_SDI	videodev2.h	1363;"	d
V4L2_DV_FL_CAN_REDUCE_FPS	videodev2.h	1379;"	d
V4L2_DV_FL_FIRST_FIELD_EXTRA_LINE	videodev2.h	1409;"	d
V4L2_DV_FL_HALF_LINE	videodev2.h	1396;"	d
V4L2_DV_FL_HAS_CEA861_VIC	videodev2.h	1420;"	d
V4L2_DV_FL_HAS_HDMI_VIC	videodev2.h	1426;"	d
V4L2_DV_FL_HAS_PICTURE_ASPECT	videodev2.h	1415;"	d
V4L2_DV_FL_IS_CE_VIDEO	videodev2.h	1404;"	d
V4L2_DV_FL_REDUCED_BLANKING	videodev2.h	1373;"	d
V4L2_DV_FL_REDUCED_FPS	videodev2.h	1389;"	d
V4L2_DV_HSYNC_POS_POL	videodev2.h	1356;"	d
V4L2_DV_INTERLACED	videodev2.h	1352;"	d
V4L2_DV_PROGRESSIVE	videodev2.h	1351;"	d
V4L2_DV_VSYNC_POS_POL	videodev2.h	1355;"	d
V4L2_ENC_CMD_PAUSE	videodev2.h	1890;"	d
V4L2_ENC_CMD_RESUME	videodev2.h	1891;"	d
V4L2_ENC_CMD_START	videodev2.h	1888;"	d
V4L2_ENC_CMD_STOP	videodev2.h	1889;"	d
V4L2_ENC_CMD_STOP_AT_GOP_END	videodev2.h	1894;"	d
V4L2_ENC_IDX_ENTRIES	videodev2.h	1879;"	d
V4L2_ENC_IDX_FRAME_B	videodev2.h	1868;"	d
V4L2_ENC_IDX_FRAME_I	videodev2.h	1866;"	d
V4L2_ENC_IDX_FRAME_MASK	videodev2.h	1869;"	d
V4L2_ENC_IDX_FRAME_P	videodev2.h	1867;"	d
V4L2_EVENT_ALL	videodev2.h	2192;"	d
V4L2_EVENT_CTRL	videodev2.h	2195;"	d
V4L2_EVENT_CTRL_CH_FLAGS	videodev2.h	2209;"	d
V4L2_EVENT_CTRL_CH_RANGE	videodev2.h	2210;"	d
V4L2_EVENT_CTRL_CH_VALUE	videodev2.h	2208;"	d
V4L2_EVENT_EOS	videodev2.h	2194;"	d
V4L2_EVENT_FRAME_SYNC	videodev2.h	2196;"	d
V4L2_EVENT_H	v4l2-event.h	21;"	d
V4L2_EVENT_MD_FL_HAVE_FRAME_SEQ	videodev2.h	2236;"	d
V4L2_EVENT_MOTION_DET	videodev2.h	2198;"	d
V4L2_EVENT_PRIVATE_START	videodev2.h	2199;"	d
V4L2_EVENT_SOURCE_CHANGE	videodev2.h	2197;"	d
V4L2_EVENT_SRC_CH_RESOLUTION	videodev2.h	2230;"	d
V4L2_EVENT_SUB_FL_ALLOW_FEEDBACK	videodev2.h	2269;"	d
V4L2_EVENT_SUB_FL_SEND_INITIAL	videodev2.h	2268;"	d
V4L2_EVENT_VSYNC	videodev2.h	2193;"	d
V4L2_FBUF_CAP_BITMAP_CLIPPING	videodev2.h	1056;"	d
V4L2_FBUF_CAP_CHROMAKEY	videodev2.h	1054;"	d
V4L2_FBUF_CAP_EXTERNOVERLAY	videodev2.h	1053;"	d
V4L2_FBUF_CAP_GLOBAL_ALPHA	videodev2.h	1058;"	d
V4L2_FBUF_CAP_LIST_CLIPPING	videodev2.h	1055;"	d
V4L2_FBUF_CAP_LOCAL_ALPHA	videodev2.h	1057;"	d
V4L2_FBUF_CAP_LOCAL_INV_ALPHA	videodev2.h	1059;"	d
V4L2_FBUF_CAP_SRC_CHROMAKEY	videodev2.h	1060;"	d
V4L2_FBUF_FLAG_CHROMAKEY	videodev2.h	1064;"	d
V4L2_FBUF_FLAG_GLOBAL_ALPHA	videodev2.h	1066;"	d
V4L2_FBUF_FLAG_LOCAL_ALPHA	videodev2.h	1065;"	d
V4L2_FBUF_FLAG_LOCAL_INV_ALPHA	videodev2.h	1067;"	d
V4L2_FBUF_FLAG_OVERLAY	videodev2.h	1063;"	d
V4L2_FBUF_FLAG_PRIMARY	videodev2.h	1062;"	d
V4L2_FBUF_FLAG_SRC_CHROMAKEY	videodev2.h	1068;"	d
V4L2_FH_H	v4l2-fh.h	22;"	d
V4L2_FIELD_ALTERNATE	videodev2.h	/^	V4L2_FIELD_ALTERNATE     = 7, \/* both fields alternating into$/;"	e	enum:v4l2_field
V4L2_FIELD_ANY	videodev2.h	/^	V4L2_FIELD_ANY           = 0, \/* driver can choose from none,$/;"	e	enum:v4l2_field
V4L2_FIELD_BOTTOM	videodev2.h	/^	V4L2_FIELD_BOTTOM        = 3, \/* bottom field only *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_HAS_BOTH	videodev2.h	128;"	d
V4L2_FIELD_HAS_BOTTOM	videodev2.h	121;"	d
V4L2_FIELD_HAS_TOP	videodev2.h	114;"	d
V4L2_FIELD_HAS_T_OR_B	videodev2.h	134;"	d
V4L2_FIELD_INTERLACED	videodev2.h	/^	V4L2_FIELD_INTERLACED    = 4, \/* both fields interlaced *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_INTERLACED_BT	videodev2.h	/^	V4L2_FIELD_INTERLACED_BT = 9, \/* both fields interlaced, top field$/;"	e	enum:v4l2_field
V4L2_FIELD_INTERLACED_TB	videodev2.h	/^	V4L2_FIELD_INTERLACED_TB = 8, \/* both fields interlaced, top field$/;"	e	enum:v4l2_field
V4L2_FIELD_NONE	videodev2.h	/^	V4L2_FIELD_NONE          = 1, \/* this device has no fields ... *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_BT	videodev2.h	/^	V4L2_FIELD_SEQ_BT        = 6, \/* same as above + bottom-top order *\/$/;"	e	enum:v4l2_field
V4L2_FIELD_SEQ_TB	videodev2.h	/^	V4L2_FIELD_SEQ_TB        = 5, \/* both fields sequential into one$/;"	e	enum:v4l2_field
V4L2_FIELD_TOP	videodev2.h	/^	V4L2_FIELD_TOP           = 2, \/* top field only *\/$/;"	e	enum:v4l2_field
V4L2_FL_REGISTERED	v4l2-dev.h	/^	V4L2_FL_REGISTERED	= 0,$/;"	e	enum:v4l2_video_device_flags
V4L2_FL_USES_V4L2_FH	v4l2-dev.h	/^	V4L2_FL_USES_V4L2_FH	= 1,$/;"	e	enum:v4l2_video_device_flags
V4L2_FMT_FLAG_COMPRESSED	videodev2.h	741;"	d
V4L2_FMT_FLAG_EMULATED	videodev2.h	742;"	d
V4L2_FOURCC_CONV	videodev2.h	85;"	d
V4L2_FOURCC_CONV_ARGS	videodev2.h	86;"	d
V4L2_FRAME_DESC_ENTRY_MAX	v4l2-subdev.h	350;"	d
V4L2_FRMIVAL_TYPE_CONTINUOUS	videodev2.h	/^	V4L2_FRMIVAL_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_DISCRETE	videodev2.h	/^	V4L2_FRMIVAL_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMIVAL_TYPE_STEPWISE	videodev2.h	/^	V4L2_FRMIVAL_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmivaltypes
V4L2_FRMSIZE_TYPE_CONTINUOUS	videodev2.h	/^	V4L2_FRMSIZE_TYPE_CONTINUOUS	= 2,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_DISCRETE	videodev2.h	/^	V4L2_FRMSIZE_TYPE_DISCRETE	= 1,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FRMSIZE_TYPE_STEPWISE	videodev2.h	/^	V4L2_FRMSIZE_TYPE_STEPWISE	= 3,$/;"	e	enum:v4l2_frmsizetypes
V4L2_FWNODE_BUS_TYPE_CCP2	v4l2-fwnode.c	/^	V4L2_FWNODE_BUS_TYPE_CCP2,$/;"	e	enum:v4l2_fwnode_bus_type	file:
V4L2_FWNODE_BUS_TYPE_CSI1	v4l2-fwnode.c	/^	V4L2_FWNODE_BUS_TYPE_CSI1,$/;"	e	enum:v4l2_fwnode_bus_type	file:
V4L2_FWNODE_BUS_TYPE_CSI2_CPHY	v4l2-fwnode.c	/^	V4L2_FWNODE_BUS_TYPE_CSI2_CPHY,$/;"	e	enum:v4l2_fwnode_bus_type	file:
V4L2_FWNODE_BUS_TYPE_GUESS	v4l2-fwnode.c	/^	V4L2_FWNODE_BUS_TYPE_GUESS = 0,$/;"	e	enum:v4l2_fwnode_bus_type	file:
V4L2_FWNODE_CSI2_MAX_DATA_LANES	v4l2-fwnode.h	31;"	d
V4L2_HSV_ENC_180	videodev2.h	/^	V4L2_HSV_ENC_180		= 128,$/;"	e	enum:v4l2_hsv_encoding
V4L2_HSV_ENC_256	videodev2.h	/^	V4L2_HSV_ENC_256		= 129,$/;"	e	enum:v4l2_hsv_encoding
V4L2_INPUT_TYPE_CAMERA	videodev2.h	1535;"	d
V4L2_INPUT_TYPE_TOUCH	videodev2.h	1536;"	d
V4L2_INPUT_TYPE_TUNER	videodev2.h	1534;"	d
V4L2_IN_CAP_CUSTOM_TIMINGS	videodev2.h	1566;"	d
V4L2_IN_CAP_DV_TIMINGS	videodev2.h	1565;"	d
V4L2_IN_CAP_NATIVE_SIZE	videodev2.h	1568;"	d
V4L2_IN_CAP_STD	videodev2.h	1567;"	d
V4L2_IN_ST_COLOR_KILL	videodev2.h	1550;"	d
V4L2_IN_ST_HFLIP	videodev2.h	1545;"	d
V4L2_IN_ST_MACROVISION	videodev2.h	1560;"	d
V4L2_IN_ST_NO_ACCESS	videodev2.h	1561;"	d
V4L2_IN_ST_NO_CARRIER	videodev2.h	1557;"	d
V4L2_IN_ST_NO_COLOR	videodev2.h	1541;"	d
V4L2_IN_ST_NO_EQU	videodev2.h	1556;"	d
V4L2_IN_ST_NO_H_LOCK	videodev2.h	1549;"	d
V4L2_IN_ST_NO_POWER	videodev2.h	1539;"	d
V4L2_IN_ST_NO_SIGNAL	videodev2.h	1540;"	d
V4L2_IN_ST_NO_STD_LOCK	videodev2.h	1552;"	d
V4L2_IN_ST_NO_SYNC	videodev2.h	1555;"	d
V4L2_IN_ST_NO_V_LOCK	videodev2.h	1551;"	d
V4L2_IN_ST_VFLIP	videodev2.h	1546;"	d
V4L2_IN_ST_VTR	videodev2.h	1562;"	d
V4L2_IOCTLS	v4l2-ioctl.c	2673;"	d	file:
V4L2_JPEG_MARKER_APP	videodev2.h	864;"	d
V4L2_JPEG_MARKER_COM	videodev2.h	863;"	d
V4L2_JPEG_MARKER_DHT	videodev2.h	860;"	d
V4L2_JPEG_MARKER_DQT	videodev2.h	861;"	d
V4L2_JPEG_MARKER_DRI	videodev2.h	862;"	d
V4L2_MAP_COLORSPACE_DEFAULT	videodev2.h	251;"	d
V4L2_MAP_QUANTIZATION_DEFAULT	videodev2.h	384;"	d
V4L2_MAP_XFER_FUNC_DEFAULT	videodev2.h	288;"	d
V4L2_MAP_YCBCR_ENC_DEFAULT	videodev2.h	361;"	d
V4L2_MAX_SUBDEVS	v4l2-async.h	24;"	d
V4L2_MBUS_BT656	v4l2-mediabus.h	/^	V4L2_MBUS_BT656,$/;"	e	enum:v4l2_mbus_type
V4L2_MBUS_CCP2	v4l2-mediabus.h	/^	V4L2_MBUS_CCP2,$/;"	e	enum:v4l2_mbus_type
V4L2_MBUS_CSI1	v4l2-mediabus.h	/^	V4L2_MBUS_CSI1,$/;"	e	enum:v4l2_mbus_type
V4L2_MBUS_CSI2	v4l2-mediabus.h	/^	V4L2_MBUS_CSI2,$/;"	e	enum:v4l2_mbus_type
V4L2_MBUS_CSI2_1_LANE	v4l2-mediabus.h	53;"	d
V4L2_MBUS_CSI2_2_LANE	v4l2-mediabus.h	54;"	d
V4L2_MBUS_CSI2_3_LANE	v4l2-mediabus.h	55;"	d
V4L2_MBUS_CSI2_4_LANE	v4l2-mediabus.h	56;"	d
V4L2_MBUS_CSI2_CHANNELS	v4l2-mediabus.h	68;"	d
V4L2_MBUS_CSI2_CHANNEL_0	v4l2-mediabus.h	58;"	d
V4L2_MBUS_CSI2_CHANNEL_1	v4l2-mediabus.h	59;"	d
V4L2_MBUS_CSI2_CHANNEL_2	v4l2-mediabus.h	60;"	d
V4L2_MBUS_CSI2_CHANNEL_3	v4l2-mediabus.h	61;"	d
V4L2_MBUS_CSI2_CONTINUOUS_CLOCK	v4l2-mediabus.h	63;"	d
V4L2_MBUS_CSI2_LANES	v4l2-mediabus.h	66;"	d
V4L2_MBUS_CSI2_LANE_MASK	v4l2-mediabus.h	77;"	d
V4L2_MBUS_CSI2_NONCONTINUOUS_CLOCK	v4l2-mediabus.h	64;"	d
V4L2_MBUS_DATA_ACTIVE_HIGH	v4l2-mediabus.h	39;"	d
V4L2_MBUS_DATA_ACTIVE_LOW	v4l2-mediabus.h	40;"	d
V4L2_MBUS_DATA_ENABLE_HIGH	v4l2-mediabus.h	48;"	d
V4L2_MBUS_DATA_ENABLE_LOW	v4l2-mediabus.h	49;"	d
V4L2_MBUS_FIELD_EVEN_HIGH	v4l2-mediabus.h	42;"	d
V4L2_MBUS_FIELD_EVEN_LOW	v4l2-mediabus.h	44;"	d
V4L2_MBUS_FRAME_DESC_FL_BLOB	v4l2-subdev.h	/^	V4L2_MBUS_FRAME_DESC_FL_BLOB	= BIT(1),$/;"	e	enum:v4l2_mbus_frame_desc_flags
V4L2_MBUS_FRAME_DESC_FL_LEN_MAX	v4l2-subdev.h	/^	V4L2_MBUS_FRAME_DESC_FL_LEN_MAX	= BIT(0),$/;"	e	enum:v4l2_mbus_frame_desc_flags
V4L2_MBUS_HSYNC_ACTIVE_HIGH	v4l2-mediabus.h	33;"	d
V4L2_MBUS_HSYNC_ACTIVE_LOW	v4l2-mediabus.h	34;"	d
V4L2_MBUS_MASTER	v4l2-mediabus.h	25;"	d
V4L2_MBUS_PARALLEL	v4l2-mediabus.h	/^	V4L2_MBUS_PARALLEL,$/;"	e	enum:v4l2_mbus_type
V4L2_MBUS_PCLK_SAMPLE_FALLING	v4l2-mediabus.h	38;"	d
V4L2_MBUS_PCLK_SAMPLE_RISING	v4l2-mediabus.h	37;"	d
V4L2_MBUS_SLAVE	v4l2-mediabus.h	26;"	d
V4L2_MBUS_VIDEO_SOG_ACTIVE_HIGH	v4l2-mediabus.h	46;"	d
V4L2_MBUS_VIDEO_SOG_ACTIVE_LOW	v4l2-mediabus.h	47;"	d
V4L2_MBUS_VSYNC_ACTIVE_HIGH	v4l2-mediabus.h	35;"	d
V4L2_MBUS_VSYNC_ACTIVE_LOW	v4l2-mediabus.h	36;"	d
V4L2_MEDIABUS_H	v4l2-mediabus.h	12;"	d
V4L2_MEMORY_DMABUF	videodev2.h	/^	V4L2_MEMORY_DMABUF           = 4,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_MMAP	videodev2.h	/^	V4L2_MEMORY_MMAP             = 1,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_OVERLAY	videodev2.h	/^	V4L2_MEMORY_OVERLAY          = 3,$/;"	e	enum:v4l2_memory
V4L2_MEMORY_USERPTR	videodev2.h	/^	V4L2_MEMORY_USERPTR          = 2,$/;"	e	enum:v4l2_memory
V4L2_META_FMT_UVC	videodev2.h	721;"	d
V4L2_META_FMT_VSP1_HGO	videodev2.h	719;"	d
V4L2_META_FMT_VSP1_HGT	videodev2.h	720;"	d
V4L2_MODE_HIGHQUALITY	videodev2.h	1098;"	d
V4L2_MPEG_VBI_IVTV_CAPTION_525	videodev2.h	2053;"	d
V4L2_MPEG_VBI_IVTV_MAGIC0	videodev2.h	2071;"	d
V4L2_MPEG_VBI_IVTV_MAGIC1	videodev2.h	2072;"	d
V4L2_MPEG_VBI_IVTV_TELETEXT_B	videodev2.h	2052;"	d
V4L2_MPEG_VBI_IVTV_VPS	videodev2.h	2055;"	d
V4L2_MPEG_VBI_IVTV_WSS_625	videodev2.h	2054;"	d
V4L2_OUTPUT_TYPE_ANALOG	videodev2.h	1585;"	d
V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY	videodev2.h	1586;"	d
V4L2_OUTPUT_TYPE_MODULATOR	videodev2.h	1584;"	d
V4L2_OUT_CAP_CUSTOM_TIMINGS	videodev2.h	1590;"	d
V4L2_OUT_CAP_DV_TIMINGS	videodev2.h	1589;"	d
V4L2_OUT_CAP_NATIVE_SIZE	videodev2.h	1592;"	d
V4L2_OUT_CAP_STD	videodev2.h	1591;"	d
V4L2_PIX_FMT_ABGR32	videodev2.h	524;"	d
V4L2_PIX_FMT_ARGB32	videodev2.h	527;"	d
V4L2_PIX_FMT_ARGB444	videodev2.h	510;"	d
V4L2_PIX_FMT_ARGB555	videodev2.h	513;"	d
V4L2_PIX_FMT_ARGB555X	videodev2.h	517;"	d
V4L2_PIX_FMT_BGR24	videodev2.h	521;"	d
V4L2_PIX_FMT_BGR32	videodev2.h	523;"	d
V4L2_PIX_FMT_BGR666	videodev2.h	520;"	d
V4L2_PIX_FMT_CIT_YYVYUY	videodev2.h	685;"	d
V4L2_PIX_FMT_CPIA1	videodev2.h	664;"	d
V4L2_PIX_FMT_DV	videodev2.h	646;"	d
V4L2_PIX_FMT_ET61X251	videodev2.h	670;"	d
V4L2_PIX_FMT_FLAG_PREMUL_ALPHA	videodev2.h	727;"	d
V4L2_PIX_FMT_FWHT	videodev2.h	661;"	d
V4L2_PIX_FMT_GREY	videodev2.h	531;"	d
V4L2_PIX_FMT_H263	videodev2.h	651;"	d
V4L2_PIX_FMT_H264	videodev2.h	648;"	d
V4L2_PIX_FMT_H264_MVC	videodev2.h	650;"	d
V4L2_PIX_FMT_H264_NO_SC	videodev2.h	649;"	d
V4L2_PIX_FMT_HEVC	videodev2.h	660;"	d
V4L2_PIX_FMT_HI240	videodev2.h	560;"	d
V4L2_PIX_FMT_HM12	videodev2.h	561;"	d
V4L2_PIX_FMT_HSV24	videodev2.h	640;"	d
V4L2_PIX_FMT_HSV32	videodev2.h	641;"	d
V4L2_PIX_FMT_INZI	videodev2.h	694;"	d
V4L2_PIX_FMT_IPU3_SBGGR10	videodev2.h	697;"	d
V4L2_PIX_FMT_IPU3_SGBRG10	videodev2.h	698;"	d
V4L2_PIX_FMT_IPU3_SGRBG10	videodev2.h	699;"	d
V4L2_PIX_FMT_IPU3_SRGGB10	videodev2.h	700;"	d
V4L2_PIX_FMT_JL2005BCD	videodev2.h	677;"	d
V4L2_PIX_FMT_JPEG	videodev2.h	645;"	d
V4L2_PIX_FMT_JPGL	videodev2.h	687;"	d
V4L2_PIX_FMT_KONICA420	videodev2.h	686;"	d
V4L2_PIX_FMT_M420	videodev2.h	562;"	d
V4L2_PIX_FMT_MJPEG	videodev2.h	644;"	d
V4L2_PIX_FMT_MPEG	videodev2.h	647;"	d
V4L2_PIX_FMT_MPEG1	videodev2.h	652;"	d
V4L2_PIX_FMT_MPEG2	videodev2.h	653;"	d
V4L2_PIX_FMT_MPEG4	videodev2.h	654;"	d
V4L2_PIX_FMT_MR97310A	videodev2.h	676;"	d
V4L2_PIX_FMT_MT21C	videodev2.h	693;"	d
V4L2_PIX_FMT_NV12	videodev2.h	565;"	d
V4L2_PIX_FMT_NV12M	videodev2.h	573;"	d
V4L2_PIX_FMT_NV12MT	videodev2.h	577;"	d
V4L2_PIX_FMT_NV12MT_16X16	videodev2.h	578;"	d
V4L2_PIX_FMT_NV16	videodev2.h	567;"	d
V4L2_PIX_FMT_NV16M	videodev2.h	575;"	d
V4L2_PIX_FMT_NV21	videodev2.h	566;"	d
V4L2_PIX_FMT_NV21M	videodev2.h	574;"	d
V4L2_PIX_FMT_NV24	videodev2.h	569;"	d
V4L2_PIX_FMT_NV42	videodev2.h	570;"	d
V4L2_PIX_FMT_NV61	videodev2.h	568;"	d
V4L2_PIX_FMT_NV61M	videodev2.h	576;"	d
V4L2_PIX_FMT_OV511	videodev2.h	681;"	d
V4L2_PIX_FMT_OV518	videodev2.h	682;"	d
V4L2_PIX_FMT_PAC207	videodev2.h	675;"	d
V4L2_PIX_FMT_PAL8	videodev2.h	544;"	d
V4L2_PIX_FMT_PJPG	videodev2.h	680;"	d
V4L2_PIX_FMT_PRIV_MAGIC	videodev2.h	724;"	d
V4L2_PIX_FMT_PWC1	videodev2.h	668;"	d
V4L2_PIX_FMT_PWC2	videodev2.h	669;"	d
V4L2_PIX_FMT_RGB24	videodev2.h	522;"	d
V4L2_PIX_FMT_RGB32	videodev2.h	526;"	d
V4L2_PIX_FMT_RGB332	videodev2.h	508;"	d
V4L2_PIX_FMT_RGB444	videodev2.h	509;"	d
V4L2_PIX_FMT_RGB555	videodev2.h	512;"	d
V4L2_PIX_FMT_RGB555X	videodev2.h	516;"	d
V4L2_PIX_FMT_RGB565	videodev2.h	515;"	d
V4L2_PIX_FMT_RGB565X	videodev2.h	519;"	d
V4L2_PIX_FMT_S5C_UYVY_JPG	videodev2.h	689;"	d
V4L2_PIX_FMT_SBGGR10	videodev2.h	601;"	d
V4L2_PIX_FMT_SBGGR10ALAW8	videodev2.h	611;"	d
V4L2_PIX_FMT_SBGGR10DPCM8	videodev2.h	616;"	d
V4L2_PIX_FMT_SBGGR10P	videodev2.h	606;"	d
V4L2_PIX_FMT_SBGGR12	videodev2.h	620;"	d
V4L2_PIX_FMT_SBGGR12P	videodev2.h	625;"	d
V4L2_PIX_FMT_SBGGR14P	videodev2.h	630;"	d
V4L2_PIX_FMT_SBGGR16	videodev2.h	634;"	d
V4L2_PIX_FMT_SBGGR8	videodev2.h	597;"	d
V4L2_PIX_FMT_SE401	videodev2.h	688;"	d
V4L2_PIX_FMT_SGBRG10	videodev2.h	602;"	d
V4L2_PIX_FMT_SGBRG10ALAW8	videodev2.h	612;"	d
V4L2_PIX_FMT_SGBRG10DPCM8	videodev2.h	617;"	d
V4L2_PIX_FMT_SGBRG10P	videodev2.h	607;"	d
V4L2_PIX_FMT_SGBRG12	videodev2.h	621;"	d
V4L2_PIX_FMT_SGBRG12P	videodev2.h	626;"	d
V4L2_PIX_FMT_SGBRG14P	videodev2.h	631;"	d
V4L2_PIX_FMT_SGBRG16	videodev2.h	635;"	d
V4L2_PIX_FMT_SGBRG8	videodev2.h	598;"	d
V4L2_PIX_FMT_SGRBG10	videodev2.h	603;"	d
V4L2_PIX_FMT_SGRBG10ALAW8	videodev2.h	613;"	d
V4L2_PIX_FMT_SGRBG10DPCM8	videodev2.h	618;"	d
V4L2_PIX_FMT_SGRBG10P	videodev2.h	608;"	d
V4L2_PIX_FMT_SGRBG12	videodev2.h	622;"	d
V4L2_PIX_FMT_SGRBG12P	videodev2.h	627;"	d
V4L2_PIX_FMT_SGRBG14P	videodev2.h	632;"	d
V4L2_PIX_FMT_SGRBG16	videodev2.h	636;"	d
V4L2_PIX_FMT_SGRBG8	videodev2.h	599;"	d
V4L2_PIX_FMT_SN9C10X	videodev2.h	666;"	d
V4L2_PIX_FMT_SN9C2028	videodev2.h	678;"	d
V4L2_PIX_FMT_SN9C20X_I420	videodev2.h	667;"	d
V4L2_PIX_FMT_SPCA501	videodev2.h	671;"	d
V4L2_PIX_FMT_SPCA505	videodev2.h	672;"	d
V4L2_PIX_FMT_SPCA508	videodev2.h	673;"	d
V4L2_PIX_FMT_SPCA561	videodev2.h	674;"	d
V4L2_PIX_FMT_SQ905C	videodev2.h	679;"	d
V4L2_PIX_FMT_SRGGB10	videodev2.h	604;"	d
V4L2_PIX_FMT_SRGGB10ALAW8	videodev2.h	614;"	d
V4L2_PIX_FMT_SRGGB10DPCM8	videodev2.h	619;"	d
V4L2_PIX_FMT_SRGGB10P	videodev2.h	609;"	d
V4L2_PIX_FMT_SRGGB12	videodev2.h	623;"	d
V4L2_PIX_FMT_SRGGB12P	videodev2.h	628;"	d
V4L2_PIX_FMT_SRGGB14P	videodev2.h	633;"	d
V4L2_PIX_FMT_SRGGB16	videodev2.h	637;"	d
V4L2_PIX_FMT_SRGGB8	videodev2.h	600;"	d
V4L2_PIX_FMT_STV0680	videodev2.h	683;"	d
V4L2_PIX_FMT_TM6000	videodev2.h	684;"	d
V4L2_PIX_FMT_UV8	videodev2.h	547;"	d
V4L2_PIX_FMT_UYVY	videodev2.h	553;"	d
V4L2_PIX_FMT_VC1_ANNEX_G	videodev2.h	656;"	d
V4L2_PIX_FMT_VC1_ANNEX_L	videodev2.h	657;"	d
V4L2_PIX_FMT_VP8	videodev2.h	658;"	d
V4L2_PIX_FMT_VP9	videodev2.h	659;"	d
V4L2_PIX_FMT_VYUY	videodev2.h	554;"	d
V4L2_PIX_FMT_WNVA	videodev2.h	665;"	d
V4L2_PIX_FMT_XBGR32	videodev2.h	525;"	d
V4L2_PIX_FMT_XRGB32	videodev2.h	528;"	d
V4L2_PIX_FMT_XRGB444	videodev2.h	511;"	d
V4L2_PIX_FMT_XRGB555	videodev2.h	514;"	d
V4L2_PIX_FMT_XRGB555X	videodev2.h	518;"	d
V4L2_PIX_FMT_XVID	videodev2.h	655;"	d
V4L2_PIX_FMT_Y10	videodev2.h	534;"	d
V4L2_PIX_FMT_Y10BPACK	videodev2.h	540;"	d
V4L2_PIX_FMT_Y10P	videodev2.h	541;"	d
V4L2_PIX_FMT_Y12	videodev2.h	535;"	d
V4L2_PIX_FMT_Y12I	videodev2.h	691;"	d
V4L2_PIX_FMT_Y16	videodev2.h	536;"	d
V4L2_PIX_FMT_Y16_BE	videodev2.h	537;"	d
V4L2_PIX_FMT_Y4	videodev2.h	532;"	d
V4L2_PIX_FMT_Y41P	videodev2.h	555;"	d
V4L2_PIX_FMT_Y6	videodev2.h	533;"	d
V4L2_PIX_FMT_Y8I	videodev2.h	690;"	d
V4L2_PIX_FMT_YUV32	videodev2.h	559;"	d
V4L2_PIX_FMT_YUV410	videodev2.h	581;"	d
V4L2_PIX_FMT_YUV411P	videodev2.h	583;"	d
V4L2_PIX_FMT_YUV420	videodev2.h	584;"	d
V4L2_PIX_FMT_YUV420M	videodev2.h	589;"	d
V4L2_PIX_FMT_YUV422M	videodev2.h	591;"	d
V4L2_PIX_FMT_YUV422P	videodev2.h	586;"	d
V4L2_PIX_FMT_YUV444	videodev2.h	556;"	d
V4L2_PIX_FMT_YUV444M	videodev2.h	593;"	d
V4L2_PIX_FMT_YUV555	videodev2.h	557;"	d
V4L2_PIX_FMT_YUV565	videodev2.h	558;"	d
V4L2_PIX_FMT_YUYV	videodev2.h	550;"	d
V4L2_PIX_FMT_YVU410	videodev2.h	582;"	d
V4L2_PIX_FMT_YVU420	videodev2.h	585;"	d
V4L2_PIX_FMT_YVU420M	videodev2.h	590;"	d
V4L2_PIX_FMT_YVU422M	videodev2.h	592;"	d
V4L2_PIX_FMT_YVU444M	videodev2.h	594;"	d
V4L2_PIX_FMT_YVYU	videodev2.h	552;"	d
V4L2_PIX_FMT_YYUV	videodev2.h	551;"	d
V4L2_PIX_FMT_Z16	videodev2.h	692;"	d
V4L2_PRIORITY_BACKGROUND	videodev2.h	/^	V4L2_PRIORITY_BACKGROUND  = 1,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_DEFAULT	videodev2.h	/^	V4L2_PRIORITY_DEFAULT     = V4L2_PRIORITY_INTERACTIVE,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_INTERACTIVE	videodev2.h	/^	V4L2_PRIORITY_INTERACTIVE = 2,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_RECORD	videodev2.h	/^	V4L2_PRIORITY_RECORD      = 3,$/;"	e	enum:v4l2_priority
V4L2_PRIORITY_UNSET	videodev2.h	/^	V4L2_PRIORITY_UNSET       = 0,  \/* not initialized *\/$/;"	e	enum:v4l2_priority
V4L2_QUANTIZATION_DEFAULT	videodev2.h	/^	V4L2_QUANTIZATION_DEFAULT     = 0,$/;"	e	enum:v4l2_quantization
V4L2_QUANTIZATION_FULL_RANGE	videodev2.h	/^	V4L2_QUANTIZATION_FULL_RANGE  = 1,$/;"	e	enum:v4l2_quantization
V4L2_QUANTIZATION_LIM_RANGE	videodev2.h	/^	V4L2_QUANTIZATION_LIM_RANGE   = 2,$/;"	e	enum:v4l2_quantization
V4L2_RDS_BLOCK_A	videodev2.h	1826;"	d
V4L2_RDS_BLOCK_B	videodev2.h	1827;"	d
V4L2_RDS_BLOCK_C	videodev2.h	1828;"	d
V4L2_RDS_BLOCK_CORRECTED	videodev2.h	1833;"	d
V4L2_RDS_BLOCK_C_ALT	videodev2.h	1830;"	d
V4L2_RDS_BLOCK_D	videodev2.h	1829;"	d
V4L2_RDS_BLOCK_ERROR	videodev2.h	1834;"	d
V4L2_RDS_BLOCK_INVALID	videodev2.h	1831;"	d
V4L2_RDS_BLOCK_MSK	videodev2.h	1825;"	d
V4L2_SDR_FMT_CS14LE	videodev2.h	706;"	d
V4L2_SDR_FMT_CS8	videodev2.h	705;"	d
V4L2_SDR_FMT_CU16LE	videodev2.h	704;"	d
V4L2_SDR_FMT_CU8	videodev2.h	703;"	d
V4L2_SDR_FMT_PCU16BE	videodev2.h	708;"	d
V4L2_SDR_FMT_PCU18BE	videodev2.h	709;"	d
V4L2_SDR_FMT_PCU20BE	videodev2.h	710;"	d
V4L2_SDR_FMT_RU12LE	videodev2.h	707;"	d
V4L2_SLICED_CAPTION_525	videodev2.h	2009;"	d
V4L2_SLICED_TELETEXT_B	videodev2.h	2005;"	d
V4L2_SLICED_VBI_525	videodev2.h	2013;"	d
V4L2_SLICED_VBI_625	videodev2.h	2014;"	d
V4L2_SLICED_VPS	videodev2.h	2007;"	d
V4L2_SLICED_WSS_625	videodev2.h	2011;"	d
V4L2_STD_525_60	videodev2.h	1262;"	d
V4L2_STD_625_50	videodev2.h	1267;"	d
V4L2_STD_ALL	videodev2.h	1276;"	d
V4L2_STD_ATSC	videodev2.h	1272;"	d
V4L2_STD_ATSC_16_VSB	videodev2.h	1184;"	d
V4L2_STD_ATSC_8_VSB	videodev2.h	1183;"	d
V4L2_STD_B	videodev2.h	1235;"	d
V4L2_STD_BG	videodev2.h	1248;"	d
V4L2_STD_DK	videodev2.h	1246;"	d
V4L2_STD_G	videodev2.h	1238;"	d
V4L2_STD_GH	videodev2.h	1244;"	d
V4L2_STD_H	videodev2.h	1240;"	d
V4L2_STD_L	videodev2.h	1242;"	d
V4L2_STD_MN	videodev2.h	1250;"	d
V4L2_STD_MTS	videodev2.h	1256;"	d
V4L2_STD_NTSC	videodev2.h	1204;"	d
V4L2_STD_NTSC_443	videodev2.h	1170;"	d
V4L2_STD_NTSC_M	videodev2.h	1168;"	d
V4L2_STD_NTSC_M_JP	videodev2.h	1169;"	d
V4L2_STD_NTSC_M_KR	videodev2.h	1171;"	d
V4L2_STD_PAL	videodev2.h	1230;"	d
V4L2_STD_PAL_60	videodev2.h	1166;"	d
V4L2_STD_PAL_B	videodev2.h	1154;"	d
V4L2_STD_PAL_B1	videodev2.h	1155;"	d
V4L2_STD_PAL_BG	videodev2.h	1219;"	d
V4L2_STD_PAL_D	videodev2.h	1159;"	d
V4L2_STD_PAL_D1	videodev2.h	1160;"	d
V4L2_STD_PAL_DK	videodev2.h	1222;"	d
V4L2_STD_PAL_G	videodev2.h	1156;"	d
V4L2_STD_PAL_H	videodev2.h	1157;"	d
V4L2_STD_PAL_I	videodev2.h	1158;"	d
V4L2_STD_PAL_K	videodev2.h	1161;"	d
V4L2_STD_PAL_M	videodev2.h	1163;"	d
V4L2_STD_PAL_N	videodev2.h	1164;"	d
V4L2_STD_PAL_Nc	videodev2.h	1165;"	d
V4L2_STD_SECAM	videodev2.h	1212;"	d
V4L2_STD_SECAM_B	videodev2.h	1173;"	d
V4L2_STD_SECAM_D	videodev2.h	1174;"	d
V4L2_STD_SECAM_DK	videodev2.h	1208;"	d
V4L2_STD_SECAM_G	videodev2.h	1175;"	d
V4L2_STD_SECAM_H	videodev2.h	1176;"	d
V4L2_STD_SECAM_K	videodev2.h	1177;"	d
V4L2_STD_SECAM_K1	videodev2.h	1178;"	d
V4L2_STD_SECAM_L	videodev2.h	1179;"	d
V4L2_STD_SECAM_LC	videodev2.h	1180;"	d
V4L2_STD_UNKNOWN	videodev2.h	1275;"	d
V4L2_SUBDEV_FL_HAS_DEVNODE	v4l2-subdev.h	778;"	d
V4L2_SUBDEV_FL_HAS_EVENTS	v4l2-subdev.h	780;"	d
V4L2_SUBDEV_FL_IS_I2C	v4l2-subdev.h	774;"	d
V4L2_SUBDEV_FL_IS_SPI	v4l2-subdev.h	776;"	d
V4L2_SUBDEV_IO_PIN_ACTIVE_LOW	v4l2-subdev.h	/^	V4L2_SUBDEV_IO_PIN_ACTIVE_LOW	= 4,$/;"	e	enum:v4l2_subdev_io_pin_bits
V4L2_SUBDEV_IO_PIN_DISABLE	v4l2-subdev.h	/^	V4L2_SUBDEV_IO_PIN_DISABLE	= 0,$/;"	e	enum:v4l2_subdev_io_pin_bits
V4L2_SUBDEV_IO_PIN_INPUT	v4l2-subdev.h	/^	V4L2_SUBDEV_IO_PIN_INPUT	= 2,$/;"	e	enum:v4l2_subdev_io_pin_bits
V4L2_SUBDEV_IO_PIN_OUTPUT	v4l2-subdev.h	/^	V4L2_SUBDEV_IO_PIN_OUTPUT	= 1,$/;"	e	enum:v4l2_subdev_io_pin_bits
V4L2_SUBDEV_IO_PIN_SET_VALUE	v4l2-subdev.h	/^	V4L2_SUBDEV_IO_PIN_SET_VALUE	= 3,$/;"	e	enum:v4l2_subdev_io_pin_bits
V4L2_SUBDEV_IR_MODE_PULSE_WIDTH	v4l2-subdev.h	/^	V4L2_SUBDEV_IR_MODE_PULSE_WIDTH,$/;"	e	enum:v4l2_subdev_ir_mode
V4L2_SUBDEV_IR_RX_END_OF_RX_DETECTED	v4l2-subdev.h	32;"	d
V4L2_SUBDEV_IR_RX_FIFO_SERVICE_REQ	v4l2-subdev.h	31;"	d
V4L2_SUBDEV_IR_RX_HW_FIFO_OVERRUN	v4l2-subdev.h	33;"	d
V4L2_SUBDEV_IR_RX_NOTIFY	v4l2-subdev.h	30;"	d
V4L2_SUBDEV_IR_RX_SW_FIFO_OVERRUN	v4l2-subdev.h	34;"	d
V4L2_SUBDEV_IR_TX_FIFO_SERVICE_REQ	v4l2-subdev.h	37;"	d
V4L2_SUBDEV_IR_TX_NOTIFY	v4l2-subdev.h	36;"	d
V4L2_SUBDEV_NAME_SIZE	v4l2-subdev.h	771;"	d
V4L2_TCH_FMT_DELTA_TD08	videodev2.h	714;"	d
V4L2_TCH_FMT_DELTA_TD16	videodev2.h	713;"	d
V4L2_TCH_FMT_TU08	videodev2.h	716;"	d
V4L2_TCH_FMT_TU16	videodev2.h	715;"	d
V4L2_TC_FLAG_COLORFRAME	videodev2.h	833;"	d
V4L2_TC_FLAG_DROPFRAME	videodev2.h	832;"	d
V4L2_TC_TYPE_24FPS	videodev2.h	825;"	d
V4L2_TC_TYPE_25FPS	videodev2.h	826;"	d
V4L2_TC_TYPE_30FPS	videodev2.h	827;"	d
V4L2_TC_TYPE_50FPS	videodev2.h	828;"	d
V4L2_TC_TYPE_60FPS	videodev2.h	829;"	d
V4L2_TC_USERBITS_8BITCHARS	videodev2.h	836;"	d
V4L2_TC_USERBITS_USERDEFINED	videodev2.h	835;"	d
V4L2_TC_USERBITS_field	videodev2.h	834;"	d
V4L2_TUNER_ADC	videodev2.h	179;"	d
V4L2_TUNER_ANALOG_TV	videodev2.h	/^	V4L2_TUNER_ANALOG_TV	     = 2,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_CAP_1HZ	videodev2.h	1764;"	d
V4L2_TUNER_CAP_FREQ_BANDS	videodev2.h	1762;"	d
V4L2_TUNER_CAP_HWSEEK_BOUNDED	videodev2.h	1753;"	d
V4L2_TUNER_CAP_HWSEEK_PROG_LIM	videodev2.h	1763;"	d
V4L2_TUNER_CAP_HWSEEK_WRAP	videodev2.h	1754;"	d
V4L2_TUNER_CAP_LANG1	videodev2.h	1758;"	d
V4L2_TUNER_CAP_LANG2	videodev2.h	1756;"	d
V4L2_TUNER_CAP_LOW	videodev2.h	1751;"	d
V4L2_TUNER_CAP_NORM	videodev2.h	1752;"	d
V4L2_TUNER_CAP_RDS	videodev2.h	1759;"	d
V4L2_TUNER_CAP_RDS_BLOCK_IO	videodev2.h	1760;"	d
V4L2_TUNER_CAP_RDS_CONTROLS	videodev2.h	1761;"	d
V4L2_TUNER_CAP_SAP	videodev2.h	1757;"	d
V4L2_TUNER_CAP_STEREO	videodev2.h	1755;"	d
V4L2_TUNER_DIGITAL_TV	videodev2.h	/^	V4L2_TUNER_DIGITAL_TV	     = 3,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_MODE_LANG1	videodev2.h	1779;"	d
V4L2_TUNER_MODE_LANG1_LANG2	videodev2.h	1780;"	d
V4L2_TUNER_MODE_LANG2	videodev2.h	1777;"	d
V4L2_TUNER_MODE_MONO	videodev2.h	1775;"	d
V4L2_TUNER_MODE_SAP	videodev2.h	1778;"	d
V4L2_TUNER_MODE_STEREO	videodev2.h	1776;"	d
V4L2_TUNER_RADIO	videodev2.h	/^	V4L2_TUNER_RADIO	     = 1,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_RF	videodev2.h	/^	V4L2_TUNER_RF                = 5,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_SDR	videodev2.h	/^	V4L2_TUNER_SDR               = 4,$/;"	e	enum:v4l2_tuner_type
V4L2_TUNER_SUB_LANG1	videodev2.h	1771;"	d
V4L2_TUNER_SUB_LANG2	videodev2.h	1769;"	d
V4L2_TUNER_SUB_MONO	videodev2.h	1767;"	d
V4L2_TUNER_SUB_RDS	videodev2.h	1772;"	d
V4L2_TUNER_SUB_SAP	videodev2.h	1770;"	d
V4L2_TUNER_SUB_STEREO	videodev2.h	1768;"	d
V4L2_TYPE_IS_MULTIPLANAR	videodev2.h	157;"	d
V4L2_TYPE_IS_OUTPUT	videodev2.h	161;"	d
V4L2_VBI_INTERLACED	videodev2.h	1977;"	d
V4L2_VBI_ITU_525_F1_START	videodev2.h	1980;"	d
V4L2_VBI_ITU_525_F2_START	videodev2.h	1981;"	d
V4L2_VBI_ITU_625_F1_START	videodev2.h	1982;"	d
V4L2_VBI_ITU_625_F2_START	videodev2.h	1983;"	d
V4L2_VBI_UNSYNC	videodev2.h	1976;"	d
V4L2_XFER_FUNC_709	videodev2.h	/^	V4L2_XFER_FUNC_709         = 1,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_ADOBERGB	videodev2.h	398;"	d
V4L2_XFER_FUNC_DCI_P3	videodev2.h	/^	V4L2_XFER_FUNC_DCI_P3      = 6,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_DEFAULT	videodev2.h	/^	V4L2_XFER_FUNC_DEFAULT     = 0,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_NONE	videodev2.h	/^	V4L2_XFER_FUNC_NONE        = 5,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_OPRGB	videodev2.h	/^	V4L2_XFER_FUNC_OPRGB       = 3,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_SMPTE2084	videodev2.h	/^	V4L2_XFER_FUNC_SMPTE2084   = 7,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_SMPTE240M	videodev2.h	/^	V4L2_XFER_FUNC_SMPTE240M   = 4,$/;"	e	enum:v4l2_xfer_func
V4L2_XFER_FUNC_SRGB	videodev2.h	/^	V4L2_XFER_FUNC_SRGB        = 2,$/;"	e	enum:v4l2_xfer_func
V4L2_YCBCR_ENC_601	videodev2.h	/^	V4L2_YCBCR_ENC_601            = 1,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_709	videodev2.h	/^	V4L2_YCBCR_ENC_709            = 2,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_BT2020	videodev2.h	/^	V4L2_YCBCR_ENC_BT2020         = 6,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_BT2020_CONST_LUM	videodev2.h	/^	V4L2_YCBCR_ENC_BT2020_CONST_LUM = 7,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_DEFAULT	videodev2.h	/^	V4L2_YCBCR_ENC_DEFAULT        = 0,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_SMPTE240M	videodev2.h	/^	V4L2_YCBCR_ENC_SMPTE240M      = 8,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_SYCC	videodev2.h	/^	V4L2_YCBCR_ENC_SYCC           = 5,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_XV601	videodev2.h	/^	V4L2_YCBCR_ENC_XV601          = 3,$/;"	e	enum:v4l2_ycbcr_encoding
V4L2_YCBCR_ENC_XV709	videodev2.h	/^	V4L2_YCBCR_ENC_XV709          = 4,$/;"	e	enum:v4l2_ycbcr_encoding
VB2_BUF_STATE_ACTIVE	videobuf2-core.h	/^	VB2_BUF_STATE_ACTIVE,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_DEQUEUED	videobuf2-core.h	/^	VB2_BUF_STATE_DEQUEUED,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_DONE	videobuf2-core.h	/^	VB2_BUF_STATE_DONE,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_ERROR	videobuf2-core.h	/^	VB2_BUF_STATE_ERROR,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_PREPARED	videobuf2-core.h	/^	VB2_BUF_STATE_PREPARED,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_PREPARING	videobuf2-core.h	/^	VB2_BUF_STATE_PREPARING,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_QUEUED	videobuf2-core.h	/^	VB2_BUF_STATE_QUEUED,$/;"	e	enum:vb2_buffer_state
VB2_BUF_STATE_REQUEUEING	videobuf2-core.h	/^	VB2_BUF_STATE_REQUEUEING,$/;"	e	enum:vb2_buffer_state
VB2_DMABUF	videobuf2-core.h	/^	VB2_DMABUF	= BIT(4),$/;"	e	enum:vb2_io_modes
VB2_MAX_FRAME	videobuf2-core.h	21;"	d
VB2_MAX_PLANES	videobuf2-core.h	22;"	d
VB2_MEMORY_DMABUF	videobuf2-core.h	/^	VB2_MEMORY_DMABUF	= 4,$/;"	e	enum:vb2_memory
VB2_MEMORY_MMAP	videobuf2-core.h	/^	VB2_MEMORY_MMAP		= 1,$/;"	e	enum:vb2_memory
VB2_MEMORY_UNKNOWN	videobuf2-core.h	/^	VB2_MEMORY_UNKNOWN	= 0,$/;"	e	enum:vb2_memory
VB2_MEMORY_USERPTR	videobuf2-core.h	/^	VB2_MEMORY_USERPTR	= 2,$/;"	e	enum:vb2_memory
VB2_MMAP	videobuf2-core.h	/^	VB2_MMAP	= BIT(0),$/;"	e	enum:vb2_io_modes
VB2_READ	videobuf2-core.h	/^	VB2_READ	= BIT(2),$/;"	e	enum:vb2_io_modes
VB2_USERPTR	videobuf2-core.h	/^	VB2_USERPTR	= BIT(1),$/;"	e	enum:vb2_io_modes
VB2_WRITE	videobuf2-core.h	/^	VB2_WRITE	= BIT(3),$/;"	e	enum:vb2_io_modes
VERIFY_OCTAL_PERMISSIONS	kernel.h	1025;"	d
VFL_DIR_M2M	v4l2-dev.h	/^	VFL_DIR_M2M,$/;"	e	enum:vfl_devnode_direction
VFL_DIR_RX	v4l2-dev.h	/^	VFL_DIR_RX,$/;"	e	enum:vfl_devnode_direction
VFL_DIR_TX	v4l2-dev.h	/^	VFL_DIR_TX,$/;"	e	enum:vfl_devnode_direction
VFL_TYPE_GRABBER	v4l2-dev.h	/^	VFL_TYPE_GRABBER	= 0,$/;"	e	enum:vfl_devnode_type
VFL_TYPE_MAX	v4l2-dev.h	/^	VFL_TYPE_MAX \/* Shall be the last one *\/$/;"	e	enum:vfl_devnode_type
VFL_TYPE_RADIO	v4l2-dev.h	/^	VFL_TYPE_RADIO,$/;"	e	enum:vfl_devnode_type
VFL_TYPE_SDR	v4l2-dev.h	/^	VFL_TYPE_SDR,$/;"	e	enum:vfl_devnode_type
VFL_TYPE_SUBDEV	v4l2-dev.h	/^	VFL_TYPE_SUBDEV,$/;"	e	enum:vfl_devnode_type
VFL_TYPE_TOUCH	v4l2-dev.h	/^	VFL_TYPE_TOUCH,$/;"	e	enum:vfl_devnode_type
VFL_TYPE_VBI	v4l2-dev.h	/^	VFL_TYPE_VBI,$/;"	e	enum:vfl_devnode_type
VGA_HEIGHT	v4l2-image-sizes.h	35;"	d
VGA_WIDTH	v4l2-image-sizes.h	34;"	d
VIDEOBUF_ACTIVE	videobuf-core.h	/^	VIDEOBUF_ACTIVE     = 3,$/;"	e	enum:videobuf_state
VIDEOBUF_DONE	videobuf-core.h	/^	VIDEOBUF_DONE       = 4,$/;"	e	enum:videobuf_state
VIDEOBUF_ERROR	videobuf-core.h	/^	VIDEOBUF_ERROR      = 5,$/;"	e	enum:videobuf_state
VIDEOBUF_IDLE	videobuf-core.h	/^	VIDEOBUF_IDLE       = 6,$/;"	e	enum:videobuf_state
VIDEOBUF_NEEDS_INIT	videobuf-core.h	/^	VIDEOBUF_NEEDS_INIT = 0,$/;"	e	enum:videobuf_state
VIDEOBUF_PREPARED	videobuf-core.h	/^	VIDEOBUF_PREPARED   = 1,$/;"	e	enum:videobuf_state
VIDEOBUF_QUEUED	videobuf-core.h	/^	VIDEOBUF_QUEUED     = 2,$/;"	e	enum:videobuf_state
VIDEO_MAJOR	v4l2-dev.c	/^MODULE_ALIAS_CHARDEV_MAJOR(VIDEO_MAJOR);$/;"	v
VIDEO_MAJOR	v4l2-dev.h	22;"	d
VIDEO_MAX_FRAME	videodev2.h	73;"	d
VIDEO_MAX_PLANES	videodev2.h	74;"	d
VIDEO_NAME	v4l2-dev.c	37;"	d	file:
VIDEO_NUM_DEVICES	v4l2-dev.c	36;"	d	file:
VIDIOC_CREATE_BUFS	videodev2.h	2422;"	d
VIDIOC_CREATE_BUFS32	v4l2-compat-ioctl32.c	1114;"	d	file:
VIDIOC_CROPCAP	videodev2.h	2386;"	d
VIDIOC_DBG_G_CHIP_INFO	videodev2.h	2437;"	d
VIDIOC_DBG_G_REGISTER	videodev2.h	2414;"	d
VIDIOC_DBG_S_REGISTER	videodev2.h	2413;"	d
VIDIOC_DECODER_CMD	videodev2.h	2426;"	d
VIDIOC_DQBUF	videodev2.h	2356;"	d
VIDIOC_DQBUF32	v4l2-compat-ioctl32.c	1104;"	d	file:
VIDIOC_DQEVENT	videodev2.h	2419;"	d
VIDIOC_DQEVENT32	v4l2-compat-ioctl32.c	1113;"	d	file:
VIDIOC_DV_TIMINGS_CAP	videodev2.h	2430;"	d
VIDIOC_ENCODER_CMD	videodev2.h	2405;"	d
VIDIOC_ENUMAUDIO	videodev2.h	2393;"	d
VIDIOC_ENUMAUDOUT	videodev2.h	2394;"	d
VIDIOC_ENUMINPUT	videodev2.h	2364;"	d
VIDIOC_ENUMINPUT32	v4l2-compat-ioctl32.c	1106;"	d	file:
VIDIOC_ENUMOUTPUT	videodev2.h	2379;"	d
VIDIOC_ENUMSTD	videodev2.h	2363;"	d
VIDIOC_ENUMSTD32	v4l2-compat-ioctl32.c	1105;"	d	file:
VIDIOC_ENUM_DV_TIMINGS	videodev2.h	2428;"	d
VIDIOC_ENUM_FMT	videodev2.h	2346;"	d
VIDIOC_ENUM_FRAMEINTERVALS	videodev2.h	2403;"	d
VIDIOC_ENUM_FRAMESIZES	videodev2.h	2402;"	d
VIDIOC_ENUM_FREQ_BANDS	videodev2.h	2431;"	d
VIDIOC_EXPBUF	videodev2.h	2355;"	d
VIDIOC_G_AUDIO	videodev2.h	2369;"	d
VIDIOC_G_AUDOUT	videodev2.h	2380;"	d
VIDIOC_G_CROP	videodev2.h	2387;"	d
VIDIOC_G_CTRL	videodev2.h	2365;"	d
VIDIOC_G_DV_TIMINGS	videodev2.h	2418;"	d
VIDIOC_G_EDID	videodev2.h	2375;"	d
VIDIOC_G_EDID32	v4l2-compat-ioctl32.c	1107;"	d	file:
VIDIOC_G_ENC_INDEX	videodev2.h	2404;"	d
VIDIOC_G_EXT_CTRLS	videodev2.h	2399;"	d
VIDIOC_G_EXT_CTRLS32	v4l2-compat-ioctl32.c	1110;"	d	file:
VIDIOC_G_FBUF	videodev2.h	2351;"	d
VIDIOC_G_FBUF32	v4l2-compat-ioctl32.c	1101;"	d	file:
VIDIOC_G_FMT	videodev2.h	2347;"	d
VIDIOC_G_FMT32	v4l2-compat-ioctl32.c	1098;"	d	file:
VIDIOC_G_FREQUENCY	videodev2.h	2384;"	d
VIDIOC_G_INPUT	videodev2.h	2373;"	d
VIDIOC_G_INPUT32	v4l2-compat-ioctl32.c	1120;"	d	file:
VIDIOC_G_JPEGCOMP	videodev2.h	2389;"	d
VIDIOC_G_MODULATOR	videodev2.h	2382;"	d
VIDIOC_G_OUTPUT	videodev2.h	2377;"	d
VIDIOC_G_OUTPUT32	v4l2-compat-ioctl32.c	1122;"	d	file:
VIDIOC_G_PARM	videodev2.h	2359;"	d
VIDIOC_G_PRIORITY	videodev2.h	2395;"	d
VIDIOC_G_SELECTION	videodev2.h	2424;"	d
VIDIOC_G_SLICED_VBI_CAP	videodev2.h	2397;"	d
VIDIOC_G_STD	videodev2.h	2361;"	d
VIDIOC_G_TUNER	videodev2.h	2367;"	d
VIDIOC_INT_RESET	v4l2-common.h	269;"	d
VIDIOC_LOG_STATUS	videodev2.h	2398;"	d
VIDIOC_OVERLAY	videodev2.h	2353;"	d
VIDIOC_OVERLAY32	v4l2-compat-ioctl32.c	1117;"	d	file:
VIDIOC_PREPARE_BUF	videodev2.h	2423;"	d
VIDIOC_PREPARE_BUF32	v4l2-compat-ioctl32.c	1115;"	d	file:
VIDIOC_QBUF	videodev2.h	2354;"	d
VIDIOC_QBUF32	v4l2-compat-ioctl32.c	1103;"	d	file:
VIDIOC_QUERYBUF	videodev2.h	2350;"	d
VIDIOC_QUERYBUF32	v4l2-compat-ioctl32.c	1100;"	d	file:
VIDIOC_QUERYCAP	videodev2.h	2345;"	d
VIDIOC_QUERYCTRL	videodev2.h	2371;"	d
VIDIOC_QUERYMENU	videodev2.h	2372;"	d
VIDIOC_QUERYSTD	videodev2.h	2391;"	d
VIDIOC_QUERY_DV_TIMINGS	videodev2.h	2429;"	d
VIDIOC_QUERY_EXT_CTRL	videodev2.h	2439;"	d
VIDIOC_REQBUFS	videodev2.h	2349;"	d
VIDIOC_STREAMOFF	videodev2.h	2358;"	d
VIDIOC_STREAMOFF32	v4l2-compat-ioctl32.c	1119;"	d	file:
VIDIOC_STREAMON	videodev2.h	2357;"	d
VIDIOC_STREAMON32	v4l2-compat-ioctl32.c	1118;"	d	file:
VIDIOC_SUBSCRIBE_EVENT	videodev2.h	2420;"	d
VIDIOC_S_AUDIO	videodev2.h	2370;"	d
VIDIOC_S_AUDOUT	videodev2.h	2381;"	d
VIDIOC_S_CROP	videodev2.h	2388;"	d
VIDIOC_S_CTRL	videodev2.h	2366;"	d
VIDIOC_S_DV_TIMINGS	videodev2.h	2417;"	d
VIDIOC_S_EDID	videodev2.h	2376;"	d
VIDIOC_S_EDID32	v4l2-compat-ioctl32.c	1108;"	d	file:
VIDIOC_S_EXT_CTRLS	videodev2.h	2400;"	d
VIDIOC_S_EXT_CTRLS32	v4l2-compat-ioctl32.c	1111;"	d	file:
VIDIOC_S_FBUF	videodev2.h	2352;"	d
VIDIOC_S_FBUF32	v4l2-compat-ioctl32.c	1102;"	d	file:
VIDIOC_S_FMT	videodev2.h	2348;"	d
VIDIOC_S_FMT32	v4l2-compat-ioctl32.c	1099;"	d	file:
VIDIOC_S_FREQUENCY	videodev2.h	2385;"	d
VIDIOC_S_HW_FREQ_SEEK	videodev2.h	2416;"	d
VIDIOC_S_INPUT	videodev2.h	2374;"	d
VIDIOC_S_INPUT32	v4l2-compat-ioctl32.c	1121;"	d	file:
VIDIOC_S_JPEGCOMP	videodev2.h	2390;"	d
VIDIOC_S_MODULATOR	videodev2.h	2383;"	d
VIDIOC_S_OUTPUT	videodev2.h	2378;"	d
VIDIOC_S_OUTPUT32	v4l2-compat-ioctl32.c	1123;"	d	file:
VIDIOC_S_PARM	videodev2.h	2360;"	d
VIDIOC_S_PRIORITY	videodev2.h	2396;"	d
VIDIOC_S_SELECTION	videodev2.h	2425;"	d
VIDIOC_S_STD	videodev2.h	2362;"	d
VIDIOC_S_TUNER	videodev2.h	2368;"	d
VIDIOC_TRY_DECODER_CMD	videodev2.h	2427;"	d
VIDIOC_TRY_ENCODER_CMD	videodev2.h	2406;"	d
VIDIOC_TRY_EXT_CTRLS	videodev2.h	2401;"	d
VIDIOC_TRY_EXT_CTRLS32	v4l2-compat-ioctl32.c	1112;"	d	file:
VIDIOC_TRY_FMT	videodev2.h	2392;"	d
VIDIOC_TRY_FMT32	v4l2-compat-ioctl32.c	1109;"	d	file:
VIDIOC_UNSUBSCRIBE_EVENT	videodev2.h	2421;"	d
VIRTIO_DEV_ANY_ID	mod_devicetable.h	412;"	d
VSP1_DU_CRC_NONE	vsp1.h	/^	VSP1_DU_CRC_NONE,$/;"	e	enum:vsp1_du_crc_source
VSP1_DU_CRC_OUTPUT	vsp1.h	/^	VSP1_DU_CRC_OUTPUT,$/;"	e	enum:vsp1_du_crc_source
VSP1_DU_CRC_PLANE	vsp1.h	/^	VSP1_DU_CRC_PLANE,$/;"	e	enum:vsp1_du_crc_source
WILL_BE_GPL_ONLY	module.h	/^		WILL_BE_GPL_ONLY,$/;"	e	enum:symsearch::__anon27
WRITE	kernel.h	66;"	d
X86_FAMILY_ANY	mod_devicetable.h	638;"	d
X86_FEATURE_ANY	mod_devicetable.h	640;"	d
X86_FEATURE_MATCH	mod_devicetable.h	634;"	d
X86_MODEL_ANY	mod_devicetable.h	639;"	d
X86_VENDOR_ANY	mod_devicetable.h	637;"	d
XGA_HEIGHT	v4l2-image-sizes.h	41;"	d
XGA_WIDTH	v4l2-image-sizes.h	40;"	d
ZORRO_DEVICE_MODALIAS_FMT	mod_devicetable.h	585;"	d
ZORRO_WILDCARD	mod_devicetable.h	583;"	d
_ASM_GENERIC_DEVICE_H	device1.h	7;"	d
_CLASS_ATTR_STRING	device.h	510;"	d
_DEFAULT_SOURCE	ffs-test.c	25;"	d	file:
_DEVICE_H_	device.h	13;"	d
_DMXDEV_H_	dmxdev.h	20;"	d
_DVBDEV_H_	dvbdev.h	20;"	d
_DVB_CA_EN50221_H_	dvb_ca_en50221.h	18;"	d
_DVB_DEMUX_H_	dvb_demux.h	20;"	d
_DVB_FRONTEND_H_	dvb_frontend.h	33;"	d
_DVB_NET_H_	dvb_net.h	19;"	d
_DVB_RINGBUFFER_H_	dvb_ringbuffer.h	24;"	d
_DVB_USB_IDS_H_	dvb-usb-ids.h	11;"	d
_DVB_VB2_H	dvb_vb2.h	16;"	d
_ElfW	relocs.c	5;"	d	file:
_GPIO_KEYS_H	gpio_keys.h	3;"	d
_IMAGE_SIZES_H	v4l2-image-sizes.h	11;"	d
_LINUX_BYTEORDER_BIG_ENDIAN_H	big_endian.h	3;"	d
_LINUX_BYTEORDER_GENERIC_H	generic.h	3;"	d
_LINUX_BYTEORDER_LITTLE_ENDIAN_H	little_endian.h	3;"	d
_LINUX_DELAY_H	delay.h	3;"	d
_LINUX_FWNODE_H_	fwnode.h	13;"	d
_LINUX_I2C_ALGO_BIT_H	i2c-algo-bit.h	26;"	d
_LINUX_I2C_ALGO_PCA_H	i2c-algo-pca.h	3;"	d
_LINUX_I2C_ALGO_PCF_H	i2c-algo-pcf.h	27;"	d
_LINUX_I2C_ALGO_PXA_H	i2c-pxa.h	3;"	d
_LINUX_I2C_DEV_H	i2c-dev.h	23;"	d
_LINUX_I2C_H	i2c.h	27;"	d
_LINUX_I2C_MUX_H	i2c-mux.h	26;"	d
_LINUX_I2C_SMBUS_H	i2c-smbus.h	23;"	d
_LINUX_KERNEL_H	kernel.h	3;"	d
_LINUX_MODULE_H	module.h	2;"	d
_LINUX_PM_H	pm.h	22;"	d
_LINUX_PM_RUNTIME_H	pm_runtime.h	10;"	d
_LINUX_PROPERTY_H_	property.h	14;"	d
_LINUX_UNALIGNED_ACCESS_OK_H	access_ok.h	3;"	d
_LINUX_UNALIGNED_BE_BYTESHIFT_H	be_byteshift.h	3;"	d
_LINUX_UNALIGNED_BE_MEMMOVE_H	be_memmove.h	3;"	d
_LINUX_UNALIGNED_BE_STRUCT_H	be_struct.h	3;"	d
_LINUX_UNALIGNED_LE_BYTESHIFT_H	le_byteshift.h	3;"	d
_LINUX_UNALIGNED_LE_MEMMOVE_H	le_memmove.h	3;"	d
_LINUX_UNALIGNED_LE_STRUCT_H	le_struct.h	3;"	d
_LINUX_UNALIGNED_MEMMOVE_H	memmove.h	3;"	d
_LINUX_UNALIGNED_PACKED_STRUCT_H	packed_struct.h	2;"	d
_MEDIA_CEC_H	cec.h	9;"	d
_MEDIA_DEVICE_H	media-device.h	20;"	d
_MEDIA_DEVNODE_H	media-devnode.h	25;"	d
_MEDIA_ENTITY_H	media-entity.h	20;"	d
_MEDIA_V4L2_MEM2MEM_H	v4l2-mem2mem.h	18;"	d
_MEDIA_VIDEOBUF2_CORE_H	videobuf2-core.h	13;"	d
_MEDIA_VIDEOBUF2_DMA_CONTIG_H	videobuf2-dma-contig.h	14;"	d
_MEDIA_VIDEOBUF2_DMA_SG_H	videobuf2-dma-sg.h	14;"	d
_MEDIA_VIDEOBUF2_MEMOPS_H	videobuf2-memops.h	15;"	d
_MEDIA_VIDEOBUF2_V4L2_H	videobuf2-v4l2.h	13;"	d
_MEDIA_VIDEOBUF2_VMALLOC_H	videobuf2-vmalloc.h	14;"	d
_RC_CORE	rc-core.h	17;"	d
_RET_IP_	kernel.h	204;"	d
_SYSFS_H_	sysfs1.h	14;"	d
_THIS_IP_	kernel.h	205;"	d
_TUNER_H	tuner.h	19;"	d
_UAPI__LINUX_VIDEODEV2_H	videodev2.h	58;"	d
_V4L2_CTRLS_H	v4l2-ctrls.h	18;"	d
_V4L2_DEVICE_H	v4l2-device.h	22;"	d
_V4L2_DEV_H	v4l2-dev.h	11;"	d
_V4L2_FLASH_H	v4l2-flash-led-class.h	13;"	d
_V4L2_FWNODE_H	v4l2-fwnode.h	18;"	d
_V4L2_IOCTL_H	v4l2-ioctl.h	11;"	d
_V4L2_MC_H	v4l2-mc.h	20;"	d
_V4L2_RECT_H_	v4l2-rect.h	9;"	d
_V4L2_SUBDEV_H	v4l2-subdev.h	18;"	d
_VIDEOBUF2_DVB_H_	videobuf2-dvb.h	3;"	d
_VIDEOBUF_CORE_H	videobuf-core.h	17;"	d
_VIDEOBUF_DMA_CONTIG_H	videobuf-dma-contig.h	14;"	d
_VIDEOBUF_DMA_SG_H	videobuf-dma-sg.h	21;"	d
_VIDEOBUF_VMALLOC_H	videobuf-vmalloc.h	16;"	d
__ALIGN_MASK	kernel.h	60;"	d
__ASM_GENERIC_UNALIGNED_H	unaligned.h	3;"	d
__ATTR	sysfs1.h	101;"	d
__ATTRIBUTE_GROUPS	sysfs1.h	146;"	d
__ATTR_IGNORE_LOCKDEP	sysfs1.h	136;"	d
__ATTR_IGNORE_LOCKDEP	sysfs1.h	143;"	d
__ATTR_NULL	sysfs1.h	133;"	d
__ATTR_PREALLOC	sysfs1.h	108;"	d
__ATTR_RO	sysfs1.h	115;"	d
__ATTR_RO_MODE	sysfs1.h	120;"	d
__ATTR_RW	sysfs1.h	131;"	d
__ATTR_WO	sysfs1.h	126;"	d
__BIN_ATTR	sysfs1.h	186;"	d
__BIN_ATTR_NULL	sysfs1.h	202;"	d
__BIN_ATTR_RO	sysfs1.h	193;"	d
__BIN_ATTR_RW	sysfs1.h	199;"	d
__CLKDEV_H	clkdev.h	13;"	d
__CONCAT	kernel.h	986;"	d
__COUNT_ARGS	kernel.h	983;"	d
__DEMUX_H	demux.h	27;"	d
__DVB_MATH_H	dvb_math.h	19;"	d
__ElfW	relocs.c	6;"	d	file:
__GPIO_ASPEED_H	aspeed.h	2;"	d
__INITDATA_OR_MODULE	module.h	150;"	d
__INITDATA_OR_MODULE	module.h	157;"	d
__INITRODATA_OR_MODULE	module.h	151;"	d
__INITRODATA_OR_MODULE	module.h	158;"	d
__INIT_OR_MODULE	module.h	149;"	d
__INIT_OR_MODULE	module.h	156;"	d
__LINUX_CLK_H	clk.h	13;"	d
__LINUX_CLK_PROVIDER_H	clk-provider.h	12;"	d
__LINUX_GPIO_CONSUMER_H	consumer.h	3;"	d
__LINUX_GPIO_DRIVER_H	driver.h	3;"	d
__LINUX_GPIO_H	gpio.h	13;"	d
__LINUX_GPIO_MACHINE_H	machine.h	3;"	d
__LINUX_MEDIA_BUS_FORMAT_H	media-bus-format.h	13;"	d
__LINUX_MEDIA_H	media.h	21;"	d
__LINUX_REGULATOR_CONSUMER_H_	consumer1.h	36;"	d
__MEDIA_IMX_H__	imx.h	11;"	d
__MEDIA_RCAR_FCP_H__	rcar-fcp.h	14;"	d
__MEDIA_VSP1_H__	vsp1.h	14;"	d
__MODULE_STRING	module.h	792;"	d
__SYSFS_INTERNAL_H	sysfs.h	11;"	d
__TUNER_TYPES_H__	tuner-types.h	7;"	d
__V4L2_DV_TIMINGS_H	v4l2-dv-timings.h	9;"	d
____trace_printk_check_format	kernel.h	/^void ____trace_printk_check_format(const char *fmt, ...)$/;"	f
___htonl	generic.h	134;"	d
___htons	generic.h	135;"	d
___might_sleep	kernel.h	/^  static inline void ___might_sleep(const char *file, int line,$/;"	f
___ntohl	generic.h	136;"	d
___ntohs	generic.h	137;"	d
__abs_choose_expr	kernel.h	293;"	d
__bufsize_v4l2_format	v4l2-compat-ioctl32.c	/^static int __bufsize_v4l2_format(struct v4l2_format32 __user *p32, u32 *size)$/;"	f	file:
__careful_cmp	kernel.h	869;"	d
__clk_hw_set_clk	clk-provider.h	/^static inline void __clk_hw_set_clk(struct clk_hw *dst, struct clk_hw *src)$/;"	f
__cmp	kernel.h	862;"	d
__cmp_once	kernel.h	864;"	d
__cold	kernel.h	/^void panic(const char *fmt, ...) __noreturn __cold;$/;"	v
__compat_only_sysfs_link_entry_to_kobj	group.c	/^EXPORT_SYMBOL_GPL(__compat_only_sysfs_link_entry_to_kobj);$/;"	v
__compat_only_sysfs_link_entry_to_kobj	group.c	/^int __compat_only_sysfs_link_entry_to_kobj(struct kobject *kobj,$/;"	f
__compat_only_sysfs_link_entry_to_kobj	sysfs1.h	/^static inline int __compat_only_sysfs_link_entry_to_kobj($/;"	f
__dev_printk	device.h	/^static inline void __dev_printk(const char *level, const struct device *dev,$/;"	f
__devm_alloc_percpu	devres.c	/^EXPORT_SYMBOL_GPL(__devm_alloc_percpu);$/;"	v
__devm_alloc_percpu	devres.c	/^void __percpu *__devm_alloc_percpu(struct device *dev, size_t size,$/;"	f
__devres_alloc_node	devres.c	/^EXPORT_SYMBOL_GPL(__devres_alloc_node);$/;"	v
__devres_alloc_node	devres.c	/^void * __devres_alloc_node(dr_release_t release, size_t size, gfp_t gfp, int nid,$/;"	f
__fill_ctrl_init_data	v4l2-flash-led-class.c	/^static void __fill_ctrl_init_data(struct v4l2_flash *v4l2_flash,$/;"	f	file:
__get_unaligned_be16	be_byteshift.h	/^static inline u16 __get_unaligned_be16(const u8 *p)$/;"	f
__get_unaligned_be32	be_byteshift.h	/^static inline u32 __get_unaligned_be32(const u8 *p)$/;"	f
__get_unaligned_be64	be_byteshift.h	/^static inline u64 __get_unaligned_be64(const u8 *p)$/;"	f
__get_unaligned_cpu16	packed_struct.h	/^static inline u16 __get_unaligned_cpu16(const void *p)$/;"	f
__get_unaligned_cpu32	packed_struct.h	/^static inline u32 __get_unaligned_cpu32(const void *p)$/;"	f
__get_unaligned_cpu64	packed_struct.h	/^static inline u64 __get_unaligned_cpu64(const void *p)$/;"	f
__get_unaligned_le16	le_byteshift.h	/^static inline u16 __get_unaligned_le16(const u8 *p)$/;"	f
__get_unaligned_le32	le_byteshift.h	/^static inline u32 __get_unaligned_le32(const u8 *p)$/;"	f
__get_unaligned_le64	le_byteshift.h	/^static inline u64 __get_unaligned_le64(const u8 *p)$/;"	f
__get_unaligned_memmove16	memmove.h	/^static inline u16 __get_unaligned_memmove16(const void *p)$/;"	f
__get_unaligned_memmove32	memmove.h	/^static inline u32 __get_unaligned_memmove32(const void *p)$/;"	f
__get_unaligned_memmove64	memmove.h	/^static inline u64 __get_unaligned_memmove64(const void *p)$/;"	f
__get_v4l2_format32	v4l2-compat-ioctl32.c	/^static int __get_v4l2_format32(struct v4l2_format __user *p64,$/;"	f	file:
__i2c_add_numbered_adapter	i2c-core-base.c	/^static int __i2c_add_numbered_adapter(struct i2c_adapter *adap)$/;"	f	file:
__i2c_board_list	i2c-boardinfo.c	/^EXPORT_SYMBOL_GPL(__i2c_board_list);$/;"	v
__i2c_board_list	i2c-boardinfo.c	/^LIST_HEAD(__i2c_board_list);$/;"	v
__i2c_board_lock	i2c-boardinfo.c	/^DECLARE_RWSEM(__i2c_board_lock);$/;"	v
__i2c_board_lock	i2c-boardinfo.c	/^EXPORT_SYMBOL_GPL(__i2c_board_lock);$/;"	v
__i2c_check_addr_busy	i2c-core-base.c	/^static int __i2c_check_addr_busy(struct device *dev, void *addrp)$/;"	f	file:
__i2c_first_dynamic_bus_num	i2c-boardinfo.c	/^EXPORT_SYMBOL_GPL(__i2c_first_dynamic_bus_num);$/;"	v
__i2c_first_dynamic_bus_num	i2c-boardinfo.c	/^int __i2c_first_dynamic_bus_num;$/;"	v
__i2c_mux_master_xfer	i2c-mux.c	/^static int __i2c_mux_master_xfer(struct i2c_adapter *adap,$/;"	f	file:
__i2c_mux_smbus_xfer	i2c-mux.c	/^static int __i2c_mux_smbus_xfer(struct i2c_adapter *adap,$/;"	f	file:
__i2c_smbus_xfer	i2c-core-smbus.c	/^EXPORT_SYMBOL(__i2c_smbus_xfer);$/;"	v
__i2c_smbus_xfer	i2c-core-smbus.c	/^s32 __i2c_smbus_xfer(struct i2c_adapter *adapter, u16 addr,$/;"	f
__i2c_transfer	i2c-core-base.c	/^EXPORT_SYMBOL(__i2c_transfer);$/;"	v
__i2c_transfer	i2c-core-base.c	/^int __i2c_transfer(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)$/;"	f
__imx219_get_pad_format	imx219.c	/^static int __imx219_get_pad_format(struct imx219 *imx219,$/;"	f	file:
__imx258_get_pad_format	imx258.c	/^static int __imx258_get_pad_format(struct imx258 *imx258,$/;"	f	file:
__init_or_module	module.h	146;"	d
__init_or_module	module.h	153;"	d
__initconst_or_module	module.h	148;"	d
__initconst_or_module	module.h	155;"	d
__initdata_or_module	module.h	147;"	d
__initdata_or_module	module.h	154;"	d
__intensity_to_led_brightness	v4l2-flash-led-class.c	/^static enum led_brightness __intensity_to_led_brightness($/;"	f	file:
__is_constexpr	kernel.h	853;"	d
__is_module_percpu_address	module.h	/^static inline bool __is_module_percpu_address(unsigned long addr, unsigned long *can_addr)$/;"	f
__led_brightness_to_intensity	v4l2-flash-led-class.c	/^static s32 __led_brightness_to_intensity(struct v4l2_ctrl *ctrl,$/;"	f	file:
__lfs_to_v4l2_ctrl_config	v4l2-flash-led-class.c	/^static void __lfs_to_v4l2_ctrl_config(struct led_flash_setting *s,$/;"	f	file:
__media_device_usb_init	media-device.h	/^static inline void __media_device_usb_init(struct media_device *mdev,$/;"	f
__might_sleep	kernel.h	/^  static inline void __might_sleep(const char *file, int line,$/;"	f
__module_address	module.h	/^static inline struct module *__module_address(unsigned long addr)$/;"	f
__module_get	module.h	/^static inline void __module_get(struct module *module)$/;"	f
__module_layout_align	module.h	/^	struct module_layout core_layout __module_layout_align;$/;"	m	struct:module	typeref:struct:module::core_layout
__module_layout_align	module.h	310;"	d
__module_layout_align	module.h	312;"	d
__module_text_address	module.h	/^static inline struct module *__module_text_address(unsigned long addr)$/;"	f
__no_side_effects	kernel.h	856;"	d
__packed	i2c-core-acpi.c	/^} __packed;$/;"	v	typeref:struct:gsb_buffer
__packed	packed_struct.h	/^struct __una_u16 { u16 x; } __packed;$/;"	v	typeref:struct:__una_u16
__packed	packed_struct.h	/^struct __una_u32 { u32 x; } __packed;$/;"	v	typeref:struct:__una_u32
__packed	packed_struct.h	/^struct __una_u64 { u64 x; } __packed;$/;"	v	typeref:struct:__una_u64
__pad	mod_devicetable.h	/^	__u8	__pad;$/;"	m	struct:ssb_device_id
__pm_runtime_disable	pm_runtime.h	/^static inline void __pm_runtime_disable(struct device *dev, bool c) {}$/;"	f
__pm_runtime_idle	pm_runtime.h	/^static inline int __pm_runtime_idle(struct device *dev, int rpmflags)$/;"	f
__pm_runtime_resume	pm_runtime.h	/^static inline int __pm_runtime_resume(struct device *dev, int rpmflags)$/;"	f
__pm_runtime_set_status	pm_runtime.h	/^static inline int __pm_runtime_set_status(struct device *dev,$/;"	f
__pm_runtime_suspend	pm_runtime.h	/^static inline int __pm_runtime_suspend(struct device *dev, int rpmflags)$/;"	f
__pm_runtime_use_autosuspend	pm_runtime.h	/^static inline void __pm_runtime_use_autosuspend(struct device *dev,$/;"	f
__process_new_adapter	i2c-core-base.c	/^static int __process_new_adapter(struct device_driver *d, void *data)$/;"	f	file:
__process_new_driver	i2c-core-base.c	/^static int __process_new_driver(struct device *dev, void *data)$/;"	f	file:
__process_removed_adapter	i2c-core-base.c	/^static int __process_removed_adapter(struct device_driver *d, void *data)$/;"	f	file:
__process_removed_driver	i2c-core-base.c	/^static int __process_removed_driver(struct device *dev, void *data)$/;"	f	file:
__put_unaligned_be16	be_byteshift.h	/^static inline void __put_unaligned_be16(u16 val, u8 *p)$/;"	f
__put_unaligned_be32	be_byteshift.h	/^static inline void __put_unaligned_be32(u32 val, u8 *p)$/;"	f
__put_unaligned_be64	be_byteshift.h	/^static inline void __put_unaligned_be64(u64 val, u8 *p)$/;"	f
__put_unaligned_cpu16	packed_struct.h	/^static inline void __put_unaligned_cpu16(u16 val, void *p)$/;"	f
__put_unaligned_cpu32	packed_struct.h	/^static inline void __put_unaligned_cpu32(u32 val, void *p)$/;"	f
__put_unaligned_cpu64	packed_struct.h	/^static inline void __put_unaligned_cpu64(u64 val, void *p)$/;"	f
__put_unaligned_le16	le_byteshift.h	/^static inline void __put_unaligned_le16(u16 val, u8 *p)$/;"	f
__put_unaligned_le32	le_byteshift.h	/^static inline void __put_unaligned_le32(u32 val, u8 *p)$/;"	f
__put_unaligned_le64	le_byteshift.h	/^static inline void __put_unaligned_le64(u64 val, u8 *p)$/;"	f
__put_unaligned_memmove16	memmove.h	/^static inline void __put_unaligned_memmove16(u16 val, void *p)$/;"	f
__put_unaligned_memmove32	memmove.h	/^static inline void __put_unaligned_memmove32(u32 val, void *p)$/;"	f
__put_unaligned_memmove64	memmove.h	/^static inline void __put_unaligned_memmove64(u64 val, void *p)$/;"	f
__put_v4l2_format32	v4l2-compat-ioctl32.c	/^static int __put_v4l2_format32(struct v4l2_format __user *p64,$/;"	f	file:
__randomize_layout	module.h	/^} ____cacheline_aligned __randomize_layout;$/;"	v	typeref:struct:module
__randomize_layout	module.h	/^} __randomize_layout;$/;"	v	typeref:struct:module_kobject
__round_mask	kernel.h	87;"	d
__safe_cmp	kernel.h	859;"	d
__software_strobe_mode_inactive	v4l2-flash-led-class.c	/^static bool __software_strobe_mode_inactive(struct v4l2_ctrl **ctrls)$/;"	f	file:
__sync_device_with_v4l2_controls	v4l2-flash-led-class.c	/^static int __sync_device_with_v4l2_controls(struct v4l2_flash *v4l2_flash)$/;"	f	file:
__trace_printk_check_format	kernel.h	680;"	d
__typecheck	kernel.h	845;"	d
__una_u16	packed_struct.h	/^struct __una_u16 { u16 x; } __packed;$/;"	s
__una_u32	packed_struct.h	/^struct __una_u32 { u32 x; } __packed;$/;"	s
__una_u64	packed_struct.h	/^struct __una_u64 { u64 x; } __packed;$/;"	s
__unregister_client	i2c-core-base.c	/^static int __unregister_client(struct device *dev, void *dummy)$/;"	f	file:
__unregister_dummy	i2c-core-base.c	/^static int __unregister_dummy(struct device *dev, void *dummy)$/;"	f	file:
__v4l2_async_notifier_fwnode_has_async_subdev	v4l2-async.c	/^static bool __v4l2_async_notifier_fwnode_has_async_subdev($/;"	f	file:
__v4l2_async_notifier_parse_fwnode_endpoints	v4l2-fwnode.c	/^static int __v4l2_async_notifier_parse_fwnode_endpoints($/;"	f	file:
__v4l2_async_notifier_register	v4l2-async.c	/^static int __v4l2_async_notifier_register(struct v4l2_async_notifier *notifier)$/;"	f	file:
__v4l2_async_notifier_unregister	v4l2-async.c	/^static void __v4l2_async_notifier_unregister($/;"	f	file:
__v4l2_clk_register_fixed	v4l2-clk.c	/^EXPORT_SYMBOL(__v4l2_clk_register_fixed);$/;"	v
__v4l2_clk_register_fixed	v4l2-clk.c	/^struct v4l2_clk *__v4l2_clk_register_fixed(const char *dev_id,$/;"	f
__v4l2_ctrl_handler_setup	v4l2-ctrls.c	/^EXPORT_SYMBOL_GPL(__v4l2_ctrl_handler_setup);$/;"	v
__v4l2_ctrl_handler_setup	v4l2-ctrls.c	/^int __v4l2_ctrl_handler_setup(struct v4l2_ctrl_handler *hdl)$/;"	f
__v4l2_ctrl_modify_range	v4l2-ctrls.c	/^EXPORT_SYMBOL(__v4l2_ctrl_modify_range);$/;"	v
__v4l2_ctrl_modify_range	v4l2-ctrls.c	/^int __v4l2_ctrl_modify_range(struct v4l2_ctrl *ctrl,$/;"	f
__v4l2_ctrl_s_ctrl	v4l2-ctrls.c	/^EXPORT_SYMBOL(__v4l2_ctrl_s_ctrl);$/;"	v
__v4l2_ctrl_s_ctrl	v4l2-ctrls.c	/^int __v4l2_ctrl_s_ctrl(struct v4l2_ctrl *ctrl, s32 val)$/;"	f
__v4l2_ctrl_s_ctrl_int64	v4l2-ctrls.c	/^EXPORT_SYMBOL(__v4l2_ctrl_s_ctrl_int64);$/;"	v
__v4l2_ctrl_s_ctrl_int64	v4l2-ctrls.c	/^int __v4l2_ctrl_s_ctrl_int64(struct v4l2_ctrl *ctrl, s64 val)$/;"	f
__v4l2_ctrl_s_ctrl_string	v4l2-ctrls.c	/^EXPORT_SYMBOL(__v4l2_ctrl_s_ctrl_string);$/;"	v
__v4l2_ctrl_s_ctrl_string	v4l2-ctrls.c	/^int __v4l2_ctrl_s_ctrl_string(struct v4l2_ctrl *ctrl, const char *s)$/;"	f
__v4l2_device_call_subdevs	v4l2-device.h	276;"	d
__v4l2_device_call_subdevs_p	v4l2-device.h	251;"	d
__v4l2_device_call_subdevs_until_err	v4l2-device.h	343;"	d
__v4l2_device_call_subdevs_until_err_p	v4l2-device.h	308;"	d
__v4l2_event_dequeue	v4l2-event.c	/^static int __v4l2_event_dequeue(struct v4l2_fh *fh, struct v4l2_event *event)$/;"	f	file:
__v4l2_event_queue_fh	v4l2-event.c	/^static void __v4l2_event_queue_fh(struct v4l2_fh *fh, const struct v4l2_event *ev,$/;"	f	file:
__v4l2_event_unsubscribe	v4l2-event.c	/^static void __v4l2_event_unsubscribe(struct v4l2_subscribed_event *sev)$/;"	f	file:
__v4l2_find_nearest_size	v4l2-common.c	/^EXPORT_SYMBOL_GPL(__v4l2_find_nearest_size);$/;"	v
__v4l2_find_nearest_size	v4l2-common.c	/^__v4l2_find_nearest_size(const void *array, size_t array_size,$/;"	f
__v4l2_flash_init	v4l2-flash-led-class.c	/^static struct v4l2_flash *__v4l2_flash_init($/;"	f	file:
__v4l2_m2m_try_queue	v4l2-mem2mem.c	/^static void __v4l2_m2m_try_queue(struct v4l2_m2m_dev *m2m_dev,$/;"	f	file:
__v4l2_qmenu_int_len	v4l2-ctrls.c	669;"	d	file:
__video_do_ioctl	v4l2-ioctl.c	/^static long __video_do_ioctl(struct file *file,$/;"	f	file:
__video_register_device	v4l2-dev.c	/^EXPORT_SYMBOL(__video_register_device);$/;"	v
__video_register_device	v4l2-dev.c	/^int __video_register_device(struct video_device *vdev,$/;"	f
__videobuf_alloc	videobuf-dma-contig.c	/^static struct videobuf_buffer *__videobuf_alloc(size_t size)$/;"	f	file:
__videobuf_alloc_vb	videobuf-dma-sg.c	/^static struct videobuf_buffer *__videobuf_alloc_vb(size_t size)$/;"	f	file:
__videobuf_alloc_vb	videobuf-vmalloc.c	/^static struct videobuf_buffer *__videobuf_alloc_vb(size_t size)$/;"	f	file:
__videobuf_copy_stream	videobuf-core.c	/^static int __videobuf_copy_stream(struct videobuf_queue *q,$/;"	f	file:
__videobuf_copy_to_user	videobuf-core.c	/^static int __videobuf_copy_to_user(struct videobuf_queue *q,$/;"	f	file:
__videobuf_dc_alloc	videobuf-dma-contig.c	/^static int __videobuf_dc_alloc(struct device *dev,$/;"	f	file:
__videobuf_dc_free	videobuf-dma-contig.c	/^static void __videobuf_dc_free(struct device *dev,$/;"	f	file:
__videobuf_free	videobuf-core.c	/^static int __videobuf_free(struct videobuf_queue *q)$/;"	f	file:
__videobuf_iolock	videobuf-dma-contig.c	/^static int __videobuf_iolock(struct videobuf_queue *q,$/;"	f	file:
__videobuf_iolock	videobuf-dma-sg.c	/^static int __videobuf_iolock(struct videobuf_queue *q,$/;"	f	file:
__videobuf_iolock	videobuf-vmalloc.c	/^static int __videobuf_iolock(struct videobuf_queue *q,$/;"	f	file:
__videobuf_mmap_mapper	videobuf-dma-contig.c	/^static int __videobuf_mmap_mapper(struct videobuf_queue *q,$/;"	f	file:
__videobuf_mmap_mapper	videobuf-dma-sg.c	/^static int __videobuf_mmap_mapper(struct videobuf_queue *q,$/;"	f	file:
__videobuf_mmap_mapper	videobuf-vmalloc.c	/^static int __videobuf_mmap_mapper(struct videobuf_queue *q,$/;"	f	file:
__videobuf_mmap_setup	videobuf-core.c	/^EXPORT_SYMBOL_GPL(__videobuf_mmap_setup);$/;"	v
__videobuf_mmap_setup	videobuf-core.c	/^int __videobuf_mmap_setup(struct videobuf_queue *q,$/;"	f
__videobuf_read_start	videobuf-core.c	/^static int __videobuf_read_start(struct videobuf_queue *q)$/;"	f	file:
__videobuf_read_stop	videobuf-core.c	/^static void __videobuf_read_stop(struct videobuf_queue *q)$/;"	f	file:
__videobuf_streamoff	videobuf-core.c	/^static int __videobuf_streamoff(struct videobuf_queue *q)$/;"	f	file:
__videobuf_sync	videobuf-dma-sg.c	/^static int __videobuf_sync(struct videobuf_queue *q,$/;"	f	file:
__videobuf_to_vaddr	videobuf-dma-contig.c	/^static void *__videobuf_to_vaddr(struct videobuf_buffer *buf)$/;"	f	file:
__videobuf_to_vaddr	videobuf-dma-sg.c	/^static void *__videobuf_to_vaddr(struct videobuf_buffer *buf)$/;"	f	file:
_dev_alert	device.h	/^void _dev_alert(const struct device *dev, const char *fmt, ...)$/;"	f
_dev_crit	device.h	/^void _dev_crit(const struct device *dev, const char *fmt, ...)$/;"	f
_dev_emerg	device.h	/^void _dev_emerg(const struct device *dev, const char *fmt, ...)$/;"	f
_dev_err	device.h	/^void _dev_err(const struct device *dev, const char *fmt, ...)$/;"	f
_dev_info	device.h	/^void _dev_info(const struct device *dev, const char *fmt, ...)$/;"	f
_dev_notice	device.h	/^void _dev_notice(const struct device *dev, const char *fmt, ...)$/;"	f
_dev_warn	device.h	/^void _dev_warn(const struct device *dev, const char *fmt, ...)$/;"	f
_lock	v4l2-ctrls.h	/^	struct mutex _lock;$/;"	m	struct:v4l2_ctrl_handler	typeref:struct:v4l2_ctrl_handler::mutex
_msg	ffs-test.c	/^static void _msg(unsigned level, const char *fmt, ...)$/;"	f	file:
abs	kernel.h	283;"	d
absbit	mod_devicetable.h	/^	kernel_ulong_t absbit[INPUT_DEVICE_ID_ABS_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
accounting_timestamp	pm.h	/^	unsigned long		accounting_timestamp;$/;"	m	struct:dev_pm_info
acpi_device_id	mod_devicetable.h	/^struct acpi_device_id {$/;"	s
acpi_gsb_i2c_read_bytes	i2c-core-acpi.c	/^static int acpi_gsb_i2c_read_bytes(struct i2c_client *client,$/;"	f	file:
acpi_gsb_i2c_write_bytes	i2c-core-acpi.c	/^static int acpi_gsb_i2c_write_bytes(struct i2c_client *client,$/;"	f	file:
acpi_match_table	device.h	/^	const struct acpi_device_id	*acpi_match_table;$/;"	m	struct:device_driver	typeref:struct:device_driver::acpi_device_id
action	devres.c	/^	void (*action)(void *);$/;"	m	struct:action_devres	file:
action_devres	devres.c	/^struct action_devres {$/;"	s	file:
activate	pm.h	/^	int (*activate)(struct device *dev);$/;"	m	struct:dev_pm_domain
active_fe_id	videobuf2-dvb.h	/^	int active_fe_id; \/* Indicates which frontend in the felist is in use *\/$/;"	m	struct:vb2_dvb_frontends
active_jiffies	pm.h	/^	unsigned long		active_jiffies;$/;"	m	struct:dev_pm_info
active_low	gpio_keys.h	/^	int active_low;$/;"	m	struct:gpio_keys_button
adap	cec.h	/^	struct cec_adapter	*adap;$/;"	m	struct:cec_fh	typeref:struct:cec_fh::cec_adapter
adap	cec.h	/^	struct cec_adapter *adap;$/;"	m	struct:cec_data	typeref:struct:cec_data::cec_adapter
adap	i2c-dev.c	/^	struct i2c_adapter *adap;$/;"	m	struct:i2c_dev	typeref:struct:i2c_dev::i2c_adapter	file:
adap	i2c-mux.c	/^	struct i2c_adapter adap;$/;"	m	struct:i2c_mux_priv	typeref:struct:i2c_mux_priv::i2c_adapter	file:
adap_enable	cec.h	/^	int (*adap_enable)(struct cec_adapter *adap, bool enable);$/;"	m	struct:cec_adap_ops
adap_free	cec.h	/^	void (*adap_free)(struct cec_adapter *adap);$/;"	m	struct:cec_adap_ops
adap_log_addr	cec.h	/^	int (*adap_log_addr)(struct cec_adapter *adap, u8 logical_addr);$/;"	m	struct:cec_adap_ops
adap_monitor_all_enable	cec.h	/^	int (*adap_monitor_all_enable)(struct cec_adapter *adap, bool enable);$/;"	m	struct:cec_adap_ops
adap_monitor_pin_enable	cec.h	/^	int (*adap_monitor_pin_enable)(struct cec_adapter *adap, bool enable);$/;"	m	struct:cec_adap_ops
adap_status	cec.h	/^	void (*adap_status)(struct cec_adapter *adap, struct seq_file *file);$/;"	m	struct:cec_adap_ops
adap_transmit	cec.h	/^	int (*adap_transmit)(struct cec_adapter *adap, u8 attempts,$/;"	m	struct:cec_adap_ops
adapter	dvbdev.h	/^	struct dvb_adapter *adapter;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::dvb_adapter
adapter	i2c-core-acpi.c	/^	struct i2c_adapter *adapter;$/;"	m	struct:i2c_acpi_handler_data	typeref:struct:i2c_acpi_handler_data::i2c_adapter	file:
adapter	i2c-mux.h	/^	struct i2c_adapter *adapter[0];$/;"	m	struct:i2c_mux_core	typeref:struct:i2c_mux_core::i2c_adapter
adapter	i2c.h	/^	struct i2c_adapter *adapter;	\/* the adapter we sit on	*\/$/;"	m	struct:i2c_client	typeref:struct:i2c_client::i2c_adapter
adapter	videobuf2-dvb.h	/^	struct dvb_adapter adapter;$/;"	m	struct:vb2_dvb_frontends	typeref:struct:vb2_dvb_frontends::dvb_adapter
adapter_handle	i2c-core-acpi.c	/^	acpi_handle adapter_handle;$/;"	m	struct:i2c_acpi_lookup	file:
adapter_id	v4l2-async.h	/^			int adapter_id;$/;"	m	struct:v4l2_async_subdev::__anon34::__anon35
add	soc_camera.h	/^	int (*add)(struct soc_camera_device *);$/;"	m	struct:soc_camera_host_ops
add	v4l2-event.h	/^	int  (*add)(struct v4l2_subscribed_event *sev, unsigned int elems);$/;"	m	struct:v4l2_subscribed_event_ops
add_bind_files	bus.c	/^static int __must_check add_bind_files(struct device_driver *drv)$/;"	f	file:
add_dev	device.h	/^	int (*add_dev)		(struct device *, struct class_interface *);$/;"	m	struct:class_interface
add_dev	device.h	/^	int (*add_dev)(struct device *dev, struct subsys_interface *sif);$/;"	m	struct:subsys_interface
add_device	soc_camera.h	/^	int (*add_device)(struct soc_camera_device *);$/;"	m	struct:soc_camera_host_desc
add_device	soc_camera.h	/^	int (*add_device)(struct soc_camera_device *);$/;"	m	struct:soc_camera_link
add_dr	devres.c	/^static void add_dr(struct device *dev, struct devres_node *node)$/;"	f	file:
add_frontend	demux.h	/^	int (*add_frontend)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
add_probe_files	bus.c	/^static int add_probe_files(struct bus_type *bus)$/;"	f	file:
add_reloc	relocs.c	/^static void add_reloc(struct relocs *r, uint32_t offset, unsigned type)$/;"	f	file:
addr	devres.c	/^	unsigned long addr;$/;"	m	struct:pages_devres	file:
addr	i2c-dev.c	/^	u16 addr;$/;"	m	struct:i2c_msg32	file:
addr	i2c-smbus.c	/^	unsigned short		addr;$/;"	m	struct:alert_data	file:
addr	i2c.h	/^	unsigned short	addr;$/;"	m	struct:i2c_board_info
addr	i2c.h	/^	unsigned short addr;		\/* chip address - NOTE: 7bit	*\/$/;"	m	struct:i2c_client
addr	tuner-core.c	/^static unsigned int addr;$/;"	v	file:
addr	tuner.h	/^	unsigned short	addr;$/;"	m	struct:tuner_setup
addr	videodev2.h	/^		__u32 addr;$/;"	m	union:v4l2_dbg_match::__anon71
address	imx219.c	/^	u16 address;$/;"	m	struct:imx219_reg	file:
address	imx258.c	/^	u16 address;$/;"	m	struct:imx258_reg	file:
address	v4l2-async.h	/^			unsigned short address;$/;"	m	struct:v4l2_async_subdev::__anon34::__anon35
address_list	i2c.h	/^	const unsigned short *address_list;$/;"	m	struct:i2c_driver
afc	videodev2.h	/^	__s32			afc;$/;"	m	struct:v4l2_tuner
alert	i2c-smbus.c	/^	struct work_struct	alert;$/;"	m	struct:i2c_smbus_alert	typeref:struct:i2c_smbus_alert::work_struct	file:
alert	i2c.h	/^	void (*alert)(struct i2c_client *, enum i2c_alert_protocol protocol,$/;"	m	struct:i2c_driver
alert_data	i2c-smbus.c	/^struct alert_data {$/;"	s	file:
algo	i2c-mux.c	/^	struct i2c_algorithm algo;$/;"	m	struct:i2c_mux_priv	typeref:struct:i2c_mux_priv::i2c_algorithm	file:
algo	i2c.h	/^	const struct i2c_algorithm *algo; \/* the algorithm to access the bus *\/$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::i2c_algorithm
algo_data	i2c.h	/^	void *algo_data;$/;"	m	struct:i2c_adapter
alloc	rc-map.h	/^	unsigned int		alloc;$/;"	m	struct:rc_map
alloc	videobuf2-core.h	/^	void		*(*alloc)(struct device *dev, unsigned long attrs,$/;"	m	struct:vb2_mem_ops
alloc_devs	videobuf2-core.h	/^	struct device			*alloc_devs[VB2_MAX_PLANES];$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::device
alloc_dr	devres.c	/^static __always_inline struct devres * alloc_dr(dr_release_t release,$/;"	f	file:
alloc_userspace	v4l2-compat-ioctl32.c	/^static int alloc_userspace(unsigned int size, u32 aux_space,$/;"	f	file:
alloc_vb	videobuf-core.h	/^	struct videobuf_buffer *(*alloc_vb)(size_t size);$/;"	m	struct:videobuf_qtype_ops	typeref:struct:videobuf_qtype_ops::alloc_vb
allocate_filter	demux.h	/^	int (*allocate_filter)(struct dmx_section_feed *feed,$/;"	m	struct:dmx_section_feed
allocate_section_feed	demux.h	/^	int (*allocate_section_feed)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
allocate_ts_feed	demux.h	/^	int (*allocate_ts_feed)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
allow_zero_bytesused	videobuf2-core.h	/^	unsigned			allow_zero_bytesused:1;$/;"	m	struct:vb2_queue
allowed_protocols	rc-core.h	/^	u64				allowed_protocols;$/;"	m	struct:rc_dev
allowed_wakeup_protocols	rc-core.h	/^	u64				allowed_wakeup_protocols;$/;"	m	struct:rc_dev
alpha	vsp1.h	/^	unsigned int alpha;$/;"	m	struct:vsp1_du_atomic_config
alsa	media.h	/^		} alsa;$/;"	m	union:media_entity_desc::__anon20	typeref:struct:media_entity_desc::__anon20::__anon22
amba_id	mod_devicetable.h	/^struct amba_id {$/;"	s
analog_demod_info	dvb_frontend.h	/^struct analog_demod_info {$/;"	s
analog_demod_ops	dvb_frontend.h	/^struct analog_demod_ops {$/;"	s
analog_demod_priv	dvb_frontend.h	/^	void *analog_demod_priv;$/;"	m	struct:dvb_frontend
analog_ops	dvb_frontend.h	/^	struct analog_demod_ops analog_ops;$/;"	m	struct:dvb_frontend_ops	typeref:struct:dvb_frontend_ops::analog_demod_ops
analog_parameters	dvb_frontend.h	/^struct analog_parameters {$/;"	s
ap_device_id	mod_devicetable.h	/^struct ap_device_id {$/;"	s
api_version	mod_devicetable.h	/^	__u8 api_version;$/;"	m	struct:hda_device_id
approximation	clk-provider.h	/^	void		(*approximation)(struct clk_hw *hw,$/;"	m	struct:clk_fractional_divider
apr_device_id	mod_devicetable.h	/^struct apr_device_id {$/;"	s
ara	i2c-smbus.c	/^	struct i2c_client	*ara;		\/* Alert response address *\/$/;"	m	struct:i2c_smbus_alert	typeref:struct:i2c_smbus_alert::i2c_client	file:
arbitrator	i2c-mux.h	/^	unsigned int arbitrator:1;$/;"	m	struct:i2c_mux_core
arch	module.h	/^	struct mod_arch_specific arch;$/;"	m	struct:module	typeref:struct:module::mod_arch_specific
arch_initcall	module.h	115;"	d
archdata	device.h	/^	struct dev_archdata	archdata;$/;"	m	struct:device	typeref:struct:device::dev_archdata
arg	i2c-core-base.c	/^	void		*arg;$/;"	m	struct:i2c_cmd_arg	file:
arg	videobuf2-memops.h	/^	void			*arg;$/;"	m	struct:vb2_vmarea_handler
args	fwnode.h	/^	u64 args[NR_FWNODE_REFERENCE_ARGS];$/;"	m	struct:fwnode_reference_args
args	module.h	/^	char *args;$/;"	m	struct:module
argv0	ffs-test.c	/^static const char argv0[] = "ffs-test";$/;"	v	file:
asd	soc_camera.h	/^	struct v4l2_async_subdev **asd;	\/* Flat array, arranged in groups *\/$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::v4l2_async_subdev
asd	soc_camera.h	/^	struct v4l2_async_subdev asd;$/;"	m	struct:soc_camera_async_subdev	typeref:struct:soc_camera_async_subdev::v4l2_async_subdev
asd	v4l2-subdev.h	/^	struct v4l2_async_subdev *asd;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_async_subdev
asd_sizes	soc_camera.h	/^	unsigned int *asd_sizes;	\/* 0-terminated array of asd group sizes *\/$/;"	m	struct:soc_camera_host
asm_did	mod_devicetable.h	/^	__u16 asm_did, asm_vid;$/;"	m	struct:rio_device_id
asm_vid	mod_devicetable.h	/^	__u16 asm_did, asm_vid;$/;"	m	struct:rio_device_id
aspeed_gpio_copro_ops	aspeed.h	/^struct aspeed_gpio_copro_ops {$/;"	s
assign_in_user	v4l2-compat-ioctl32.c	37;"	d	file:
assign_in_user_cast	v4l2-compat-ioctl32.c	94;"	d	file:
async_list	v4l2-subdev.h	/^	struct list_head async_list;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::list_head
async_probe_requested	module.h	/^	bool async_probe_requested;$/;"	m	struct:module
async_suspend	pm.h	/^	unsigned int		async_suspend:1;$/;"	m	struct:dev_pm_info
atscmh_fic_ver	dvb_frontend.h	/^	u8			atscmh_fic_ver;$/;"	m	struct:dtv_frontend_properties
atscmh_nog	dvb_frontend.h	/^	u8			atscmh_nog;$/;"	m	struct:dtv_frontend_properties
atscmh_parade_id	dvb_frontend.h	/^	u8			atscmh_parade_id;$/;"	m	struct:dtv_frontend_properties
atscmh_prc	dvb_frontend.h	/^	u8			atscmh_prc;$/;"	m	struct:dtv_frontend_properties
atscmh_rs_code_mode_pri	dvb_frontend.h	/^	u8			atscmh_rs_code_mode_pri;$/;"	m	struct:dtv_frontend_properties
atscmh_rs_code_mode_sec	dvb_frontend.h	/^	u8			atscmh_rs_code_mode_sec;$/;"	m	struct:dtv_frontend_properties
atscmh_rs_frame_ensemble	dvb_frontend.h	/^	u8			atscmh_rs_frame_ensemble;$/;"	m	struct:dtv_frontend_properties
atscmh_rs_frame_mode	dvb_frontend.h	/^	u8			atscmh_rs_frame_mode;$/;"	m	struct:dtv_frontend_properties
atscmh_sccc_block_mode	dvb_frontend.h	/^	u8			atscmh_sccc_block_mode;$/;"	m	struct:dtv_frontend_properties
atscmh_sccc_code_mode_a	dvb_frontend.h	/^	u8			atscmh_sccc_code_mode_a;$/;"	m	struct:dtv_frontend_properties
atscmh_sccc_code_mode_b	dvb_frontend.h	/^	u8			atscmh_sccc_code_mode_b;$/;"	m	struct:dtv_frontend_properties
atscmh_sccc_code_mode_c	dvb_frontend.h	/^	u8			atscmh_sccc_code_mode_c;$/;"	m	struct:dtv_frontend_properties
atscmh_sccc_code_mode_d	dvb_frontend.h	/^	u8			atscmh_sccc_code_mode_d;$/;"	m	struct:dtv_frontend_properties
atscmh_sgn	dvb_frontend.h	/^	u8			atscmh_sgn;$/;"	m	struct:dtv_frontend_properties
atscmh_tnog	dvb_frontend.h	/^	u8			atscmh_tnog;$/;"	m	struct:dtv_frontend_properties
attach_dmabuf	videobuf2-core.h	/^	void		*(*attach_dmabuf)(struct device *dev,$/;"	m	struct:vb2_mem_ops
attempts	cec.h	/^	u8 attempts;$/;"	m	struct:cec_data
attr	device.h	/^	struct attribute	attr;$/;"	m	struct:bus_attribute	typeref:struct:bus_attribute::attribute
attr	device.h	/^	struct attribute	attr;$/;"	m	struct:device_attribute	typeref:struct:device_attribute::attribute
attr	device.h	/^	struct attribute attr;$/;"	m	struct:class_attribute	typeref:struct:class_attribute::attribute
attr	device.h	/^	struct attribute attr;$/;"	m	struct:driver_attribute	typeref:struct:driver_attribute::attribute
attr	device.h	/^	struct class_attribute attr;$/;"	m	struct:class_attribute_string	typeref:struct:class_attribute_string::class_attribute
attr	device.h	/^	struct device_attribute attr;$/;"	m	struct:dev_ext_attribute	typeref:struct:dev_ext_attribute::device_attribute
attr	module.h	/^	struct attribute attr;$/;"	m	struct:module_attribute	typeref:struct:module_attribute::attribute
attr	sysfs1.h	/^	struct attribute	attr;$/;"	m	struct:bin_attribute	typeref:struct:bin_attribute::attribute
attribute	sysfs1.h	/^struct attribute {$/;"	s
attribute_group	sysfs1.h	/^struct attribute_group {$/;"	s
attrs	sysfs1.h	/^	struct attribute	**attrs;$/;"	m	struct:attribute_group	typeref:struct:attribute_group::attribute
audio	v4l2-subdev.h	/^	const struct v4l2_subdev_audio_ops	*audio;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_audio_ops
audio_processor	tveeprom.h	/^	u32 audio_processor;$/;"	m	struct:tveeprom
audioset	v4l2-compat-ioctl32.c	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_input32	file:
audioset	videodev2.h	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_input
audioset	videodev2.h	/^	__u32	     audioset;		\/*  Associated audios (bitfield) *\/$/;"	m	struct:v4l2_output
audmode	dvb_frontend.h	/^	unsigned int audmode;$/;"	m	struct:analog_parameters
audmode	tuner-core.c	/^	unsigned int        audmode;$/;"	m	struct:tuner	file:
audmode	videodev2.h	/^	__u32			audmode;$/;"	m	struct:v4l2_tuner
autosuspend_delay	pm.h	/^	int			autosuspend_delay;$/;"	m	struct:dev_pm_info
available	v4l2-fh.h	/^	struct list_head	available;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::list_head
available_log_addrs	cec.h	/^	u8 available_log_addrs;$/;"	m	struct:cec_adapter
bAlternateSetting	testusb.c	/^	__u8  bAlternateSetting;$/;"	m	struct:usb_interface_descriptor	file:
bDescriptorType	testusb.c	/^	__u8  bDescriptorType;$/;"	m	struct:usb_device_descriptor	file:
bDescriptorType	testusb.c	/^	__u8  bDescriptorType;$/;"	m	struct:usb_interface_descriptor	file:
bDeviceClass	mod_devicetable.h	/^	__u8		bDeviceClass;$/;"	m	struct:usb_device_id
bDeviceClass	testusb.c	/^	__u8  bDeviceClass;$/;"	m	struct:usb_device_descriptor	file:
bDeviceProtocol	mod_devicetable.h	/^	__u8		bDeviceProtocol;$/;"	m	struct:usb_device_id
bDeviceProtocol	testusb.c	/^	__u8  bDeviceProtocol;$/;"	m	struct:usb_device_descriptor	file:
bDeviceSubClass	mod_devicetable.h	/^	__u8		bDeviceSubClass;$/;"	m	struct:usb_device_id
bDeviceSubClass	testusb.c	/^	__u8  bDeviceSubClass;$/;"	m	struct:usb_device_descriptor	file:
bInterfaceClass	mod_devicetable.h	/^	__u8		bInterfaceClass;$/;"	m	struct:usb_device_id
bInterfaceClass	testusb.c	/^	__u8  bInterfaceClass;$/;"	m	struct:usb_interface_descriptor	file:
bInterfaceNumber	mod_devicetable.h	/^	__u8		bInterfaceNumber;$/;"	m	struct:usb_device_id
bInterfaceNumber	testusb.c	/^	__u8  bInterfaceNumber;$/;"	m	struct:usb_interface_descriptor	file:
bInterfaceProtocol	mod_devicetable.h	/^	__u8		bInterfaceProtocol;$/;"	m	struct:usb_device_id
bInterfaceProtocol	testusb.c	/^	__u8  bInterfaceProtocol;$/;"	m	struct:usb_interface_descriptor	file:
bInterfaceSubClass	mod_devicetable.h	/^	__u8		bInterfaceSubClass;$/;"	m	struct:usb_device_id
bInterfaceSubClass	testusb.c	/^	__u8  bInterfaceSubClass;$/;"	m	struct:usb_interface_descriptor	file:
bLength	testusb.c	/^	__u8  bLength;$/;"	m	struct:usb_device_descriptor	file:
bLength	testusb.c	/^	__u8  bLength;$/;"	m	struct:usb_interface_descriptor	file:
bMaxPacketSize0	testusb.c	/^	__u8  bMaxPacketSize0;$/;"	m	struct:usb_device_descriptor	file:
bNumConfigurations	testusb.c	/^	__u8  bNumConfigurations;$/;"	m	struct:usb_device_descriptor	file:
bNumEndpoints	testusb.c	/^	__u8  bNumEndpoints;$/;"	m	struct:usb_interface_descriptor	file:
baddr	videobuf-core.h	/^	unsigned long           baddr;$/;"	m	struct:videobuf_buffer
bandwidth_hz	dvb_frontend.h	/^	u32			bandwidth_hz;	\/* 0 = AUTO *\/$/;"	m	struct:dtv_frontend_properties
bandwidth_max	dvb_frontend.h	/^	u32 bandwidth_max;$/;"	m	struct:dvb_tuner_info
bandwidth_min	dvb_frontend.h	/^	u32 bandwidth_min;$/;"	m	struct:dvb_tuner_info
bandwidth_step	dvb_frontend.h	/^	u32 bandwidth_step;$/;"	m	struct:dvb_tuner_info
base	driver.h	/^	int			base;$/;"	m	struct:gpio_chip
base	driver.h	/^	int base;$/;"	m	struct:bgpio_pdata
base	module.h	/^	void *base;$/;"	m	struct:module_layout
base	v4l2-compat-ioctl32.c	/^	compat_caddr_t		base;$/;"	m	struct:v4l2_framebuffer32	file:
base	v4l2-fwnode.h	/^	struct fwnode_endpoint base;$/;"	m	struct:v4l2_fwnode_endpoint	typeref:struct:v4l2_fwnode_endpoint::fwnode_endpoint
base	videodev2.h	/^	void                    *base;$/;"	m	struct:v4l2_framebuffer
bcdDevice	testusb.c	/^	__u16 bcdDevice;$/;"	m	struct:usb_device_descriptor	file:
bcdDevice_hi	mod_devicetable.h	/^	__u16		bcdDevice_hi;$/;"	m	struct:usb_device_id
bcdDevice_lo	mod_devicetable.h	/^	__u16		bcdDevice_lo;$/;"	m	struct:usb_device_id
bcdUSB	testusb.c	/^	__u16 bcdUSB;$/;"	m	struct:usb_device_descriptor	file:
bcma_device_id	mod_devicetable.h	/^struct bcma_device_id {$/;"	s
bdata	i2c-core-acpi.c	/^		u8	bdata;$/;"	m	union:gsb_buffer::__anon13	file:
be16_add_cpu	generic.h	/^static inline void be16_add_cpu(__be16 *var, u16 val)$/;"	f
be16_to_cpu	generic.h	97;"	d
be16_to_cpu	relocs.c	134;"	d	file:
be16_to_cpu	relocs.c	149;"	d	file:
be16_to_cpup	generic.h	109;"	d
be16_to_cpus	generic.h	121;"	d
be32_add_cpu	generic.h	/^static inline void be32_add_cpu(__be32 *var, u32 val)$/;"	f
be32_to_cpu	generic.h	95;"	d
be32_to_cpu	relocs.c	135;"	d	file:
be32_to_cpu	relocs.c	150;"	d	file:
be32_to_cpu_array	generic.h	/^static inline void be32_to_cpu_array(u32 *dst, const __be32 *src, size_t len)$/;"	f
be32_to_cpup	generic.h	107;"	d
be32_to_cpus	generic.h	119;"	d
be64_add_cpu	generic.h	/^static inline void be64_add_cpu(__be64 *var, u64 val)$/;"	f
be64_to_cpu	generic.h	93;"	d
be64_to_cpu	relocs.c	136;"	d	file:
be64_to_cpu	relocs.c	151;"	d	file:
be64_to_cpup	generic.h	105;"	d
be64_to_cpus	generic.h	117;"	d
be_bits	driver.h	/^	bool be_bits;$/;"	m	struct:gpio_chip
best_parent_hw	clk-provider.h	/^	struct clk_hw *best_parent_hw;$/;"	m	struct:clk_rate_request	typeref:struct:clk_rate_request::clk_hw
best_parent_rate	clk-provider.h	/^	unsigned long best_parent_rate;$/;"	m	struct:clk_rate_request
bgpio_bits	driver.h	/^	int bgpio_bits;$/;"	m	struct:gpio_chip
bgpio_data	driver.h	/^	unsigned long bgpio_data;$/;"	m	struct:gpio_chip
bgpio_dir	driver.h	/^	unsigned long bgpio_dir;$/;"	m	struct:gpio_chip
bgpio_dir_inverted	driver.h	/^	bool bgpio_dir_inverted;$/;"	m	struct:gpio_chip
bgpio_lock	driver.h	/^	spinlock_t bgpio_lock;$/;"	m	struct:gpio_chip
bgpio_pdata	driver.h	/^struct bgpio_pdata {$/;"	s
bidirectional	videobuf2-core.h	/^	unsigned			bidirectional:1;$/;"	m	struct:vb2_queue
bin	i2c-slave-eeprom.c	/^	struct bin_attribute bin;$/;"	m	struct:eeprom_data	typeref:struct:eeprom_data::bin_attribute	file:
bin_attribute	sysfs1.h	/^struct bin_attribute {$/;"	s
bin_attrs	sysfs1.h	/^	struct bin_attribute	**bin_attrs;$/;"	m	struct:attribute_group	typeref:struct:attribute_group::bin_attribute
bind_store	bus.c	/^static ssize_t bind_store(struct device_driver *drv, const char *buf,$/;"	f	file:
bit_idx	clk-provider.h	/^	u8		bit_idx;$/;"	m	struct:clk_gate
bitmap	v4l2-compat-ioctl32.c	/^	compat_caddr_t		bitmap;$/;"	m	struct:v4l2_window32	file:
bitmap	videodev2.h	/^	void			__user *bitmap;$/;"	m	struct:v4l2_window
block	videodev2.h	/^	__u8	block;$/;"	m	struct:v4l2_rds_data
block_count	dvb_frontend.h	/^	struct dtv_fe_stats	block_count;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
block_error	dvb_frontend.h	/^	struct dtv_fe_stats	block_error;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
blocking	cec.h	/^	bool blocking;$/;"	m	struct:cec_data
blocks	v4l2-compat-ioctl32.c	/^	__u32 blocks;$/;"	m	struct:v4l2_edid32	file:
bmap	media-entity.h	/^	unsigned long *bmap;$/;"	m	struct:media_entity_enum
board_info	i2c-core.h	/^	struct i2c_board_info	board_info;$/;"	m	struct:i2c_devinfo	typeref:struct:i2c_devinfo::i2c_board_info
board_info	soc_camera.h	/^	struct i2c_board_info *board_info;$/;"	m	struct:soc_camera_host_desc	typeref:struct:soc_camera_host_desc::i2c_board_info
board_info	soc_camera.h	/^	struct i2c_board_info *board_info;$/;"	m	struct:soc_camera_link	typeref:struct:soc_camera_link::i2c_board_info
boff	videobuf-core.h	/^	size_t                  boff;$/;"	m	struct:videobuf_buffer
bound	v4l2-async.h	/^	int (*bound)(struct v4l2_async_notifier *notifier,$/;"	m	struct:v4l2_async_notifier_operations
bounds	videodev2.h	/^	struct v4l2_rect        bounds;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
bsize	videobuf-core.h	/^	size_t                  bsize;$/;"	m	struct:videobuf_buffer
bt	videodev2.h	/^		struct v4l2_bt_timings	bt;$/;"	m	union:v4l2_dv_timings::__anon54	typeref:struct:v4l2_dv_timings::__anon54::v4l2_bt_timings
bt	videodev2.h	/^		struct v4l2_bt_timings_cap bt;$/;"	m	union:v4l2_dv_timings_cap::__anon55	typeref:struct:v4l2_dv_timings_cap::__anon55::v4l2_bt_timings_cap
buckets	v4l2-ctrls.h	/^	struct v4l2_ctrl_ref **buckets;$/;"	m	struct:v4l2_ctrl_handler	typeref:struct:v4l2_ctrl_handler::v4l2_ctrl_ref
buf	dvb_vb2.h	/^	struct dvb_buffer	*buf;$/;"	m	struct:dvb_vb2_ctx	typeref:struct:dvb_vb2_ctx::dvb_buffer
buf	ffs-test.c	/^	void *buf;$/;"	m	struct:thread	file:
buf	i2c-dev.c	/^	compat_caddr_t buf;$/;"	m	struct:i2c_msg32	file:
buf_cleanup	videobuf2-core.h	/^	void (*buf_cleanup)(struct vb2_buffer *vb);$/;"	m	struct:vb2_ops
buf_cnt	dvb_vb2.h	/^	int	buf_cnt;$/;"	m	struct:dvb_vb2_ctx
buf_finish	videobuf2-core.h	/^	void (*buf_finish)(struct vb2_buffer *vb);$/;"	m	struct:vb2_ops
buf_init	videobuf2-core.h	/^	int (*buf_init)(struct vb2_buffer *vb);$/;"	m	struct:vb2_ops
buf_ops	videobuf2-core.h	/^	const struct vb2_buf_ops	*buf_ops;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::vb2_buf_ops
buf_prepare	videobuf-core.h	/^	int (*buf_prepare)(struct videobuf_queue *q,$/;"	m	struct:videobuf_queue_ops
buf_prepare	videobuf2-core.h	/^	int (*buf_prepare)(struct vb2_buffer *vb);$/;"	m	struct:vb2_ops
buf_queue	videobuf-core.h	/^	void (*buf_queue)(struct videobuf_queue *q,$/;"	m	struct:videobuf_queue_ops
buf_queue	videobuf2-core.h	/^	void (*buf_queue)(struct vb2_buffer *vb);$/;"	m	struct:vb2_ops
buf_release	videobuf-core.h	/^	void (*buf_release)(struct videobuf_queue *q,$/;"	m	struct:videobuf_queue_ops
buf_setup	videobuf-core.h	/^	int (*buf_setup)(struct videobuf_queue *q,$/;"	m	struct:videobuf_queue_ops
buf_siz	dvb_vb2.h	/^	int	buf_siz;$/;"	m	struct:dvb_vb2_ctx
buf_size	ffs-test.c	/^	size_t buf_size;$/;"	m	struct:thread	file:
buf_struct_size	videobuf2-core.h	/^	unsigned int			buf_struct_size;$/;"	m	struct:vb2_queue
buffer	dmxdev.h	/^	struct dvb_ringbuffer buffer;$/;"	m	struct:dmxdev_filter	typeref:struct:dmxdev_filter::dvb_ringbuffer
buffer	i2c-slave-eeprom.c	/^	u8 buffer[];$/;"	m	struct:eeprom_data	file:
buffer_flags	dvb_demux.h	/^	u32 buffer_flags;$/;"	m	struct:dvb_demux_feed
buffer_idx	i2c-slave-eeprom.c	/^	u8 buffer_idx;$/;"	m	struct:eeprom_data	file:
buffer_lock	i2c-slave-eeprom.c	/^	spinlock_t buffer_lock;$/;"	m	struct:eeprom_data	file:
buffered	v4l2-mem2mem.h	/^	bool			buffered;$/;"	m	struct:v4l2_m2m_queue_ctx
buffersize	videodev2.h	/^	__u32				buffersize;$/;"	m	struct:v4l2_meta_format
buffersize	videodev2.h	/^	__u32				buffersize;$/;"	m	struct:v4l2_sdr_format
bufs	videobuf-core.h	/^	struct videobuf_buffer     *bufs[VIDEO_MAX_FRAME];$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::videobuf_buffer
bufs	videobuf2-core.h	/^	struct vb2_buffer		*bufs[VB2_MAX_FRAME];$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::vb2_buffer
bufsize_v4l2_buffer	v4l2-compat-ioctl32.c	/^static int bufsize_v4l2_buffer(struct v4l2_buffer32 __user *p32, u32 *size)$/;"	f	file:
bufsize_v4l2_create	v4l2-compat-ioctl32.c	/^static int bufsize_v4l2_create(struct v4l2_create_buffers32 __user *p32,$/;"	f	file:
bufsize_v4l2_ext_controls	v4l2-compat-ioctl32.c	/^static int bufsize_v4l2_ext_controls(struct v4l2_ext_controls32 __user *p32,$/;"	f	file:
bufsize_v4l2_format	v4l2-compat-ioctl32.c	/^static int bufsize_v4l2_format(struct v4l2_format32 __user *p32, u32 *size)$/;"	f	file:
bug_list	module.h	/^	struct list_head bug_list;$/;"	m	struct:module	typeref:struct:module::list_head
bug_table	module.h	/^	struct bug_entry *bug_table;$/;"	m	struct:module	typeref:struct:module::bug_entry
builtin_driver	device.h	1627;"	d
builtin_i2c_driver	i2c.h	882;"	d
bus	base.h	/^	struct bus_type *bus;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::bus_type
bus	device.h	/^	struct bus_type		*bus;$/;"	m	struct:device_driver	typeref:struct:device_driver::bus_type
bus	device.h	/^	struct bus_type	*bus;		\/* type of bus device is on *\/$/;"	m	struct:device	typeref:struct:device::bus_type
bus	mod_devicetable.h	/^	__u16 bus;$/;"	m	struct:hid_device_id
bus	v4l2-fwnode.h	/^	} bus;$/;"	m	struct:v4l2_fwnode_endpoint	typeref:union:v4l2_fwnode_endpoint::__anon46
bus_add_device	bus.c	/^int bus_add_device(struct device *dev)$/;"	f
bus_add_driver	bus.c	/^int bus_add_driver(struct device_driver *drv)$/;"	f
bus_add_groups	bus.c	/^static int bus_add_groups(struct bus_type *bus,$/;"	f	file:
bus_addr	videobuf-dma-sg.h	/^	dma_addr_t          bus_addr;$/;"	m	struct:videobuf_dmabuf
bus_attr_show	bus.c	/^static ssize_t bus_attr_show(struct kobject *kobj, struct attribute *attr,$/;"	f	file:
bus_attr_store	bus.c	/^static ssize_t bus_attr_store(struct kobject *kobj, struct attribute *attr,$/;"	f	file:
bus_attribute	device.h	/^struct bus_attribute {$/;"	s
bus_create_file	bus.c	/^EXPORT_SYMBOL_GPL(bus_create_file);$/;"	v
bus_create_file	bus.c	/^int bus_create_file(struct bus_type *bus, struct bus_attribute *attr)$/;"	f
bus_dma_mask	device.h	/^	u64		bus_dma_mask;	\/* upstream dma_mask constraint *\/$/;"	m	struct:device
bus_find_device	bus.c	/^EXPORT_SYMBOL_GPL(bus_find_device);$/;"	v
bus_find_device	bus.c	/^struct device *bus_find_device(struct bus_type *bus,$/;"	f
bus_find_device_by_name	bus.c	/^EXPORT_SYMBOL_GPL(bus_find_device_by_name);$/;"	v
bus_find_device_by_name	bus.c	/^struct device *bus_find_device_by_name(struct bus_type *bus,$/;"	f
bus_for_each_dev	bus.c	/^EXPORT_SYMBOL_GPL(bus_for_each_dev);$/;"	v
bus_for_each_dev	bus.c	/^int bus_for_each_dev(struct bus_type *bus, struct device *start,$/;"	f
bus_for_each_drv	bus.c	/^EXPORT_SYMBOL_GPL(bus_for_each_drv);$/;"	v
bus_for_each_drv	bus.c	/^int bus_for_each_drv(struct bus_type *bus, struct device_driver *start,$/;"	f
bus_freq_hz	i2c.h	/^	u32 bus_freq_hz;$/;"	m	struct:i2c_timings
bus_get	bus.c	/^static struct bus_type *bus_get(struct bus_type *bus)$/;"	f	file:
bus_get_device_klist	bus.c	/^EXPORT_SYMBOL_GPL(bus_get_device_klist);$/;"	v
bus_get_device_klist	bus.c	/^struct klist *bus_get_device_klist(struct bus_type *bus)$/;"	f
bus_get_kset	bus.c	/^EXPORT_SYMBOL_GPL(bus_get_kset);$/;"	v
bus_get_kset	bus.c	/^struct kset *bus_get_kset(struct bus_type *bus)$/;"	f
bus_groups	device.h	/^	const struct attribute_group **bus_groups;$/;"	m	struct:bus_type	typeref:struct:bus_type::attribute_group
bus_id	soc_camera.h	/^	int bus_id;$/;"	m	struct:soc_camera_host_desc
bus_id	soc_camera.h	/^	int bus_id;$/;"	m	struct:soc_camera_link
bus_info	media-device.h	/^	char bus_info[32];$/;"	m	struct:media_device
bus_info	media.h	/^	char bus_info[32];$/;"	m	struct:media_device_info
bus_info	videodev2.h	/^	__u8	bus_info[32];$/;"	m	struct:v4l2_capability
bus_kset	bus.c	/^static struct kset *bus_kset;$/;"	v	typeref:struct:kset	file:
bus_ktype	bus.c	/^static struct kobj_type bus_ktype = {$/;"	v	typeref:struct:kobj_type	file:
bus_lock	i2c.h	/^	struct rt_mutex bus_lock;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::rt_mutex
bus_notifier	base.h	/^	struct blocking_notifier_head bus_notifier;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::blocking_notifier_head
bus_probe_device	bus.c	/^void bus_probe_device(struct device *dev)$/;"	f
bus_put	bus.c	/^static void bus_put(struct bus_type *bus)$/;"	f	file:
bus_recovery_info	i2c.h	/^	struct i2c_bus_recovery_info *bus_recovery_info;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::i2c_bus_recovery_info
bus_register	bus.c	/^EXPORT_SYMBOL_GPL(bus_register);$/;"	v
bus_register	bus.c	/^int bus_register(struct bus_type *bus)$/;"	f
bus_register_notifier	bus.c	/^EXPORT_SYMBOL_GPL(bus_register_notifier);$/;"	v
bus_register_notifier	bus.c	/^int bus_register_notifier(struct bus_type *bus, struct notifier_block *nb)$/;"	f
bus_release	bus.c	/^static void bus_release(struct kobject *kobj)$/;"	f	file:
bus_remove_device	bus.c	/^void bus_remove_device(struct device *dev)$/;"	f
bus_remove_driver	bus.c	/^void bus_remove_driver(struct device_driver *drv)$/;"	f
bus_remove_file	bus.c	/^EXPORT_SYMBOL_GPL(bus_remove_file);$/;"	v
bus_remove_file	bus.c	/^void bus_remove_file(struct bus_type *bus, struct bus_attribute *attr)$/;"	f
bus_remove_groups	bus.c	/^static void bus_remove_groups(struct bus_type *bus,$/;"	f	file:
bus_rescan_devices	bus.c	/^EXPORT_SYMBOL_GPL(bus_rescan_devices);$/;"	v
bus_rescan_devices	bus.c	/^int bus_rescan_devices(struct bus_type *bus)$/;"	f
bus_rescan_devices_helper	bus.c	/^static int __must_check bus_rescan_devices_helper(struct device *dev,$/;"	f	file:
bus_sort_breadthfirst	bus.c	/^EXPORT_SYMBOL_GPL(bus_sort_breadthfirst);$/;"	v
bus_sort_breadthfirst	bus.c	/^void bus_sort_breadthfirst(struct bus_type *bus,$/;"	f
bus_sysfs_ops	bus.c	/^static const struct sysfs_ops bus_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
bus_type	device.h	/^struct bus_type {$/;"	s
bus_type	v4l2-fwnode.h	/^	enum v4l2_mbus_type bus_type;$/;"	m	struct:v4l2_fwnode_endpoint	typeref:enum:v4l2_fwnode_endpoint::v4l2_mbus_type
bus_uevent_filter	bus.c	/^static int bus_uevent_filter(struct kset *kset, struct kobject *kobj)$/;"	f	file:
bus_uevent_ops	bus.c	/^static const struct kset_uevent_ops bus_uevent_ops = {$/;"	v	typeref:struct:kset_uevent_ops	file:
bus_uevent_store	bus.c	/^static ssize_t bus_uevent_store(struct bus_type *bus,$/;"	f	file:
bus_unregister	bus.c	/^EXPORT_SYMBOL_GPL(bus_unregister);$/;"	v
bus_unregister	bus.c	/^void bus_unregister(struct bus_type *bus)$/;"	f
bus_unregister_notifier	bus.c	/^EXPORT_SYMBOL_GPL(bus_unregister_notifier);$/;"	v
bus_unregister_notifier	bus.c	/^int bus_unregister_notifier(struct bus_type *bus, struct notifier_block *nb)$/;"	f
bus_width	v4l2-fwnode.h	/^	unsigned char bus_width;$/;"	m	struct:v4l2_fwnode_bus_parallel
buses_init	bus.c	/^int __init buses_init(void)$/;"	f
busnum	i2c-core.h	/^	int			busnum;$/;"	m	struct:i2c_devinfo
bustype	mod_devicetable.h	/^	__u16 bustype;$/;"	m	struct:input_device_id
buttons	gpio_keys.h	/^	const struct gpio_keys_button *buttons;$/;"	m	struct:gpio_keys_platform_data	typeref:struct:gpio_keys_platform_data::gpio_keys_button
bytes_per_data_element	v4l2-subdev.h	/^	unsigned int bytes_per_data_element;$/;"	m	struct:v4l2_subdev_ir_parameters
bytesperline	soc_camera.h	/^	u32 bytesperline;		\/* for padding, zero if unused *\/$/;"	m	struct:soc_camera_device
bytesperline	v4l2-compat-ioctl32.c	/^		__u32		bytesperline;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
bytesperline	videobuf-core.h	/^	unsigned int            bytesperline; \/* use only if != 0 *\/$/;"	m	struct:videobuf_buffer
bytesperline	videodev2.h	/^		__u32		bytesperline;	\/* for padding, zero if unused *\/$/;"	m	struct:v4l2_framebuffer::__anon53
bytesperline	videodev2.h	/^	__u32			bytesperline;	\/* for padding, zero if unused *\/$/;"	m	struct:v4l2_pix_format
bytesperline	videodev2.h	/^	__u32		bytesperline;$/;"	m	struct:v4l2_plane_pix_format
bytesused	v4l2-compat-ioctl32.c	/^	__u32			bytesused;$/;"	m	struct:v4l2_buffer32	file:
bytesused	v4l2-compat-ioctl32.c	/^	__u32			bytesused;$/;"	m	struct:v4l2_plane32	file:
bytesused	videobuf2-core.h	/^	unsigned int		bytesused;$/;"	m	struct:vb2_plane
bytesused	videodev2.h	/^	__u32			bytesused;$/;"	m	struct:v4l2_buffer
bytesused	videodev2.h	/^	__u32			bytesused;$/;"	m	struct:v4l2_plane
c	cec.h	/^	struct completion c;$/;"	m	struct:cec_data	typeref:struct:cec_data::completion
c	v4l2-compat-ioctl32.c	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_clip32	typeref:struct:v4l2_clip32::v4l2_rect	file:
c	videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::v4l2_rect
c	videodev2.h	/^	struct v4l2_rect        c;$/;"	m	struct:v4l2_crop	typeref:struct:v4l2_crop::v4l2_rect
c_false	kernel.h	/^	char c_false;	\/* character printed when not tainted *\/$/;"	m	struct:taint_flag
c_node	device.h	/^	struct list_head c_node;$/;"	m	struct:device_link	typeref:struct:device_link::list_head
c_true	kernel.h	/^	char c_true;	\/* character printed when tainted *\/$/;"	m	struct:taint_flag
cached	v4l2-ctrls.h	/^	struct v4l2_ctrl_ref *cached;$/;"	m	struct:v4l2_ctrl_handler	typeref:struct:v4l2_ctrl_handler::v4l2_ctrl_ref
calc_regs	dvb_frontend.h	/^	int (*calc_regs)(struct dvb_frontend *fe, u8 *buf, int buf_len);$/;"	m	struct:dvb_tuner_ops
call_flash_op	v4l2-flash-led-class.c	23;"	d	file:
call_notify	v4l2-ctrls.h	/^	unsigned int call_notify:1;$/;"	m	struct:v4l2_ctrl
call_op	v4l2-ctrls.c	33;"	d	file:
callback	dvb_frontend.h	/^	int (*callback)(void *adapter_priv, int component, int cmd, int arg);$/;"	m	struct:dvb_frontend
callback	mod_devicetable.h	/^	int (*callback)(const struct dmi_system_id *);$/;"	m	struct:dmi_system_id
callback	vsp1.h	/^	void (*callback)(void *data, bool completed, u32 crc);$/;"	m	struct:vsp1_du_lif_config
callback_data	vsp1.h	/^	void *callback_data;$/;"	m	struct:vsp1_du_lif_config
can_disable	gpio_keys.h	/^	bool can_disable;$/;"	m	struct:gpio_keys_button
can_reduce_fps	v4l2-dv-timings.h	/^static inline  bool can_reduce_fps(struct v4l2_bt_timings *bt)$/;"	f
can_sleep	driver.h	/^	bool			can_sleep;$/;"	m	struct:gpio_chip
can_wakeup	pm.h	/^	unsigned int		can_wakeup:1;$/;"	m	struct:dev_pm_info
cap_q_ctx	v4l2-mem2mem.h	/^	struct v4l2_m2m_queue_ctx	cap_q_ctx;$/;"	m	struct:v4l2_m2m_ctx	typeref:struct:v4l2_m2m_ctx::v4l2_m2m_queue_ctx
capabilities	cec.h	/^	u32 capabilities;$/;"	m	struct:cec_adapter
capabilities	demux.h	/^	enum dmx_demux_caps capabilities;$/;"	m	struct:dmx_demux	typeref:enum:dmx_demux::dmx_demux_caps
capabilities	dmxdev.h	/^	int capabilities;$/;"	m	struct:dmxdev
capabilities	soc_camera.h	/^	u32 capabilities;$/;"	m	struct:soc_camera_host
capabilities	v4l2-compat-ioctl32.c	/^	__u32			capabilities;$/;"	m	struct:v4l2_create_buffers32	file:
capabilities	v4l2-compat-ioctl32.c	/^	__u32	     capabilities;$/;"	m	struct:v4l2_input32	file:
capabilities	videodev2.h	/^	__u32			capabilities;$/;"	m	struct:v4l2_create_buffers
capabilities	videodev2.h	/^	__u32			capabilities;$/;"	m	struct:v4l2_requestbuffers
capabilities	videodev2.h	/^	__u32	     capabilities;$/;"	m	struct:v4l2_input
capabilities	videodev2.h	/^	__u32	     capabilities;$/;"	m	struct:v4l2_output
capabilities	videodev2.h	/^	__u32	capabilities;$/;"	m	struct:v4l2_bt_timings_cap
capabilities	videodev2.h	/^	__u32	capabilities;$/;"	m	struct:v4l2_capability
capability	v4l2-compat-ioctl32.c	/^	__u32			capability;$/;"	m	struct:v4l2_framebuffer32	file:
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_framebuffer
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_modulator
capability	videodev2.h	/^	__u32			capability;$/;"	m	struct:v4l2_tuner
capability	videodev2.h	/^	__u32		   capability;	  \/*  Supported modes *\/$/;"	m	struct:v4l2_captureparm
capability	videodev2.h	/^	__u32		   capability;	 \/*  Supported modes *\/$/;"	m	struct:v4l2_outputparm
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audio
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_audioout
capability	videodev2.h	/^	__u32	capability;$/;"	m	struct:v4l2_frequency_band
caps	dvb_frontend.h	/^	enum fe_caps caps;$/;"	m	struct:dvb_frontend_internal_info	typeref:enum:dvb_frontend_internal_info::fe_caps
capture	videodev2.h	/^		struct v4l2_captureparm	capture;$/;"	m	union:v4l2_streamparm::__anon68	typeref:struct:v4l2_streamparm::__anon68::v4l2_captureparm
capturemode	videodev2.h	/^	__u32		   capturemode;	  \/*  Current mode *\/$/;"	m	struct:v4l2_captureparm
card	media.h	/^			__u32 card;$/;"	m	struct:media_entity_desc::__anon20::__anon22
card	videodev2.h	/^	__u8	card[32];$/;"	m	struct:v4l2_capability
card_device	mod_devicetable.h	/^	unsigned short card_vendor, card_device;$/;"	m	struct:isapnp_device_id
card_id	mod_devicetable.h	/^	__u16 		card_id;$/;"	m	struct:pcmcia_device_id
card_vendor	mod_devicetable.h	/^	unsigned short card_vendor, card_device;$/;"	m	struct:isapnp_device_id
carrier	rc-core.h	/^		u32             carrier;$/;"	m	union:ir_raw_event::__anon31
carrier_freq	v4l2-subdev.h	/^	unsigned int carrier_freq;$/;"	m	struct:v4l2_subdev_ir_parameters
carrier_low	rc-core.h	/^	int				carrier_low;$/;"	m	struct:lirc_fh
carrier_range_lower	v4l2-subdev.h	/^	unsigned int carrier_range_lower;$/;"	m	struct:v4l2_subdev_ir_parameters
carrier_range_upper	v4l2-subdev.h	/^	unsigned int carrier_range_upper;$/;"	m	struct:v4l2_subdev_ir_parameters
carrier_report	rc-core.h	/^	unsigned                carrier_report:1;$/;"	m	struct:ir_raw_event
cb	dvb_demux.h	/^	} cb;$/;"	m	struct:dvb_demux_feed	typeref:union:dvb_demux_feed::__anon6
cb	tuner-types.h	/^	unsigned char cb;$/;"	m	struct:tuner_range
cb_first_if_lower_freq	tuner-types.h	/^	unsigned int cb_first_if_lower_freq:1;$/;"	m	struct:tuner_params
cc	dvb_demux.h	/^	int cc;$/;"	m	struct:dvb_demux_feed
ccw_device_id	mod_devicetable.h	/^struct ccw_device_id {$/;"	s
cdev	cec.h	/^	struct cdev cdev;$/;"	m	struct:cec_devnode	typeref:struct:cec_devnode::cdev
cdev	i2c-dev.c	/^	struct cdev cdev;$/;"	m	struct:i2c_dev	typeref:struct:i2c_dev::cdev	file:
cdev	media-devnode.h	/^	struct cdev cdev;		\/* character device *\/$/;"	m	struct:media_devnode	typeref:struct:media_devnode::cdev
cdev	v4l2-dev.h	/^	struct cdev *cdev;$/;"	m	struct:video_device	typeref:struct:video_device::cdev
cea861_vic	videodev2.h	/^	__u8	cea861_vic;$/;"	m	struct:v4l2_bt_timings
cec_adap_ops	cec.h	/^struct cec_adap_ops {$/;"	s
cec_adapter	cec.h	/^struct cec_adapter {$/;"	s
cec_data	cec.h	/^struct cec_data {$/;"	s
cec_delete_adapter	cec.h	/^static inline void cec_delete_adapter(struct cec_adapter *adap)$/;"	f
cec_devnode	cec.h	/^struct cec_devnode {$/;"	s
cec_dir	cec.h	/^	struct dentry *cec_dir;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::dentry
cec_event_entry	cec.h	/^struct cec_event_entry {$/;"	s
cec_fh	cec.h	/^struct cec_fh {$/;"	s
cec_follower	cec.h	/^	struct cec_fh *cec_follower;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_fh
cec_get_drvdata	cec.h	/^static inline void *cec_get_drvdata(const struct cec_adapter *adap)$/;"	f
cec_get_edid_phys_addr	cec.h	/^static inline u16 cec_get_edid_phys_addr(const u8 *edid, unsigned int size,$/;"	f
cec_get_edid_spa_location	cec.h	/^static inline unsigned int cec_get_edid_spa_location(const u8 *edid,$/;"	f
cec_has_log_addr	cec.h	/^static inline bool cec_has_log_addr(const struct cec_adapter *adap, u8 log_addr)$/;"	f
cec_initiator	cec.h	/^	struct cec_fh *cec_initiator;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_fh
cec_is_registered	cec.h	/^static inline bool cec_is_registered(const struct cec_adapter *adap)$/;"	f
cec_is_sink	cec.h	/^static inline bool cec_is_sink(const struct cec_adapter *adap)$/;"	f
cec_msg_entry	cec.h	/^struct cec_msg_entry {$/;"	s
cec_notifier_get	cec-notifier.h	/^static inline struct cec_notifier *cec_notifier_get(struct device *dev)$/;"	f
cec_notifier_get_conn	cec-notifier.h	/^static inline struct cec_notifier *cec_notifier_get_conn(struct device *dev,$/;"	f
cec_notifier_phys_addr_invalidate	cec-notifier.h	/^static inline void cec_notifier_phys_addr_invalidate(struct cec_notifier *n)$/;"	f
cec_notifier_put	cec-notifier.h	/^static inline void cec_notifier_put(struct cec_notifier *n)$/;"	f
cec_notifier_register	cec-notifier.h	/^static inline void cec_notifier_register(struct cec_notifier *n,$/;"	f
cec_notifier_set_phys_addr	cec-notifier.h	/^static inline void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa)$/;"	f
cec_notifier_set_phys_addr_from_edid	cec-notifier.h	/^static inline void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,$/;"	f
cec_notifier_unregister	cec-notifier.h	/^static inline void cec_notifier_unregister(struct cec_notifier *n)$/;"	f
cec_phys_addr_exp	cec.h	234;"	d
cec_phys_addr_invalidate	cec.h	/^static inline void cec_phys_addr_invalidate(struct cec_adapter *adap)$/;"	f
cec_pin_is_high	cec.h	/^	bool cec_pin_is_high;$/;"	m	struct:cec_adapter
cec_pin_ops	cec-pin.h	/^struct cec_pin_ops {$/;"	s
cec_received_msg	cec.h	/^static inline void cec_received_msg(struct cec_adapter *adap,$/;"	f
cec_register_adapter	cec.h	/^static inline int cec_register_adapter(struct cec_adapter *adap,$/;"	f
cec_register_cec_notifier	cec-notifier.h	/^static inline void cec_register_cec_notifier(struct cec_adapter *adap,$/;"	f
cec_s_phys_addr	cec.h	/^static inline void cec_s_phys_addr(struct cec_adapter *adap, u16 phys_addr,$/;"	f
cec_s_phys_addr_from_edid	cec.h	/^static inline void cec_s_phys_addr_from_edid(struct cec_adapter *adap,$/;"	f
cec_transmit_attempt_done	cec.h	/^static inline void cec_transmit_attempt_done(struct cec_adapter *adap,$/;"	f
cec_transmit_done	cec.h	/^static inline void cec_transmit_done(struct cec_adapter *adap, u8 status,$/;"	f
cec_unregister_adapter	cec.h	/^static inline void cec_unregister_adapter(struct cec_adapter *adap)$/;"	f
chan_id	i2c-mux.c	/^	u32 chan_id;$/;"	m	struct:i2c_mux_priv	file:
change_protocol	rc-core.h	/^	int				(*change_protocol)(struct rc_dev *dev, u64 *rc_proto);$/;"	m	struct:rc_dev
changes	videodev2.h	/^	__u32 changes;$/;"	m	struct:v4l2_event_ctrl
changes	videodev2.h	/^	__u32 changes;$/;"	m	struct:v4l2_event_src_change
check_array_args	v4l2-ioctl.c	/^static int check_array_args(unsigned int cmd, void *parg, size_t *array_size,$/;"	f	file:
check_crc	demux.h	/^	int check_crc;$/;"	m	struct:dmx_section_feed
check_crc32	dvb_demux.h	/^	u32 (*check_crc32)(struct dvb_demux_feed *feed,$/;"	m	struct:dvb_demux
check_crop	v4l2-subdev.c	/^static int check_crop(struct v4l2_subdev *sd, struct v4l2_subdev_crop *crop)$/;"	f	file:
check_edid	v4l2-subdev.c	/^static int check_edid(struct v4l2_subdev *sd, struct v4l2_subdev_edid *edid)$/;"	f	file:
check_ext_ctrls	v4l2-ioctl.c	/^static int check_ext_ctrls(struct v4l2_ext_controls *c, int allow_priv)$/;"	f	file:
check_fmt	v4l2-ioctl.c	/^static int check_fmt(struct file *file, enum v4l2_buf_type type)$/;"	f	file:
check_format	v4l2-subdev.c	/^static int check_format(struct v4l2_subdev *sd,$/;"	f	file:
check_mode	tuner-core.c	/^static inline int check_mode(struct tuner *t, enum v4l2_tuner_type mode)$/;"	f	file:
check_range	v4l2-ctrls.c	/^static int check_range(enum v4l2_ctrl_type type,$/;"	f	file:
check_selection	v4l2-subdev.c	/^static int check_selection(struct v4l2_subdev *sd,$/;"	f	file:
child_count	pm.h	/^	atomic_t		child_count;$/;"	m	struct:dev_pm_info
chip	driver.h	/^	struct irq_chip *chip;$/;"	m	struct:gpio_irq_chip	typeref:struct:gpio_irq_chip::irq_chip
chip	i2c-algo-pca.h	/^	unsigned int			chip;$/;"	m	struct:i2c_algo_pca_data
chip_hwnum	machine.h	/^	u16 chip_hwnum;$/;"	m	struct:gpiod_hog
chip_hwnum	machine.h	/^	u16 chip_hwnum;$/;"	m	struct:gpiod_lookup
chip_label	machine.h	/^	const char *chip_label;$/;"	m	struct:gpiod_hog
chip_label	machine.h	/^	const char *chip_label;$/;"	m	struct:gpiod_lookup
chromakey	v4l2-compat-ioctl32.c	/^	__u32			chromakey;$/;"	m	struct:v4l2_window32	file:
chromakey	videodev2.h	/^	__u32			chromakey;$/;"	m	struct:v4l2_window
cid	v4l2-flash-led-class.h	/^	u32 cid;$/;"	m	struct:v4l2_flash_ctrl_data
cisfile	mod_devicetable.h	/^	char *		cisfile;$/;"	m	struct:pcmcia_device_id
clamp	kernel.h	923;"	d
clamp_align	v4l2-common.c	/^static unsigned int clamp_align(unsigned int x, unsigned int min,$/;"	f	file:
clamp_t	kernel.h	958;"	d
clamp_val	kernel.h	971;"	d
class_attribute	device.h	/^struct class_attribute {$/;"	s
class_attribute_string	device.h	/^struct class_attribute_string {$/;"	s
class_check	v4l2-ctrls.c	/^static int class_check(struct v4l2_ctrl_handler *hdl, u32 which)$/;"	f	file:
class_create	device.h	537;"	d
class_create_file	device.h	/^static inline int __must_check class_create_file(struct class *class,$/;"	f
class_dev_iter	device.h	/^struct class_dev_iter {$/;"	s
class_groups	device.h	/^	const struct attribute_group	**class_groups;$/;"	m	class:__anon1	typeref:struct:__anon1::attribute_group
class_interface	device.h	/^struct class_interface {$/;"	s
class_mask	mod_devicetable.h	/^	__u32 class, class_mask;	\/* (class,subclass,prog-if) triplet *\/$/;"	m	struct:pci_device_id	typeref:class:pci_device_id::
class_register	device.h	441;"	d
class_release	device.h	/^	void (*class_release)(struct class *class);$/;"	m	class:__anon1
class_remove_file	device.h	/^static inline void class_remove_file(struct class *class,$/;"	f
cleanup_thread	ffs-test.c	/^static void cleanup_thread(void *arg)$/;"	f	file:
clients	i2c.h	/^	struct list_head clients;$/;"	m	struct:i2c_driver	typeref:struct:i2c_driver::list_head
clipcount	v4l2-compat-ioctl32.c	/^	__u32			clipcount;$/;"	m	struct:v4l2_window32	file:
clipcount	videodev2.h	/^	__u32			clipcount;$/;"	m	struct:v4l2_window
clips	v4l2-compat-ioctl32.c	/^	compat_caddr_t		clips; \/* actually struct v4l2_clip32 * *\/$/;"	m	struct:v4l2_window32	file:
clips	videodev2.h	/^	struct v4l2_clip	__user *clips;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::__user
clk	clk-provider.h	/^	struct clk *clk;$/;"	m	struct:clk_hw	typeref:struct:clk_hw::clk
clk	clk.h	/^	struct clk			*clk;$/;"	m	struct:clk_notifier	typeref:struct:clk_notifier::clk
clk	clk.h	/^	struct clk		*clk;$/;"	m	struct:clk_bulk_data	typeref:struct:clk_bulk_data::clk
clk	clk.h	/^	struct clk		*clk;$/;"	m	struct:clk_notifier_data	typeref:struct:clk_notifier_data::clk
clk	clkdev.h	/^	struct clk		*clk;$/;"	m	struct:clk_lookup	typeref:struct:clk_lookup::clk
clk	soc_camera.h	/^	struct v4l2_clk *clk;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::v4l2_clk
clk	v4l2-clk.h	/^	struct clk *clk;$/;"	m	struct:v4l2_clk	typeref:struct:v4l2_clk::clk
clk_bulk_data	clk.h	/^struct clk_bulk_data {$/;"	s
clk_bulk_disable	clk.h	/^static inline void clk_bulk_disable(int num_clks,$/;"	f
clk_bulk_disable_unprepare	clk.h	/^static inline void clk_bulk_disable_unprepare(int num_clks,$/;"	f
clk_bulk_enable	clk.h	/^static inline int __must_check clk_bulk_enable(int num_clks, struct clk_bulk_data *clks)$/;"	f
clk_bulk_get	clk.h	/^static inline int __must_check clk_bulk_get(struct device *dev, int num_clks,$/;"	f
clk_bulk_prepare	clk.h	/^static inline int __must_check clk_bulk_prepare(int num_clks, struct clk_bulk_data *clks)$/;"	f
clk_bulk_prepare_enable	clk.h	/^static inline int __must_check clk_bulk_prepare_enable(int num_clks,$/;"	f
clk_bulk_put	clk.h	/^static inline void clk_bulk_put(int num_clks, struct clk_bulk_data *clks) {}$/;"	f
clk_bulk_unprepare	clk.h	/^static inline void clk_bulk_unprepare(int num_clks, struct clk_bulk_data *clks)$/;"	f
clk_composite	clk-provider.h	/^struct clk_composite {$/;"	s
clk_disable	clk.h	/^static inline void clk_disable(struct clk *clk) {}$/;"	f
clk_disable_unprepare	clk.h	/^static inline void clk_disable_unprepare(struct clk *clk)$/;"	f
clk_div_mask	clk-provider.h	429;"	d
clk_div_table	clk-provider.h	/^struct clk_div_table {$/;"	s
clk_divider	clk-provider.h	/^struct clk_divider {$/;"	s
clk_duty	clk-provider.h	/^struct clk_duty {$/;"	s
clk_enable	clk.h	/^static inline int clk_enable(struct clk *clk)$/;"	f
clk_fixed_factor	clk-provider.h	/^struct clk_fixed_factor {$/;"	s
clk_fixed_rate	clk-provider.h	/^struct clk_fixed_rate {$/;"	s
clk_fractional_divider	clk-provider.h	/^struct clk_fractional_divider {$/;"	s
clk_gate	clk-provider.h	/^struct clk_gate {$/;"	s
clk_get	clk.h	/^static inline struct clk *clk_get(struct device *dev, const char *id)$/;"	f
clk_get_accuracy	clk.h	/^static inline long clk_get_accuracy(struct clk *clk)$/;"	f
clk_get_parent	clk.h	/^static inline struct clk *clk_get_parent(struct clk *clk)$/;"	f
clk_get_phase	clk.h	/^static inline long clk_get_phase(struct clk *clk)$/;"	f
clk_get_rate	clk.h	/^static inline unsigned long clk_get_rate(struct clk *clk)$/;"	f
clk_get_scaled_duty_cycle	clk.h	/^static inline unsigned int clk_get_scaled_duty_cycle(struct clk *clk,$/;"	f
clk_get_sys	clk.h	/^static inline struct clk *clk_get_sys(const char *dev_id, const char *con_id)$/;"	f
clk_gpio	clk-provider.h	/^struct clk_gpio {$/;"	s
clk_has_parent	clk.h	/^static inline bool clk_has_parent(struct clk *clk, struct clk *parent)$/;"	f
clk_hw	clk-provider.h	/^struct clk_hw {$/;"	s
clk_hw	clkdev.h	/^	struct clk_hw		*clk_hw;$/;"	m	struct:clk_lookup	typeref:struct:clk_lookup::clk_hw
clk_hw_can_set_rate_parent	clk-provider.h	785;"	d
clk_hw_onecell_data	clk-provider.h	/^struct clk_hw_onecell_data {$/;"	s
clk_init_data	clk-provider.h	/^struct clk_init_data {$/;"	s
clk_is_match	clk.h	/^static inline bool clk_is_match(const struct clk *p, const struct clk *q)$/;"	f
clk_lock	soc_camera.h	/^	struct mutex clk_lock;		\/* Protect pipeline modifications *\/$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::mutex
clk_lookup	clkdev.h	/^struct clk_lookup {$/;"	s
clk_multiplier	clk-provider.h	/^struct clk_multiplier {$/;"	s
clk_mux	clk-provider.h	/^struct clk_mux {$/;"	s
clk_notifier	clk.h	/^struct clk_notifier {$/;"	s
clk_notifier_data	clk.h	/^struct clk_notifier_data {$/;"	s
clk_notifier_register	clk.h	/^static inline int clk_notifier_register(struct clk *clk,$/;"	f
clk_notifier_unregister	clk.h	/^static inline int clk_notifier_unregister(struct clk *clk,$/;"	f
clk_num	clk-provider.h	/^	unsigned int clk_num;$/;"	m	struct:clk_onecell_data
clk_onecell_data	clk-provider.h	/^struct clk_onecell_data {$/;"	s
clk_ops	clk-provider.h	/^struct clk_ops {$/;"	s
clk_prepare	clk.h	/^static inline int clk_prepare(struct clk *clk)$/;"	f
clk_prepare_enable	clk.h	/^static inline int clk_prepare_enable(struct clk *clk)$/;"	f
clk_put	clk.h	/^static inline void clk_put(struct clk *clk) {}$/;"	f
clk_rate_exclusive_get	clk.h	/^static inline int clk_rate_exclusive_get(struct clk *clk)$/;"	f
clk_rate_exclusive_put	clk.h	/^static inline void clk_rate_exclusive_put(struct clk *clk) {}$/;"	f
clk_rate_request	clk-provider.h	/^struct clk_rate_request {$/;"	s
clk_readl	clk-provider.h	/^static inline u32 clk_readl(u32 __iomem *reg)$/;"	f
clk_round_rate	clk.h	/^static inline long clk_round_rate(struct clk *clk, unsigned long rate)$/;"	f
clk_set_duty_cycle	clk.h	/^static inline int clk_set_duty_cycle(struct clk *clk, unsigned int num,$/;"	f
clk_set_parent	clk.h	/^static inline int clk_set_parent(struct clk *clk, struct clk *parent)$/;"	f
clk_set_phase	clk.h	/^static inline long clk_set_phase(struct clk *clk, int phase)$/;"	f
clk_set_rate	clk.h	/^static inline int clk_set_rate(struct clk *clk, unsigned long rate)$/;"	f
clk_set_rate_exclusive	clk.h	/^static inline int clk_set_rate_exclusive(struct clk *clk, unsigned long rate)$/;"	f
clk_unprepare	clk.h	/^static inline void clk_unprepare(struct clk *clk)$/;"	f
clk_writel	clk-provider.h	/^static inline void clk_writel(u32 val, u32 __iomem *reg)$/;"	f
clks	clk-provider.h	/^	struct clk **clks;$/;"	m	struct:clk_onecell_data	typeref:struct:clk_onecell_data::clk
clock_inv	v4l2-fwnode.h	/^	bool clock_inv;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi1
clock_lane	v4l2-fwnode.h	/^	unsigned char clock_lane;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi1
clock_lane	v4l2-fwnode.h	/^	unsigned char clock_lane;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi2
clock_list	pm.h	/^	struct list_head clock_list;$/;"	m	struct:pm_subsys_data	typeref:struct:pm_subsys_data::list_head
clock_start	soc_camera.h	/^	int (*clock_start)(struct soc_camera_host *);$/;"	m	struct:soc_camera_host_ops
clock_state	soc_camera.h	/^	unsigned long clock_state;$/;"	m	struct:soc_camera_link
clock_state	soc_camera.h	/^	unsigned long clock_state;$/;"	m	struct:soc_camera_subdev_desc
clock_stop	soc_camera.h	/^	void (*clock_stop)(struct soc_camera_host *);$/;"	m	struct:soc_camera_host_ops
close	demux.h	/^	int (*close)(struct dmx_demux *demux);$/;"	m	struct:dmx_demux
close	rc-core.h	/^	void				(*close)(struct rc_dev *dev);$/;"	m	struct:rc_dev
close	v4l2-subdev.h	/^	int (*close)(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh);$/;"	m	struct:v4l2_subdev_internal_ops
cls	mod_devicetable.h	/^	__u32 cls;$/;"	m	struct:acpi_device_id
cls_msk	mod_devicetable.h	/^	__u32 cls_msk;$/;"	m	struct:acpi_device_id
cluster	v4l2-ctrls.h	/^	struct v4l2_ctrl **cluster;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::v4l2_ctrl
cluster_changed	v4l2-ctrls.c	/^static int cluster_changed(struct v4l2_ctrl *master)$/;"	f	file:
cma_area	device.h	/^	struct cma *cma_area;		\/* contiguous memory area for dma$/;"	m	struct:device	typeref:struct:device::cma
cmd	i2c-core-base.c	/^	unsigned	cmd;$/;"	m	struct:i2c_cmd_arg	file:
cmd	videodev2.h	/^	__u32 cmd;$/;"	m	struct:v4l2_decoder_cmd
cmd	videodev2.h	/^	__u32 cmd;$/;"	m	struct:v4l2_encoder_cmd
cnr	dvb_frontend.h	/^	struct dtv_fe_stats	cnr;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
cnt_buf_cleanup	videobuf2-core.h	/^	u32		cnt_buf_cleanup;$/;"	m	struct:vb2_buffer
cnt_buf_done	videobuf2-core.h	/^	u32		cnt_buf_done;$/;"	m	struct:vb2_buffer
cnt_buf_finish	videobuf2-core.h	/^	u32		cnt_buf_finish;$/;"	m	struct:vb2_buffer
cnt_buf_init	videobuf2-core.h	/^	u32		cnt_buf_init;$/;"	m	struct:vb2_buffer
cnt_buf_prepare	videobuf2-core.h	/^	u32		cnt_buf_prepare;$/;"	m	struct:vb2_buffer
cnt_buf_queue	videobuf2-core.h	/^	u32		cnt_buf_queue;$/;"	m	struct:vb2_buffer
cnt_mem_alloc	videobuf2-core.h	/^	u32		cnt_mem_alloc;$/;"	m	struct:vb2_buffer
cnt_mem_attach_dmabuf	videobuf2-core.h	/^	u32		cnt_mem_attach_dmabuf;$/;"	m	struct:vb2_buffer
cnt_mem_cookie	videobuf2-core.h	/^	u32		cnt_mem_cookie;$/;"	m	struct:vb2_buffer
cnt_mem_detach_dmabuf	videobuf2-core.h	/^	u32		cnt_mem_detach_dmabuf;$/;"	m	struct:vb2_buffer
cnt_mem_finish	videobuf2-core.h	/^	u32		cnt_mem_finish;$/;"	m	struct:vb2_buffer
cnt_mem_get_dmabuf	videobuf2-core.h	/^	u32		cnt_mem_get_dmabuf;$/;"	m	struct:vb2_buffer
cnt_mem_get_userptr	videobuf2-core.h	/^	u32		cnt_mem_get_userptr;$/;"	m	struct:vb2_buffer
cnt_mem_map_dmabuf	videobuf2-core.h	/^	u32		cnt_mem_map_dmabuf;$/;"	m	struct:vb2_buffer
cnt_mem_mmap	videobuf2-core.h	/^	u32		cnt_mem_mmap;$/;"	m	struct:vb2_buffer
cnt_mem_num_users	videobuf2-core.h	/^	u32		cnt_mem_num_users;$/;"	m	struct:vb2_buffer
cnt_mem_prepare	videobuf2-core.h	/^	u32		cnt_mem_prepare;$/;"	m	struct:vb2_buffer
cnt_mem_put	videobuf2-core.h	/^	u32		cnt_mem_put;$/;"	m	struct:vb2_buffer
cnt_mem_put_userptr	videobuf2-core.h	/^	u32		cnt_mem_put_userptr;$/;"	m	struct:vb2_buffer
cnt_mem_unmap_dmabuf	videobuf2-core.h	/^	u32		cnt_mem_unmap_dmabuf;$/;"	m	struct:vb2_buffer
cnt_mem_vaddr	videobuf2-core.h	/^	u32		cnt_mem_vaddr;$/;"	m	struct:vb2_buffer
cnt_queue_setup	videobuf2-core.h	/^	u32				cnt_queue_setup;$/;"	m	struct:vb2_queue
cnt_start_streaming	videobuf2-core.h	/^	u32				cnt_start_streaming;$/;"	m	struct:vb2_queue
cnt_stop_streaming	videobuf2-core.h	/^	u32				cnt_stop_streaming;$/;"	m	struct:vb2_queue
cnt_storage	dvb_demux.h	/^	uint8_t *cnt_storage; \/* for TS continuity check *\/$/;"	m	struct:dvb_demux
cnt_wait_finish	videobuf2-core.h	/^	u32				cnt_wait_finish;$/;"	m	struct:vb2_queue
cnt_wait_prepare	videobuf2-core.h	/^	u32				cnt_wait_prepare;$/;"	m	struct:vb2_queue
code	ffs-test.c	/^		__le16 code;$/;"	m	struct:__anon11::__anon12	file:
code	gpio_keys.h	/^	unsigned int code;$/;"	m	struct:gpio_keys_button
code	soc_camera.h	/^	u32 code;$/;"	m	struct:soc_camera_format_xlate
code_rate_HP	dvb_frontend.h	/^	enum fe_code_rate	code_rate_HP;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_code_rate
code_rate_LP	dvb_frontend.h	/^	enum fe_code_rate	code_rate_LP;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_code_rate
coherent_dma_mask	device.h	/^	u64		coherent_dma_mask;\/* Like dma_mask, but for$/;"	m	struct:device
color	devres.c	/^	int				color;$/;"	m	struct:devres_group	file:
colorspace	soc_camera.h	/^	enum v4l2_colorspace colorspace;$/;"	m	struct:soc_camera_device	typeref:enum:soc_camera_device::v4l2_colorspace
colorspace	v4l2-compat-ioctl32.c	/^		__u32		colorspace;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
colorspace	v4l2-dv-timings.h	/^	enum v4l2_colorspace colorspace;$/;"	m	struct:v4l2_hdmi_colorimetry	typeref:enum:v4l2_hdmi_colorimetry::v4l2_colorspace
colorspace	videodev2.h	/^		__u32		colorspace;	\/* enum v4l2_colorspace *\/$/;"	m	struct:v4l2_framebuffer::__anon53
colorspace	videodev2.h	/^	__u32				colorspace;$/;"	m	struct:v4l2_pix_format_mplane
colorspace	videodev2.h	/^	__u32			colorspace;	\/* enum v4l2_colorspace *\/$/;"	m	struct:v4l2_pix_format
command	i2c-dev.c	/^	u8 command;$/;"	m	struct:i2c_smbus_ioctl_data32	file:
command	i2c.h	/^	int (*command)(struct i2c_client *client, unsigned int cmd, void *arg);$/;"	m	struct:i2c_driver
compat	mod_devicetable.h	/^	char compat[32];$/;"	m	struct:vio_device_id
compat_i2cdev_ioctl	i2c-dev.c	/^static long compat_i2cdev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
compat_i2cdev_ioctl	i2c-dev.c	580;"	d	file:
compat_ioctl	media-devnode.h	/^	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);$/;"	m	struct:media_file_operations
compat_ioctl32	v4l2-dev.h	/^	long (*compat_ioctl32) (struct file *, unsigned int, unsigned long);$/;"	m	struct:v4l2_file_operations
compat_ioctl32	v4l2-subdev.h	/^	long (*compat_ioctl32)(struct v4l2_subdev *sd, unsigned int cmd,$/;"	m	struct:v4l2_subdev_core_ops
compatible	mod_devicetable.h	/^	char	compatible[128];$/;"	m	struct:of_device_id
complete	pm.h	/^	void (*complete)(struct device *dev);$/;"	m	struct:dev_pm_ops
complete	v4l2-async.h	/^	int (*complete)(struct v4l2_async_notifier *notifier);$/;"	m	struct:v4l2_async_notifier_operations
completed	cec.h	/^	bool completed;$/;"	m	struct:cec_data
completion	pm.h	/^	struct completion	completion;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::completion
con_id	clkdev.h	/^	const char		*con_id;$/;"	m	struct:clk_lookup
con_id	machine.h	/^	const char *con_id;$/;"	m	struct:gpiod_lookup
config	tuner-core.c	/^	void                *config;$/;"	m	struct:tuner	file:
config	tuner-types.h	/^	unsigned char config;$/;"	m	struct:tuner_range
config	tuner.h	/^	void		*config;$/;"	m	struct:tuner_setup
config	v4l2-flash-led-class.h	/^	struct v4l2_ctrl_config config;$/;"	m	struct:v4l2_flash_ctrl_data	typeref:struct:v4l2_flash_ctrl_data::v4l2_ctrl_config
config_completion	cec.h	/^	struct completion config_completion;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::completion
conn	dvbdev.h	/^	struct media_entity *conn;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::media_entity
conn_pads	dvbdev.h	/^	struct media_pad *conn_pads;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::media_pad
connect_frontend	demux.h	/^	int (*connect_frontend)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
connectivity_list	demux.h	/^	struct list_head connectivity_list;$/;"	m	struct:dmx_frontend	typeref:struct:dmx_frontend::list_head
console_initcall	module.h	126;"	d
consumer	consumer1.h	/^	struct regulator *consumer;$/;"	m	struct:regulator_bulk_data	typeref:struct:regulator_bulk_data::regulator
consumer	device.h	/^	struct device *consumer;$/;"	m	struct:device_link	typeref:struct:device_link::device
consumers	device.h	/^	struct list_head consumers;$/;"	m	struct:dev_links_info	typeref:struct:dev_links_info::list_head
container_of	kernel.h	996;"	d
container_of_safe	kernel.h	1011;"	d
control	soc_camera.h	/^	struct device *control;		\/* E.g., the i2c client *\/$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::device
controls	v4l2-compat-ioctl32.c	/^	compat_caddr_t controls; \/* actually struct v4l2_ext_control32 * *\/$/;"	m	struct:v4l2_ext_controls32	file:
controls	videodev2.h	/^	struct v4l2_ext_control *controls;$/;"	m	struct:v4l2_ext_controls	typeref:struct:v4l2_ext_controls::v4l2_ext_control
cookie	videobuf2-core.h	/^	void		*(*cookie)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
copy_timestamp	videobuf2-core.h	/^	unsigned int			copy_timestamp:1;$/;"	m	struct:vb2_queue
copy_timestamp	videobuf2-core.h	/^	void (*copy_timestamp)(struct vb2_buffer *vb, const void *pb);$/;"	m	struct:vb2_buf_ops
core	clk-provider.h	/^	struct clk_core *core;$/;"	m	struct:clk_hw	typeref:struct:clk_hw::clk_core
core	v4l2-subdev.h	/^	const struct v4l2_subdev_core_ops	*core;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_core_ops
core_events	cec.h	/^	struct cec_event_entry	core_events[CEC_NUM_CORE_EVENTS];$/;"	m	struct:cec_fh	typeref:struct:cec_fh::cec_event_entry
core_initcall	module.h	111;"	d
core_initcall_sync	module.h	112;"	d
core_kallsyms	module.h	/^	struct mod_kallsyms core_kallsyms;$/;"	m	struct:module	typeref:struct:module::mod_kallsyms
coredump	device.h	/^	void (*coredump) (struct device *dev);$/;"	m	struct:device_driver
coreid	mod_devicetable.h	/^	__u16	coreid;$/;"	m	struct:ssb_device_id
count	dvb_vb2.h	/^	u32	count;$/;"	m	struct:dvb_vb2_ctx
count	relocs.c	/^	unsigned long	count;$/;"	m	struct:relocs	file:
count	tuner-types.h	/^	unsigned int count;$/;"	m	struct:tuner_params
count	tuner-types.h	/^	unsigned int count;$/;"	m	struct:tunertype
count	v4l2-compat-ioctl32.c	/^	__u32			count;$/;"	m	struct:v4l2_create_buffers32	file:
count	v4l2-compat-ioctl32.c	/^	__u32 count;$/;"	m	struct:v4l2_ext_controls32	file:
count	videobuf-core.h	/^	unsigned int count;$/;"	m	struct:videobuf_mapping
count	videodev2.h	/^	__u32			count;$/;"	m	struct:v4l2_create_buffers
count	videodev2.h	/^	__u32			count;$/;"	m	struct:v4l2_requestbuffers
count	videodev2.h	/^	__u32	count[2];$/;"	m	struct:v4l2_vbi_format
count	videodev2.h	/^	__u32 count;$/;"	m	struct:v4l2_ext_controls
cpu_feature	mod_devicetable.h	/^struct cpu_feature {$/;"	s
cpu_to_be16	generic.h	96;"	d
cpu_to_be16	relocs.c	141;"	d	file:
cpu_to_be16	relocs.c	156;"	d	file:
cpu_to_be16p	generic.h	108;"	d
cpu_to_be16s	generic.h	120;"	d
cpu_to_be32	generic.h	94;"	d
cpu_to_be32	relocs.c	142;"	d	file:
cpu_to_be32	relocs.c	157;"	d	file:
cpu_to_be32_array	generic.h	/^static inline void cpu_to_be32_array(__be32 *dst, const u32 *src, size_t len)$/;"	f
cpu_to_be32p	generic.h	106;"	d
cpu_to_be32s	generic.h	118;"	d
cpu_to_be64	generic.h	92;"	d
cpu_to_be64	relocs.c	143;"	d	file:
cpu_to_be64	relocs.c	158;"	d	file:
cpu_to_be64p	generic.h	104;"	d
cpu_to_be64s	generic.h	116;"	d
cpu_to_elf32	relocs.c	/^static uint32_t cpu_to_elf32(uint32_t val)$/;"	f	file:
cpu_to_le16	ffs-test.c	54;"	d	file:
cpu_to_le16	ffs-test.c	57;"	d	file:
cpu_to_le16	generic.h	90;"	d
cpu_to_le16	relocs.c	138;"	d	file:
cpu_to_le16	relocs.c	153;"	d	file:
cpu_to_le16p	generic.h	102;"	d
cpu_to_le16s	generic.h	114;"	d
cpu_to_le32	ffs-test.c	55;"	d	file:
cpu_to_le32	ffs-test.c	58;"	d	file:
cpu_to_le32	generic.h	88;"	d
cpu_to_le32	relocs.c	139;"	d	file:
cpu_to_le32	relocs.c	154;"	d	file:
cpu_to_le32_array	generic.h	/^static inline void cpu_to_le32_array(u32 *buf, unsigned int words)$/;"	f
cpu_to_le32p	generic.h	100;"	d
cpu_to_le32s	generic.h	112;"	d
cpu_to_le64	generic.h	86;"	d
cpu_to_le64	relocs.c	140;"	d	file:
cpu_to_le64	relocs.c	155;"	d	file:
cpu_to_le64p	generic.h	98;"	d
cpu_to_le64s	generic.h	110;"	d
crc	module.h	/^	unsigned long crc;$/;"	m	struct:modversion_info
crc	vsp1.h	/^	struct vsp1_du_crc_config crc;$/;"	m	struct:vsp1_du_atomic_pipe_config	typeref:struct:vsp1_du_atomic_pipe_config::vsp1_du_crc_config
crc8	i2c-core-smbus.c	/^static u8 crc8(u16 data)$/;"	f	file:
crc_val	demux.h	/^	u32 crc_val;$/;"	m	struct:dmx_section_feed
crcs	module.h	/^	const s32 *crcs;$/;"	m	struct:module
crcs	module.h	/^	const s32 *crcs;$/;"	m	struct:symsearch
create_files	group.c	/^static int create_files(struct kernfs_node *parent, struct kobject *kobj,$/;"	f	file:
css_device_id	mod_devicetable.h	/^struct css_device_id {$/;"	s
ctors	module.h	/^	ctor_fn_t *ctors;$/;"	m	struct:module
ctrl	v4l2-ctrls.c	/^	struct v4l2_ctrl *ctrl;$/;"	m	struct:v4l2_ctrl_helper	typeref:struct:v4l2_ctrl_helper::v4l2_ctrl	file:
ctrl	v4l2-ctrls.h	/^	struct v4l2_ctrl *ctrl;$/;"	m	struct:v4l2_ctrl_ref	typeref:struct:v4l2_ctrl_ref::v4l2_ctrl
ctrl	videodev2.h	/^		struct v4l2_event_ctrl		ctrl;$/;"	m	union:v4l2_event::__anon70	typeref:struct:v4l2_event::__anon70::v4l2_event_ctrl
ctrl_class	videodev2.h	/^		__u32 ctrl_class;$/;"	m	union:v4l2_ext_controls::__anon57
ctrl_handler	imx219.c	/^	struct v4l2_ctrl_handler ctrl_handler;$/;"	m	struct:imx219	typeref:struct:imx219::v4l2_ctrl_handler	file:
ctrl_handler	imx258.c	/^	struct v4l2_ctrl_handler ctrl_handler;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_ctrl_handler	file:
ctrl_handler	soc_camera.h	/^	struct v4l2_ctrl_handler ctrl_handler;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::v4l2_ctrl_handler
ctrl_handler	v4l2-dev.h	/^	struct v4l2_ctrl_handler *ctrl_handler;$/;"	m	struct:video_device	typeref:struct:video_device::v4l2_ctrl_handler
ctrl_handler	v4l2-device.h	/^	struct v4l2_ctrl_handler *ctrl_handler;$/;"	m	struct:v4l2_device	typeref:struct:v4l2_device::v4l2_ctrl_handler
ctrl_handler	v4l2-fh.h	/^	struct v4l2_ctrl_handler *ctrl_handler;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::v4l2_ctrl_handler
ctrl_handler	v4l2-subdev.h	/^	struct v4l2_ctrl_handler *ctrl_handler;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_ctrl_handler
ctrl_init_data_id	v4l2-flash-led-class.c	/^enum ctrl_init_data_id {$/;"	g	file:
ctrl_is_pointer	v4l2-compat-ioctl32.c	/^static inline bool ctrl_is_pointer(struct file *file, u32 id)$/;"	f	file:
ctrl_refs	v4l2-ctrls.h	/^	struct list_head ctrl_refs;$/;"	m	struct:v4l2_ctrl_handler	typeref:struct:v4l2_ctrl_handler::list_head
ctrls	v4l2-ctrls.h	/^	struct list_head ctrls;$/;"	m	struct:v4l2_ctrl_handler	typeref:struct:v4l2_ctrl_handler::list_head
ctrls	v4l2-flash-led-class.h	/^	struct v4l2_ctrl **ctrls;$/;"	m	struct:v4l2_flash	typeref:struct:v4l2_flash::v4l2_ctrl
cu_model	mod_devicetable.h	/^	__u8	cu_model;	\/* control unit model    *\/$/;"	m	struct:ccw_device_id
cu_type	mod_devicetable.h	/^	__u16	cu_type;	\/* control unit type     *\/$/;"	m	struct:ccw_device_id
cur	v4l2-ctrls.h	/^	} cur;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::__anon45
cur_mode	imx258.c	/^	const struct imx258_mode *cur_mode;$/;"	m	struct:imx258	typeref:struct:imx258::imx258_mode	file:
cur_to_new	v4l2-ctrls.c	/^static void cur_to_new(struct v4l2_ctrl *ctrl)$/;"	f	file:
cur_to_user	v4l2-ctrls.c	/^static int cur_to_user(struct v4l2_ext_control *c,$/;"	f	file:
curr_ctx	v4l2-mem2mem.c	/^	struct v4l2_m2m_ctx	*curr_ctx;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::v4l2_m2m_ctx	file:
current_fmt	soc_camera.h	/^	const struct soc_camera_format_xlate *current_fmt;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::soc_camera_format_xlate
custom	v4l2-async.h	/^		} custom;$/;"	m	union:v4l2_async_subdev::__anon34	typeref:struct:v4l2_async_subdev::__anon34::__anon36
data	devres.c	/^	void *data;$/;"	m	struct:action_devres	file:
data	dvb_ca_en50221.h	/^	void *data;$/;"	m	struct:dvb_ca_en50221
data	dvb_ringbuffer.h	/^	u8               *data;$/;"	m	struct:dvb_ringbuffer
data	i2c-algo-bit.h	/^	void *data;		\/* private data for lowlevel routines *\/$/;"	m	struct:i2c_algo_bit_data
data	i2c-algo-pca.h	/^	void 				*data;	\/* private low level data *\/$/;"	m	struct:i2c_algo_pca_data
data	i2c-algo-pcf.h	/^	void *data;		\/* private data for lolevel routines	*\/$/;"	m	struct:i2c_algo_pcf_data
data	i2c-core-acpi.c	/^		u8	data[0];$/;"	m	union:gsb_buffer::__anon13	file:
data	i2c-dev.c	/^	compat_caddr_t data; \/* union i2c_smbus_data *data *\/$/;"	m	struct:i2c_smbus_ioctl_data32	file:
data	i2c-pxa.h	/^	void *data;$/;"	m	struct:i2c_slave_client
data	i2c-smbus.c	/^	unsigned int		data;$/;"	m	struct:alert_data	file:
data	mod_devicetable.h	/^	const void *data;$/;"	m	struct:of_device_id
data	mod_devicetable.h	/^	void			*data;$/;"	m	struct:amba_id
data	rc-core.h	/^	u32 data;$/;"	m	struct:rc_scancode_filter
data	v4l2-compat-ioctl32.c	/^		__u8			data[64];$/;"	m	union:v4l2_event32::__anon42	file:
data	videodev2.h	/^			__u32 data[16];$/;"	m	struct:v4l2_decoder_cmd::__anon61::__anon64
data	videodev2.h	/^			__u32 data[8];$/;"	m	struct:v4l2_encoder_cmd::__anon59::__anon60
data	videodev2.h	/^		__u8				data[64];$/;"	m	union:v4l2_event::__anon70
data	videodev2.h	/^	__u8    data[48];$/;"	m	struct:v4l2_sliced_vbi_data
data	videodev2.h	/^	__u8 data[42];	\/* Sliced VBI data for the line *\/$/;"	m	struct:v4l2_mpeg_vbi_itv0_line
data_lane	v4l2-fwnode.h	/^	unsigned char data_lane;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi1
data_lanes	v4l2-fwnode.h	/^	unsigned char data_lanes[V4L2_FWNODE_CSI2_MAX_DATA_LANES];$/;"	m	struct:v4l2_fwnode_bus_mipi_csi2
data_offset	v4l2-compat-ioctl32.c	/^	__u32			data_offset;$/;"	m	struct:v4l2_plane32	file:
data_offset	videobuf2-core.h	/^	unsigned int		data_offset;$/;"	m	struct:vb2_plane
data_offset	videodev2.h	/^	__u32			data_offset;$/;"	m	struct:v4l2_plane
data_shift	v4l2-fwnode.h	/^	unsigned char data_shift;$/;"	m	struct:v4l2_fwnode_bus_parallel
dataformat	videodev2.h	/^	__u32				dataformat;$/;"	m	struct:v4l2_meta_format
dbg_show	driver.h	/^	void			(*dbg_show)(struct seq_file *s,$/;"	m	struct:gpio_chip
dbuf	videobuf2-core.h	/^	struct dma_buf		*dbuf;$/;"	m	struct:vb2_plane	typeref:struct:vb2_plane::dma_buf
dbuf_mapped	videobuf2-core.h	/^	unsigned int		dbuf_mapped;$/;"	m	struct:vb2_plane
dead	base.h	/^	u8 dead:1;$/;"	m	struct:device_private
debounce_interval	gpio_keys.h	/^	int debounce_interval;$/;"	m	struct:gpio_keys_button
debug	ffs-test.c	112;"	d	file:
debug	v4l2-ioctl.c	/^	void (*debug)(const void *arg, bool write_only);$/;"	m	struct:v4l2_ioctl_info	file:
debug	v4l2-mem2mem.c	/^static bool debug;$/;"	v	file:
debug	videobuf-core.c	/^static int debug;$/;"	v	file:
debug	videobuf-dma-sg.c	/^static int debug;$/;"	v	file:
debug	videobuf-vmalloc.c	/^static int debug;$/;"	v	file:
debug_init	clk-provider.h	/^	void		(*debug_init)(struct clk_hw *hw, struct dentry *dentry);$/;"	m	struct:clk_ops
decode_vbi_line	v4l2-subdev.h	/^	int (*decode_vbi_line)(struct v4l2_subdev *sd, struct v4l2_decode_vbi_line *vbi_line);$/;"	m	struct:v4l2_subdev_vbi_ops
decoder_processor	tveeprom.h	/^	u32 decoder_processor;$/;"	m	struct:tveeprom
def	v4l2-ctrls.h	/^	s64 def;$/;"	m	struct:v4l2_ctrl_config
def_to_user	v4l2-ctrls.c	/^static int def_to_user(struct v4l2_ext_control *c, struct v4l2_ctrl *ctrl)$/;"	f	file:
default_pll_gating_18	tuner-types.h	/^	unsigned int default_pll_gating_18:1;$/;"	m	struct:tuner_params
default_top_high	tuner-types.h	/^	signed int default_top_high:5;$/;"	m	struct:tuner_params
default_top_low	tuner-types.h	/^	signed int default_top_low:5;$/;"	m	struct:tuner_params
default_top_mid	tuner-types.h	/^	signed int default_top_mid:5;$/;"	m	struct:tuner_params
default_top_secam_high	tuner-types.h	/^	signed int default_top_secam_high:5;$/;"	m	struct:tuner_params
default_top_secam_low	tuner-types.h	/^	signed int default_top_secam_low:5;$/;"	m	struct:tuner_params
default_top_secam_mid	tuner-types.h	/^	signed int default_top_secam_mid:5;$/;"	m	struct:tuner_params
default_type	driver.h	/^	unsigned int default_type;$/;"	m	struct:gpio_irq_chip
default_value	v4l2-ctrls.h	/^	s64 minimum, maximum, default_value;$/;"	m	struct:v4l2_ctrl
default_value	videodev2.h	/^	__s32		     default_value;$/;"	m	struct:v4l2_queryctrl
default_value	videodev2.h	/^	__s32 default_value;$/;"	m	struct:v4l2_event_ctrl
default_value	videodev2.h	/^	__s64		     default_value;$/;"	m	struct:v4l2_query_ext_ctrl
deferred_probe	base.h	/^	struct list_head deferred_probe;$/;"	m	struct:device_private	typeref:struct:device_private::list_head
deferred_resume	pm.h	/^	unsigned int		deferred_resume:1;$/;"	m	struct:dev_pm_info
defrect	videodev2.h	/^	struct v4l2_rect        defrect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_rect
del	v4l2-event.h	/^	void (*del)(struct v4l2_subscribed_event *sev);$/;"	m	struct:v4l2_subscribed_event_ops
del_device	soc_camera.h	/^	void (*del_device)(struct soc_camera_device *);$/;"	m	struct:soc_camera_host_desc
del_device	soc_camera.h	/^	void (*del_device)(struct soc_camera_device *);$/;"	m	struct:soc_camera_link
delivery_system	dvb_frontend.h	/^	enum fe_delivery_system	delivery_system;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_delivery_system
delsys	dvb_frontend.h	/^	u8 delsys[MAX_DELSYS];$/;"	m	struct:dvb_frontend_ops
demod_pad_index	v4l2-mc.h	/^enum demod_pad_index {$/;"	g
demodulator_priv	dvb_frontend.h	/^	void *demodulator_priv;$/;"	m	struct:dvb_frontend
demux	dmxdev.h	/^	struct dmx_demux *demux;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dmx_demux
demux	dvb_demux.h	/^	struct dvb_demux *demux;$/;"	m	struct:dvb_demux_feed	typeref:struct:dvb_demux_feed::dvb_demux
demux	dvb_net.h	/^	struct dmx_demux *demux;$/;"	m	struct:dvb_net	typeref:struct:dvb_net::dmx_demux
demux	videobuf2-dvb.h	/^	struct dvb_demux	demux;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::dvb_demux
den	clk-provider.h	/^	unsigned int den;$/;"	m	struct:clk_duty
denominator	videodev2.h	/^	__u32   denominator;$/;"	m	struct:v4l2_fract
dereference_module_function_descriptor	module.h	/^void *dereference_module_function_descriptor(struct module *mod, void *ptr)$/;"	f
desc	consumer.h	/^	struct gpio_desc *desc[];$/;"	m	struct:gpio_descs	typeref:struct:gpio_descs::gpio_desc
desc	gpio_keys.h	/^	const char *desc;$/;"	m	struct:gpio_keys_button
desc_to_gpio	consumer.h	/^static inline int desc_to_gpio(const struct gpio_desc *desc)$/;"	f
descr	v4l2-ioctl.c	/^	const char *descr;$/;"	m	struct:std_descr	file:
description	videodev2.h	/^	__u8		    description[32];   \/* Description string *\/$/;"	m	struct:v4l2_fmtdesc
descriptors	ffs-test.c	/^} __attribute__((packed)) descriptors = {$/;"	v	typeref:struct:__anon8	file:
descs_to_legacy	ffs-test.c	/^static size_t descs_to_legacy(void **legacy, const void *descriptors_v2)$/;"	f	file:
deselect	i2c-mux.h	/^	int (*deselect)(struct i2c_mux_core *, u32 chan_id);$/;"	m	struct:i2c_mux_core
detach	dvb_frontend.h	/^	void (*detach)(struct dvb_frontend *fe);$/;"	m	struct:dvb_frontend_ops
detach	pm.h	/^	void (*detach)(struct device *dev, bool power_off);$/;"	m	struct:dev_pm_domain
detach_dmabuf	videobuf2-core.h	/^	void		(*detach_dmabuf)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
detect	i2c.h	/^	int (*detect)(struct i2c_client *, struct i2c_board_info *);$/;"	m	struct:i2c_driver
detected	i2c.h	/^	struct list_head detected;$/;"	m	struct:i2c_client	typeref:struct:i2c_client::list_head
determine_rate	clk-provider.h	/^	int		(*determine_rate)(struct clk_hw *hw,$/;"	m	struct:clk_ops
determine_valid_ioctls	v4l2-dev.c	/^static void determine_valid_ioctls(struct video_device *vdev)$/;"	f	file:
dev	cec.h	/^	struct device dev;$/;"	m	struct:cec_devnode	typeref:struct:cec_devnode::device
dev	dmxdev.h	/^	struct dmxdev *dev;$/;"	m	struct:dmxdev_filter	typeref:struct:dmxdev_filter::dmxdev
dev	i2c-dev.c	/^	struct device *dev;$/;"	m	struct:i2c_dev	typeref:struct:i2c_dev::device	file:
dev	i2c-mux.h	/^	struct device *dev;$/;"	m	struct:i2c_mux_core	typeref:struct:i2c_mux_core::device
dev	i2c.h	/^	struct device dev;		\/* the adapter device *\/$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::device
dev	i2c.h	/^	struct device dev;		\/* the device structure		*\/$/;"	m	struct:i2c_client	typeref:struct:i2c_client::device
dev	media-device.h	/^	struct device *dev;$/;"	m	struct:media_device	typeref:struct:media_device::device
dev	media-devnode.h	/^	struct device dev;		\/* media device *\/$/;"	m	struct:media_devnode	typeref:struct:media_devnode::device
dev	media-entity.h	/^		} dev;$/;"	m	union:media_entity::__anon18	typeref:struct:media_entity::__anon18::__anon19
dev	media.h	/^		} dev;$/;"	m	union:media_entity_desc::__anon20	typeref:struct:media_entity_desc::__anon20::__anon21
dev	property.c	/^	struct device *dev;$/;"	m	struct:property_set	typeref:struct:property_set::device	file:
dev	rc-core.h	/^	struct device			dev;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::device
dev	v4l2-dev.h	/^	struct device dev;$/;"	m	struct:video_device	typeref:struct:video_device::device
dev	v4l2-device.h	/^	struct device *dev;$/;"	m	struct:v4l2_device	typeref:struct:v4l2_device::device
dev	v4l2-subdev.h	/^	struct device *dev;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::device
dev	videobuf-core.h	/^	struct device		   *dev;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::device
dev	videobuf-dma-sg.h	/^	struct device       *dev;$/;"	m	struct:videobuf_dmabuf	typeref:struct:videobuf_dmabuf::device
dev	videobuf2-core.h	/^	struct device			*dev;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::device
dev_WARN	device.h	1567;"	d
dev_WARN_ONCE	device.h	1570;"	d
dev_alert	device.h	1440;"	d
dev_alert_once	device.h	1485;"	d
dev_alert_ratelimited	device.h	1511;"	d
dev_archdata	device1.h	/^struct dev_archdata {$/;"	s
dev_crit	device.h	1438;"	d
dev_crit_once	device.h	1487;"	d
dev_crit_ratelimited	device.h	1513;"	d
dev_dbg	device.h	1452;"	d
dev_dbg	device.h	1455;"	d
dev_dbg	device.h	1458;"	d
dev_dbg_lvl	v4l2-common.h	59;"	d
dev_dbg_once	device.h	1497;"	d
dev_dbg_ratelimited	device.h	1525;"	d
dev_dbg_ratelimited	device.h	1537;"	d
dev_dbg_ratelimited	device.h	1546;"	d
dev_debug	v4l2-dev.h	/^	int dev_debug;$/;"	m	struct:video_device
dev_debug_show	v4l2-dev.c	/^static ssize_t dev_debug_show(struct device *cd,$/;"	f	file:
dev_debug_store	v4l2-dev.c	/^static ssize_t dev_debug_store(struct device *cd, struct device_attribute *attr,$/;"	f	file:
dev_dma_attr	property.h	/^enum dev_dma_attr {$/;"	g
dev_emerg	device.h	1436;"	d
dev_emerg_once	device.h	1483;"	d
dev_emerg_ratelimited	device.h	1509;"	d
dev_err	device.h	1442;"	d
dev_err_once	device.h	1489;"	d
dev_err_ratelimited	device.h	1515;"	d
dev_ext_attribute	device.h	/^struct dev_ext_attribute {$/;"	s
dev_fmt	device.h	1360;"	d
dev_fwnode	property.c	/^EXPORT_SYMBOL_GPL(dev_fwnode);$/;"	v
dev_fwnode	property.c	/^struct fwnode_handle *dev_fwnode(struct device *dev)$/;"	f
dev_get_drvdata	device.h	/^static inline void *dev_get_drvdata(const struct device *dev)$/;"	f
dev_get_msi_domain	device.h	/^static inline struct irq_domain *dev_get_msi_domain(const struct device *dev)$/;"	f
dev_get_platdata	device.h	/^static inline void *dev_get_platdata(const struct device *dev)$/;"	f
dev_get_uevent_suppress	device.h	/^static inline unsigned int dev_get_uevent_suppress(const struct device *dev)$/;"	f
dev_groups	device.h	/^	const struct attribute_group	**dev_groups;$/;"	m	class:__anon1	typeref:struct:__anon1::attribute_group
dev_groups	device.h	/^	const struct attribute_group **dev_groups;$/;"	m	struct:bus_type	typeref:struct:bus_type::attribute_group
dev_id	clkdev.h	/^	const char		*dev_id;$/;"	m	struct:clk_lookup
dev_id	machine.h	/^	const char *dev_id;$/;"	m	struct:gpiod_lookup_table
dev_id	v4l2-clk.h	/^	const char *dev_id;$/;"	m	struct:v4l2_clk
dev_index	mod_devicetable.h	/^	__u16 dev_index, instance;$/;"	m	struct:slim_device_id
dev_info	device.h	1448;"	d
dev_info_once	device.h	1495;"	d
dev_info_ratelimited	device.h	1521;"	d
dev_kobj	device.h	/^	struct kobject			*dev_kobj;$/;"	m	class:__anon1	typeref:struct:__anon1::kobject
dev_level_once	device.h	1466;"	d
dev_level_once	device.h	1476;"	d
dev_level_ratelimited	device.h	1500;"	d
dev_links_info	device.h	/^struct dev_links_info {$/;"	s
dev_model	mod_devicetable.h	/^	__u8	dev_model;	\/* device model          *\/$/;"	m	struct:ccw_device_id
dev_name	device.h	/^	const char		*dev_name;$/;"	m	struct:bus_type
dev_name	device.h	/^static inline const char *dev_name(const struct device *dev)$/;"	f
dev_name	i2c.h	/^	const char	*dev_name;$/;"	m	struct:i2c_board_info
dev_name	v4l2-flash-led-class.h	/^	char dev_name[32];$/;"	m	struct:v4l2_flash_config
dev_notice	device.h	1446;"	d
dev_notice_once	device.h	1493;"	d
dev_notice_ratelimited	device.h	1519;"	d
dev_num_vf	device.h	/^static inline int dev_num_vf(struct device *dev)$/;"	f
dev_of_node	device.h	/^static inline struct device_node *dev_of_node(struct device *dev)$/;"	f
dev_parent	v4l2-dev.h	/^	struct device *dev_parent;$/;"	m	struct:video_device	typeref:struct:video_device::device
dev_pm_domain	pm.h	/^struct dev_pm_domain {$/;"	s
dev_pm_info	pm.h	/^struct dev_pm_info {$/;"	s
dev_pm_ops	pm.h	/^struct dev_pm_ops {$/;"	s
dev_pm_set_driver_flags	device.h	/^static inline void dev_pm_set_driver_flags(struct device *dev, u32 flags)$/;"	f
dev_pm_syscore_device	device.h	/^static inline void dev_pm_syscore_device(struct device *dev, bool val)$/;"	f
dev_pm_test_driver_flags	device.h	/^static inline bool dev_pm_test_driver_flags(struct device *dev, u32 flags)$/;"	f
dev_printk	device.h	/^void dev_printk(const char *level, const struct device *dev,$/;"	f
dev_printk_emit	device.h	/^int dev_printk_emit(int level, const struct device *dev, const char *fmt, ...)$/;"	f
dev_priv	v4l2-subdev.h	/^	void *dev_priv;$/;"	m	struct:v4l2_subdev
dev_prop_type	property.h	/^enum dev_prop_type {$/;"	g
dev_release	device.h	/^	void (*dev_release)(struct device *dev);$/;"	m	class:__anon1
dev_released	i2c.h	/^	struct completion dev_released;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::completion
dev_root	device.h	/^	struct device		*dev_root;$/;"	m	struct:bus_type	typeref:struct:bus_type::device
dev_set_drvdata	device.h	/^static inline void dev_set_drvdata(struct device *dev, void *data)$/;"	f
dev_set_msi_domain	device.h	/^static inline void dev_set_msi_domain(struct device *dev, struct irq_domain *d)$/;"	f
dev_set_uevent_suppress	device.h	/^static inline void dev_set_uevent_suppress(struct device *dev, int val)$/;"	f
dev_to_node	device.h	/^static inline int dev_to_node(struct device *dev)$/;"	f
dev_to_psd	device.h	/^static inline struct pm_subsys_data *dev_to_psd(struct device *dev)$/;"	f
dev_type	mod_devicetable.h	/^	__u16	dev_type;	\/* device type           *\/$/;"	m	struct:ccw_device_id
dev_type	mod_devicetable.h	/^	__u8 dev_type;		\/* device type *\/$/;"	m	struct:ap_device_id
dev_uevent	device.h	/^	int (*dev_uevent)(struct device *dev, struct kobj_uevent_env *env);$/;"	m	class:__anon1
dev_vdbg	device.h	1554;"	d
dev_vdbg	device.h	1556;"	d
dev_vprintk_emit	device.h	/^int dev_vprintk_emit(int level, const struct device *dev,$/;"	f
dev_warn	device.h	1444;"	d
dev_warn_once	device.h	1491;"	d
dev_warn_ratelimited	device.h	1517;"	d
device	base.h	/^	struct device *device;$/;"	m	struct:device_private	typeref:struct:device_private::device
device	device.h	/^struct device {$/;"	s
device	dvb_net.h	/^	struct net_device *device[DVB_NET_DEVICES_MAX];$/;"	m	struct:dvb_net	typeref:struct:dvb_net::net_device
device	dvbdev.h	/^	struct device *device;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::device
device	media.h	/^			__u32 device;$/;"	m	struct:media_entity_desc::__anon20::__anon22
device	mod_devicetable.h	/^	__u16	device;			\/* Device ID or SDIO_ANY_ID *\/$/;"	m	struct:sdio_device_id
device	mod_devicetable.h	/^	__u16 device;$/;"	m	struct:mcb_device_id
device	mod_devicetable.h	/^	__u32 device;			\/* Device ID or IPACK_ANY_ID *\/$/;"	m	struct:ipack_device_id
device	mod_devicetable.h	/^	__u32 device;$/;"	m	struct:virtio_device_id
device	mod_devicetable.h	/^	__u32 vendor, device;		\/* Vendor and device ID or PCI_ANY_ID*\/$/;"	m	struct:pci_device_id
device_add_group	device.h	/^static inline int __must_check device_add_group(struct device *dev,$/;"	f
device_add_properties	property.c	/^EXPORT_SYMBOL_GPL(device_add_properties);$/;"	v
device_add_properties	property.c	/^int device_add_properties(struct device *dev,$/;"	f
device_async_suspend_enabled	device.h	/^static inline bool device_async_suspend_enabled(struct device *dev)$/;"	f
device_attribute	device.h	/^struct device_attribute {$/;"	s
device_caps	v4l2-dev.h	/^	u32 device_caps;$/;"	m	struct:video_device
device_caps	videodev2.h	/^	__u32	device_caps;$/;"	m	struct:v4l2_capability
device_connection	device.h	/^struct device_connection {$/;"	s
device_connections_add	device.h	/^static inline void device_connections_add(struct device_connection *cons)$/;"	f
device_connections_remove	device.h	/^static inline void device_connections_remove(struct device_connection *cons)$/;"	f
device_disable_async_suspend	device.h	/^static inline void device_disable_async_suspend(struct device *dev)$/;"	f
device_dma_parameters	device.h	/^struct device_dma_parameters {$/;"	s
device_dma_supported	property.c	/^EXPORT_SYMBOL_GPL(device_dma_supported);$/;"	v
device_dma_supported	property.c	/^bool device_dma_supported(struct device *dev)$/;"	f
device_driver	device.h	/^struct device_driver {$/;"	s
device_enable_async_suspend	device.h	/^static inline void device_enable_async_suspend(struct device *dev)$/;"	f
device_for_each_child_node	property.h	100;"	d
device_get_child_node_count	property.c	/^EXPORT_SYMBOL_GPL(device_get_child_node_count);$/;"	v
device_get_child_node_count	property.c	/^unsigned int device_get_child_node_count(struct device *dev)$/;"	f
device_get_dma_attr	property.c	/^EXPORT_SYMBOL_GPL(device_get_dma_attr);$/;"	v
device_get_dma_attr	property.c	/^enum dev_dma_attr device_get_dma_attr(struct device *dev)$/;"	f
device_get_mac_address	property.c	/^EXPORT_SYMBOL(device_get_mac_address);$/;"	v
device_get_mac_address	property.c	/^void *device_get_mac_address(struct device *dev, char *addr, int alen)$/;"	f
device_get_match_data	fwnode.h	/^	const void *(*device_get_match_data)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations
device_get_match_data	property.c	/^EXPORT_SYMBOL_GPL(device_get_match_data);$/;"	v
device_get_match_data	property.c	/^const void *device_get_match_data(struct device *dev)$/;"	f
device_get_named_child_node	property.c	/^EXPORT_SYMBOL_GPL(device_get_named_child_node);$/;"	v
device_get_named_child_node	property.c	/^struct fwnode_handle *device_get_named_child_node(struct device *dev,$/;"	f
device_get_next_child_node	property.c	/^EXPORT_SYMBOL_GPL(device_get_next_child_node);$/;"	v
device_get_next_child_node	property.c	/^struct fwnode_handle *device_get_next_child_node(struct device *dev,$/;"	f
device_get_phy_mode	property.c	/^EXPORT_SYMBOL_GPL(device_get_phy_mode);$/;"	v
device_get_phy_mode	property.c	/^int device_get_phy_mode(struct device *dev)$/;"	f
device_handle	i2c-core-acpi.c	/^	acpi_handle device_handle;$/;"	m	struct:i2c_acpi_lookup	file:
device_initcall	module.h	121;"	d
device_initcall_sync	module.h	122;"	d
device_insertion_sort_klist	bus.c	/^static void device_insertion_sort_klist(struct device *a, struct list_head *list,$/;"	f	file:
device_is_available	fwnode.h	/^	bool (*device_is_available)(const struct fwnode_handle *fwnode);$/;"	m	struct:fwnode_operations
device_is_registered	device.h	/^static inline int device_is_registered(struct device *dev)$/;"	f
device_link	device.h	/^struct device_link {$/;"	s
device_link_state	device.h	/^enum device_link_state {$/;"	g
device_list	dvbdev.h	/^	struct list_head device_list;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::list_head
device_lock	device.h	/^static inline void device_lock(struct device *dev)$/;"	f
device_lock_assert	device.h	/^static inline void device_lock_assert(struct device *dev)$/;"	f
device_lock_interruptible	device.h	/^static inline int device_lock_interruptible(struct device *dev)$/;"	f
device_name	cec.h	/^	char device_name[32];$/;"	m	struct:cec_adapter
device_name	rc-core.h	/^	const char			*device_name;$/;"	m	struct:rc_dev
device_name	v4l2-async.h	/^		const char *device_name;$/;"	m	union:v4l2_async_subdev::__anon34
device_no	mod_devicetable.h	/^	__u8  		device_no;$/;"	m	struct:pcmcia_device_id
device_pm_lock	pm.h	781;"	d
device_pm_unlock	pm.h	782;"	d
device_pm_wait_for_dev	pm.h	/^static inline int device_pm_wait_for_dev(struct device *a, struct device *b)$/;"	f
device_private	base.h	/^struct device_private {$/;"	s
device_property_match_string	property.c	/^EXPORT_SYMBOL_GPL(device_property_match_string);$/;"	v
device_property_match_string	property.c	/^int device_property_match_string(struct device *dev, const char *propname,$/;"	f
device_property_present	property.c	/^EXPORT_SYMBOL_GPL(device_property_present);$/;"	v
device_property_present	property.c	/^bool device_property_present(struct device *dev, const char *propname)$/;"	f
device_property_read_bool	property.h	/^static inline bool device_property_read_bool(struct device *dev,$/;"	f
device_property_read_string	property.c	/^EXPORT_SYMBOL_GPL(device_property_read_string);$/;"	v
device_property_read_string	property.c	/^int device_property_read_string(struct device *dev, const char *propname,$/;"	f
device_property_read_string_array	property.c	/^EXPORT_SYMBOL_GPL(device_property_read_string_array);$/;"	v
device_property_read_string_array	property.c	/^int device_property_read_string_array(struct device *dev, const char *propname,$/;"	f
device_property_read_u16	property.h	/^static inline int device_property_read_u16(struct device *dev,$/;"	f
device_property_read_u16_array	property.c	/^EXPORT_SYMBOL_GPL(device_property_read_u16_array);$/;"	v
device_property_read_u16_array	property.c	/^int device_property_read_u16_array(struct device *dev, const char *propname,$/;"	f
device_property_read_u32	property.h	/^static inline int device_property_read_u32(struct device *dev,$/;"	f
device_property_read_u32_array	property.c	/^EXPORT_SYMBOL_GPL(device_property_read_u32_array);$/;"	v
device_property_read_u32_array	property.c	/^int device_property_read_u32_array(struct device *dev, const char *propname,$/;"	f
device_property_read_u64	property.h	/^static inline int device_property_read_u64(struct device *dev,$/;"	f
device_property_read_u64_array	property.c	/^EXPORT_SYMBOL_GPL(device_property_read_u64_array);$/;"	v
device_property_read_u64_array	property.c	/^int device_property_read_u64_array(struct device *dev, const char *propname,$/;"	f
device_property_read_u8	property.h	/^static inline int device_property_read_u8(struct device *dev,$/;"	f
device_property_read_u8_array	property.c	/^EXPORT_SYMBOL_GPL(device_property_read_u8_array);$/;"	v
device_property_read_u8_array	property.c	/^int device_property_read_u8_array(struct device *dev, const char *propname,$/;"	f
device_remove_group	device.h	/^static inline void device_remove_group(struct device *dev,$/;"	f
device_remove_properties	property.c	/^EXPORT_SYMBOL_GPL(device_remove_properties);$/;"	v
device_remove_properties	property.c	/^void device_remove_properties(struct device *dev)$/;"	f
device_reprobe	bus.c	/^EXPORT_SYMBOL_GPL(device_reprobe);$/;"	v
device_reprobe	bus.c	/^int device_reprobe(struct device *dev)$/;"	f
device_run	v4l2-mem2mem.h	/^	void (*device_run)(void *priv);$/;"	m	struct:v4l2_m2m_ops
device_supports_offline	device.h	/^static inline bool device_supports_offline(struct device *dev)$/;"	f
device_trylock	device.h	/^static inline int device_trylock(struct device *dev)$/;"	f
device_type	device.h	/^struct device_type {$/;"	s
device_unlock	device.h	/^static inline void device_unlock(struct device *dev)$/;"	f
devices_kset	base.h	/^	struct kset *devices_kset;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::kset
devm_action_match	devres.c	/^static int devm_action_match(struct device *dev, void *res, void *p)$/;"	f	file:
devm_action_release	devres.c	/^static void devm_action_release(struct device *dev, void *res)$/;"	f	file:
devm_add_action	devres.c	/^EXPORT_SYMBOL_GPL(devm_add_action);$/;"	v
devm_add_action	devres.c	/^int devm_add_action(struct device *dev, void (*action)(void *), void *data)$/;"	f
devm_add_action_or_reset	device.h	/^static inline int devm_add_action_or_reset(struct device *dev,$/;"	f
devm_alloc_percpu	device.h	737;"	d
devm_clk_bulk_get	clk.h	/^static inline int __must_check devm_clk_bulk_get(struct device *dev, int num_clks,$/;"	f
devm_clk_get	clk.h	/^static inline struct clk *devm_clk_get(struct device *dev, const char *id)$/;"	f
devm_clk_put	clk.h	/^static inline void devm_clk_put(struct device *dev, struct clk *clk) {}$/;"	f
devm_free_pages	devres.c	/^EXPORT_SYMBOL_GPL(devm_free_pages);$/;"	v
devm_free_pages	devres.c	/^void devm_free_pages(struct device *dev, unsigned long addr)$/;"	f
devm_free_percpu	devres.c	/^EXPORT_SYMBOL_GPL(devm_free_percpu);$/;"	v
devm_free_percpu	devres.c	/^void devm_free_percpu(struct device *dev, void __percpu *pdata)$/;"	f
devm_fwnode_get_gpiod_from_child	consumer.h	/^struct gpio_desc *devm_fwnode_get_gpiod_from_child(struct device *dev,$/;"	f
devm_fwnode_get_index_gpiod_from_child	consumer.h	/^struct gpio_desc *devm_fwnode_get_index_gpiod_from_child(struct device *dev,$/;"	f
devm_get_clk_from_child	clk.h	/^static inline struct clk *devm_get_clk_from_child(struct device *dev,$/;"	f
devm_get_free_pages	devres.c	/^EXPORT_SYMBOL_GPL(devm_get_free_pages);$/;"	v
devm_get_free_pages	devres.c	/^unsigned long devm_get_free_pages(struct device *dev,$/;"	f
devm_gpio_free	gpio.h	/^static inline void devm_gpio_free(struct device *dev, unsigned int gpio)$/;"	f
devm_gpio_request	gpio.h	/^static inline int devm_gpio_request(struct device *dev, unsigned gpio,$/;"	f
devm_gpio_request_one	gpio.h	/^static inline int devm_gpio_request_one(struct device *dev, unsigned gpio,$/;"	f
devm_gpiod_get	consumer.h	/^devm_gpiod_get(struct device *dev,$/;"	f
devm_gpiod_get_array	consumer.h	/^devm_gpiod_get_array(struct device *dev, const char *con_id,$/;"	f
devm_gpiod_get_array_optional	consumer.h	/^devm_gpiod_get_array_optional(struct device *dev, const char *con_id,$/;"	f
devm_gpiod_get_from_of_node	consumer.h	/^struct gpio_desc *devm_gpiod_get_from_of_node(struct device *dev,$/;"	f
devm_gpiod_get_index	consumer.h	/^devm_gpiod_get_index(struct device *dev,$/;"	f
devm_gpiod_get_index_optional	consumer.h	/^devm_gpiod_get_index_optional(struct device *dev, const char *con_id,$/;"	f
devm_gpiod_get_optional	consumer.h	/^devm_gpiod_get_optional(struct device *dev, const char *con_id,$/;"	f
devm_gpiod_put	consumer.h	/^static inline void devm_gpiod_put(struct device *dev, struct gpio_desc *desc)$/;"	f
devm_gpiod_put_array	consumer.h	/^static inline void devm_gpiod_put_array(struct device *dev,$/;"	f
devm_kasprintf	devres.c	/^EXPORT_SYMBOL_GPL(devm_kasprintf);$/;"	v
devm_kasprintf	devres.c	/^char *devm_kasprintf(struct device *dev, gfp_t gfp, const char *fmt, ...)$/;"	f
devm_kcalloc	device.h	/^static inline void *devm_kcalloc(struct device *dev,$/;"	f
devm_kfree	devres.c	/^EXPORT_SYMBOL_GPL(devm_kfree);$/;"	v
devm_kfree	devres.c	/^void devm_kfree(struct device *dev, void *p)$/;"	f
devm_kmalloc	devres.c	/^EXPORT_SYMBOL_GPL(devm_kmalloc);$/;"	v
devm_kmalloc	devres.c	/^void * devm_kmalloc(struct device *dev, size_t size, gfp_t gfp)$/;"	f
devm_kmalloc_array	device.h	/^static inline void *devm_kmalloc_array(struct device *dev,$/;"	f
devm_kmalloc_match	devres.c	/^static int devm_kmalloc_match(struct device *dev, void *res, void *data)$/;"	f	file:
devm_kmalloc_release	devres.c	/^static void devm_kmalloc_release(struct device *dev, void *res)$/;"	f	file:
devm_kmemdup	devres.c	/^EXPORT_SYMBOL_GPL(devm_kmemdup);$/;"	v
devm_kmemdup	devres.c	/^void *devm_kmemdup(struct device *dev, const void *src, size_t len, gfp_t gfp)$/;"	f
devm_kstrdup	devres.c	/^EXPORT_SYMBOL_GPL(devm_kstrdup);$/;"	v
devm_kstrdup	devres.c	/^char *devm_kstrdup(struct device *dev, const char *s, gfp_t gfp)$/;"	f
devm_kvasprintf	devres.c	/^EXPORT_SYMBOL(devm_kvasprintf);$/;"	v
devm_kvasprintf	devres.c	/^char *devm_kvasprintf(struct device *dev, gfp_t gfp, const char *fmt,$/;"	f
devm_kzalloc	device.h	/^static inline void *devm_kzalloc(struct device *dev, size_t size, gfp_t gfp)$/;"	f
devm_of_clk_add_hw_provider	clk-provider.h	/^static inline int devm_of_clk_add_hw_provider(struct device *dev,$/;"	f
devm_of_clk_del_provider	clk-provider.h	/^static inline void devm_of_clk_del_provider(struct device *dev) {}$/;"	f
devm_pages_match	devres.c	/^static int devm_pages_match(struct device *dev, void *res, void *p)$/;"	f	file:
devm_pages_release	devres.c	/^static void devm_pages_release(struct device *dev, void *res)$/;"	f	file:
devm_percpu_match	devres.c	/^static int devm_percpu_match(struct device *dev, void *data, void *p)$/;"	f	file:
devm_percpu_release	devres.c	/^static void devm_percpu_release(struct device *dev, void *pdata)$/;"	f	file:
devm_regulator_bulk_get	consumer1.h	/^static inline int devm_regulator_bulk_get(struct device *dev, int num_consumers,$/;"	f
devm_regulator_bulk_register_supply_alias	consumer1.h	/^static inline int devm_regulator_bulk_register_supply_alias(struct device *dev,$/;"	f
devm_regulator_bulk_unregister_supply_alias	consumer1.h	/^static inline void devm_regulator_bulk_unregister_supply_alias($/;"	f
devm_regulator_get	consumer1.h	/^devm_regulator_get(struct device *dev, const char *id)$/;"	f
devm_regulator_get_optional	consumer1.h	/^devm_regulator_get_optional(struct device *dev, const char *id)$/;"	f
devm_regulator_put	consumer1.h	/^static inline void devm_regulator_put(struct regulator *regulator)$/;"	f
devm_regulator_register_notifier	consumer1.h	/^static inline int devm_regulator_register_notifier(struct regulator *regulator,$/;"	f
devm_regulator_register_supply_alias	consumer1.h	/^static inline int devm_regulator_register_supply_alias(struct device *dev,$/;"	f
devm_regulator_unregister_notifier	consumer1.h	/^static inline int devm_regulator_unregister_notifier(struct regulator *regulator,$/;"	f
devm_regulator_unregister_supply_alias	consumer1.h	/^static inline void devm_regulator_unregister_supply_alias(struct device *dev,$/;"	f
devm_remove_action	devres.c	/^EXPORT_SYMBOL_GPL(devm_remove_action);$/;"	v
devm_remove_action	devres.c	/^void devm_remove_action(struct device *dev, void (*action)(void *), void *data)$/;"	f
devnode	cec.h	/^	struct cec_devnode devnode;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_devnode
devnode	device.h	/^	char *(*devnode)(struct device *dev, umode_t *mode);$/;"	m	class:__anon1
devnode	device.h	/^	char *(*devnode)(struct device *dev, umode_t *mode,$/;"	m	struct:device_type
devnode	media-device.h	/^	struct media_devnode *devnode;$/;"	m	struct:media_device	typeref:struct:media_device::media_devnode
devnode	media.h	/^		struct media_v2_intf_devnode devnode;$/;"	m	union:media_v2_interface::__anon25	typeref:struct:media_v2_interface::__anon25::media_v2_intf_devnode
devnode	v4l2-subdev.h	/^	struct video_device *devnode;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::video_device
devnode_bits	v4l2-dev.c	/^static inline unsigned long *devnode_bits(enum vfl_devnode_type vfl_type)$/;"	f	file:
devnode_clear	v4l2-dev.c	/^static inline void devnode_clear(struct video_device *vdev)$/;"	f	file:
devnode_find	v4l2-dev.c	/^static inline int devnode_find(struct video_device *vdev, int from, int to)$/;"	f	file:
devnode_set	v4l2-dev.c	/^static inline void devnode_set(struct video_device *vdev)$/;"	f	file:
devnum	soc_camera.h	/^	unsigned char devnum;		\/* Device number per host *\/$/;"	m	struct:soc_camera_device
devres	devres.c	/^struct devres {$/;"	s	file:
devres_add	devres.c	/^EXPORT_SYMBOL_GPL(devres_add);$/;"	v
devres_add	devres.c	/^void devres_add(struct device *dev, void *res)$/;"	f
devres_alloc	device.h	/^static inline void *devres_alloc(dr_release_t release, size_t size, gfp_t gfp)$/;"	f
devres_alloc	device.h	632;"	d
devres_alloc_node	device.h	634;"	d
devres_alloc_node	devres.c	/^EXPORT_SYMBOL_GPL(devres_alloc_node);$/;"	v
devres_alloc_node	devres.c	/^void * devres_alloc_node(dr_release_t release, size_t size, gfp_t gfp, int nid)$/;"	f
devres_close_group	devres.c	/^EXPORT_SYMBOL_GPL(devres_close_group);$/;"	v
devres_close_group	devres.c	/^void devres_close_group(struct device *dev, void *id)$/;"	f
devres_destroy	devres.c	/^EXPORT_SYMBOL_GPL(devres_destroy);$/;"	v
devres_destroy	devres.c	/^int devres_destroy(struct device *dev, dr_release_t release,$/;"	f
devres_find	devres.c	/^EXPORT_SYMBOL_GPL(devres_find);$/;"	v
devres_find	devres.c	/^void * devres_find(struct device *dev, dr_release_t release,$/;"	f
devres_for_each_res	devres.c	/^EXPORT_SYMBOL_GPL(devres_for_each_res);$/;"	v
devres_for_each_res	devres.c	/^void devres_for_each_res(struct device *dev, dr_release_t release,$/;"	f
devres_free	devres.c	/^EXPORT_SYMBOL_GPL(devres_free);$/;"	v
devres_free	devres.c	/^void devres_free(void *res)$/;"	f
devres_get	devres.c	/^EXPORT_SYMBOL_GPL(devres_get);$/;"	v
devres_get	devres.c	/^void * devres_get(struct device *dev, void *new_res,$/;"	f
devres_group	devres.c	/^struct devres_group {$/;"	s	file:
devres_head	device.h	/^	struct list_head	devres_head;$/;"	m	struct:device	typeref:struct:device::list_head
devres_lock	device.h	/^	spinlock_t		devres_lock;$/;"	m	struct:device
devres_log	devres.c	/^static void devres_log(struct device *dev, struct devres_node *node,$/;"	f	file:
devres_log	devres.c	64;"	d	file:
devres_node	devres.c	/^struct devres_node {$/;"	s	file:
devres_open_group	devres.c	/^EXPORT_SYMBOL_GPL(devres_open_group);$/;"	v
devres_open_group	devres.c	/^void * devres_open_group(struct device *dev, void *id, gfp_t gfp)$/;"	f
devres_release	devres.c	/^EXPORT_SYMBOL_GPL(devres_release);$/;"	v
devres_release	devres.c	/^int devres_release(struct device *dev, dr_release_t release,$/;"	f
devres_release_all	devres.c	/^int devres_release_all(struct device *dev)$/;"	f
devres_release_group	devres.c	/^EXPORT_SYMBOL_GPL(devres_release_group);$/;"	v
devres_release_group	devres.c	/^int devres_release_group(struct device *dev, void *id)$/;"	f
devres_remove	devres.c	/^EXPORT_SYMBOL_GPL(devres_remove);$/;"	v
devres_remove	devres.c	/^void * devres_remove(struct device *dev, dr_release_t release,$/;"	f
devres_remove_group	devres.c	/^EXPORT_SYMBOL_GPL(devres_remove_group);$/;"	v
devres_remove_group	devres.c	/^void devres_remove_group(struct device *dev, void *id)$/;"	f
devs	mod_devicetable.h	/^	} devs[PNP_MAX_DEVICES];$/;"	m	struct:pnp_card_device_id	typeref:struct:pnp_card_device_id::__anon26
devt	device.h	/^	dev_t			devt;	\/* dev_t, creates the sysfs "dev" *\/$/;"	m	struct:device
devtmpfs_create_node	device.h	/^static inline int devtmpfs_create_node(struct device *dev) { return 0; }$/;"	f
devtmpfs_delete_node	device.h	/^static inline int devtmpfs_delete_node(struct device *dev) { return 0; }$/;"	f
devtmpfs_init	base.h	/^static inline int devtmpfs_init(void) { return 0; }$/;"	f
devtmpfs_mount	device.h	/^static inline int devtmpfs_mount(const char *mountpoint) { return 0; }$/;"	f
dflags	machine.h	/^	int dflags;$/;"	m	struct:gpiod_hog
did	mod_devicetable.h	/^	__u16 did, vid;$/;"	m	struct:rio_device_id
die	ffs-test.c	107;"	d	file:
die	relocs_main.c	/^void die(char *fmt, ...)$/;"	f
die_on	ffs-test.c	114;"	d	file:
die_revision	i2c.h	/^	u8 die_revision;$/;"	m	struct:i2c_device_identity
dims	v4l2-ctrls.h	/^	u32 dims[V4L2_CTRL_MAX_DIMS];$/;"	m	struct:v4l2_ctrl
dims	v4l2-ctrls.h	/^	u32 dims[V4L2_CTRL_MAX_DIMS];$/;"	m	struct:v4l2_ctrl_config
dims	videodev2.h	/^	__u32                dims[V4L2_CTRL_MAX_DIMS];$/;"	m	struct:v4l2_query_ext_ctrl
direct_complete	pm.h	/^	bool			direct_complete:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info
direction	videobuf-dma-sg.h	/^	int                 direction;$/;"	m	struct:videobuf_dmabuf
direction_input	driver.h	/^	int			(*direction_input)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
direction_output	driver.h	/^	int			(*direction_output)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
disable	clk-provider.h	/^	void		(*disable)(struct clk_hw *hw);$/;"	m	struct:clk_ops
disable	gpio_keys.h	/^	void (*disable)(struct device *dev);$/;"	m	struct:gpio_keys_platform_data
disable	v4l2-clk.h	/^	void		(*disable)(struct v4l2_clk *clk);$/;"	m	struct:v4l2_clk_ops
disable_depth	pm.h	/^	unsigned int		disable_depth:3;$/;"	m	struct:dev_pm_info
disable_i2c_core_irq_mapping	i2c.h	/^	bool disable_i2c_core_irq_mapping;$/;"	m	struct:i2c_driver
disable_irq	cec-pin.h	/^	void (*disable_irq)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
disable_source	media-device.h	/^	void (*disable_source)(struct media_entity *entity);$/;"	m	struct:media_device
disable_unused	clk-provider.h	/^	void		(*disable_unused)(struct clk_hw *hw);$/;"	m	struct:clk_ops
disconnect_frontend	demux.h	/^	int (*disconnect_frontend)(struct dmx_demux *demux);$/;"	m	struct:dmx_demux
discrete	videodev2.h	/^		struct v4l2_fract		discrete;$/;"	m	union:v4l2_frmivalenum::__anon50	typeref:struct:v4l2_frmivalenum::__anon50::v4l2_fract
discrete	videodev2.h	/^		struct v4l2_frmsize_discrete	discrete;$/;"	m	union:v4l2_frmsizeenum::__anon49	typeref:struct:v4l2_frmsizeenum::__anon49::v4l2_frmsize_discrete
diseqc_recv_slave_reply	dvb_frontend.h	/^	int (*diseqc_recv_slave_reply)(struct dvb_frontend* fe, struct dvb_diseqc_slave_reply* reply);$/;"	m	struct:dvb_frontend_ops
diseqc_reset_overload	dvb_frontend.h	/^	int (*diseqc_reset_overload)(struct dvb_frontend* fe);$/;"	m	struct:dvb_frontend_ops
diseqc_send_burst	dvb_frontend.h	/^	int (*diseqc_send_burst)(struct dvb_frontend *fe,$/;"	m	struct:dvb_frontend_ops
diseqc_send_master_cmd	dvb_frontend.h	/^	int (*diseqc_send_master_cmd)(struct dvb_frontend* fe, struct dvb_diseqc_master_cmd* cmd);$/;"	m	struct:dvb_frontend_ops
dishnetwork_send_legacy_command	dvb_frontend.h	/^	int (*dishnetwork_send_legacy_command)(struct dvb_frontend* fe, unsigned long cmd);$/;"	m	struct:dvb_frontend_ops
dismiss	pm.h	/^	void (*dismiss)(struct device *dev);$/;"	m	struct:dev_pm_domain
div	clk-provider.h	/^	unsigned int	div;$/;"	m	struct:clk_div_table
div	clk-provider.h	/^	unsigned int	div;$/;"	m	struct:clk_fixed_factor
divider_ro_round_rate	clk-provider.h	/^static inline long divider_ro_round_rate(struct clk_hw *hw, unsigned long rate,$/;"	f
divider_round_rate	clk-provider.h	/^static inline long divider_round_rate(struct clk_hw *hw, unsigned long rate,$/;"	f
dl_dev_state	device.h	/^enum dl_dev_state {$/;"	g
dma	videobuf-dma-sg.h	/^	struct videobuf_dmabuf  dma;$/;"	m	struct:videobuf_dma_sg_memory	typeref:struct:videobuf_dma_sg_memory::videobuf_dmabuf
dma_addr	videobuf-dma-sg.h	/^	dma_addr_t          *dma_addr;$/;"	m	struct:videobuf_dmabuf
dma_attrs	videobuf2-core.h	/^	unsigned long			dma_attrs;$/;"	m	struct:vb2_queue
dma_configure	device.h	/^	int (*dma_configure)(struct device *dev);$/;"	m	struct:bus_type
dma_dir	videobuf2-core.h	/^	enum dma_data_direction		dma_dir;$/;"	m	struct:vb2_queue	typeref:enum:vb2_queue::dma_data_direction
dma_handle	videobuf-dma-contig.c	/^	dma_addr_t dma_handle;$/;"	m	struct:videobuf_dma_contig_memory	file:
dma_mask	device.h	/^	u64		*dma_mask;	\/* dma mask (if dma'able device) *\/$/;"	m	struct:device
dma_mem	device.h	/^	struct dma_coherent_mem	*dma_mem; \/* internal for coherent mem$/;"	m	struct:device	typeref:struct:device::dma_coherent_mem
dma_ops	device.h	/^	const struct dma_map_ops *dma_ops;$/;"	m	struct:device	typeref:struct:device::dma_map_ops
dma_parms	device.h	/^	struct device_dma_parameters *dma_parms;$/;"	m	struct:device	typeref:struct:device::device_dma_parameters
dma_pfn_offset	device.h	/^	unsigned long	dma_pfn_offset;$/;"	m	struct:device
dma_pools	device.h	/^	struct list_head	dma_pools;	\/* dma pools (if dma'ble) *\/$/;"	m	struct:device	typeref:struct:device::list_head
dmi_device_id	mod_devicetable.h	538;"	d
dmi_field	mod_devicetable.h	/^enum dmi_field {$/;"	g
dmi_strmatch	mod_devicetable.h	/^struct dmi_strmatch {$/;"	s
dmi_system_id	mod_devicetable.h	/^struct dmi_system_id {$/;"	s
dmx	dvb_demux.h	/^	struct dmx_demux dmx;$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::dmx_demux
dmx_demux	demux.h	/^struct dmx_demux {$/;"	s
dmx_demux_caps	demux.h	/^enum dmx_demux_caps {$/;"	g
dmx_frontend	demux.h	/^struct dmx_frontend {$/;"	s
dmx_frontend_source	demux.h	/^enum dmx_frontend_source {$/;"	g
dmx_section_cb	demux.h	/^typedef int (*dmx_section_cb)(const u8 *buffer1,$/;"	t
dmx_section_feed	demux.h	/^struct dmx_section_feed {$/;"	s
dmx_section_filter	demux.h	/^struct dmx_section_filter {$/;"	s
dmx_ts_cb	demux.h	/^typedef int (*dmx_ts_cb)(const u8 *buffer1,$/;"	t
dmx_ts_feed	demux.h	/^struct dmx_ts_feed {$/;"	s
dmxdev	dmxdev.h	/^struct dmxdev {$/;"	s
dmxdev	videobuf2-dvb.h	/^	struct dmxdev		dmxdev;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::dmxdev
dmxdev_feed	dmxdev.h	/^struct dmxdev_feed {$/;"	s
dmxdev_filter	dmxdev.h	/^struct dmxdev_filter {$/;"	s
dmxdev_state	dmxdev.h	/^enum dmxdev_state {$/;"	g
dmxdev_type	dmxdev.h	/^enum dmxdev_type {$/;"	g
do_reloc	relocs.c	/^static int do_reloc(struct section *sec, Elf_Rel *rel, Elf_Sym *sym,$/;"	f	file:
do_reloc_info	relocs.c	/^static int do_reloc_info(struct section *sec, Elf_Rel *rel, ElfW(Sym) *sym,$/;"	f	file:
do_trace_printk	kernel.h	725;"	d
do_video_ioctl	v4l2-compat-ioctl32.c	/^static long do_video_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
domain	driver.h	/^	struct irq_domain *domain;$/;"	m	struct:gpio_irq_chip	typeref:struct:gpio_irq_chip::irq_domain
domain_data	pm.h	/^	struct pm_domain_data *domain_data;$/;"	m	struct:pm_subsys_data	typeref:struct:pm_subsys_data::pm_domain_data
domain_id	mod_devicetable.h	/^	__u32 domain_id;$/;"	m	struct:apr_device_id
domain_ops	driver.h	/^	const struct irq_domain_ops *domain_ops;$/;"	m	struct:gpio_irq_chip	typeref:struct:gpio_irq_chip::irq_domain_ops
done	v4l2-async.h	/^	struct list_head done;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::list_head
done	v4l2-ctrls.h	/^	unsigned int done:1;$/;"	m	struct:v4l2_ctrl
done	videobuf-core.h	/^	wait_queue_head_t       done;$/;"	m	struct:videobuf_buffer
done_entry	videobuf2-core.h	/^	struct list_head	done_entry;$/;"	m	struct:vb2_buffer	typeref:struct:vb2_buffer::list_head
done_list	videobuf2-core.h	/^	struct list_head		done_list;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::list_head
done_lock	videobuf2-core.h	/^	spinlock_t			done_lock;$/;"	m	struct:vb2_queue
done_wq	videobuf2-core.h	/^	wait_queue_head_t		done_wq;$/;"	m	struct:vb2_queue
doneq	dvb_demux.h	/^	bool doneq;$/;"	m	struct:dvb_demux_filter
dpm_for_each_dev	pm.h	/^static inline void dpm_for_each_dev(void *data, void (*fn)(struct device *, void *))$/;"	f
dpm_order	pm.h	/^enum dpm_order {$/;"	g
dpm_suspend_start	pm.h	/^static inline int dpm_suspend_start(pm_message_t state)$/;"	f
dprintk	tuner-core.c	91;"	d	file:
dprintk	v4l2-dev.c	39;"	d	file:
dprintk	v4l2-mem2mem.c	35;"	d	file:
dprintk	videobuf-core.c	44;"	d	file:
dprintk	videobuf-dma-sg.c	54;"	d	file:
dprintk	videobuf-vmalloc.c	47;"	d	file:
dr_match_t	device.h	/^typedef int (*dr_match_t)(struct device *dev, void *res, void *match_data);$/;"	t
dr_release_t	device.h	/^typedef void (*dr_release_t)(struct device *dev, void *res);$/;"	t
driver	base.h	/^	struct device_driver *driver;$/;"	m	struct:driver_private	typeref:struct:driver_private::device_driver
driver	device.h	/^	struct device_driver *driver;	\/* which driver has allocated this$/;"	m	struct:device	typeref:struct:device::device_driver
driver	i2c.h	/^	struct device_driver driver;$/;"	m	struct:i2c_driver	typeref:struct:i2c_driver::device_driver
driver	media.h	/^	char driver[16];$/;"	m	struct:media_device_info
driver	videodev2.h	/^	__u8	driver[16];$/;"	m	struct:v4l2_capability
driver_add_groups	driver.c	/^int driver_add_groups(struct device_driver *drv,$/;"	f
driver_attach_async	bus.c	/^static void driver_attach_async(void *_drv, async_cookie_t cookie)$/;"	f	file:
driver_attribute	device.h	/^struct driver_attribute {$/;"	s
driver_create_file	driver.c	/^EXPORT_SYMBOL_GPL(driver_create_file);$/;"	v
driver_create_file	driver.c	/^int driver_create_file(struct device_driver *drv,$/;"	f
driver_data	device.h	/^	void		*driver_data;	\/* Driver data, set and get with$/;"	m	struct:device
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:apr_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:hv_vmbus_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:i2c_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:pci_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:sdio_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:spi_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:spmi_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* Data private to the driver *\/$/;"	m	struct:zorro_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;	\/* data private to the driver *\/$/;"	m	struct:isapnp_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:acpi_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:css_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:eisa_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:hid_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:ieee1394_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:mcb_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:pci_epf_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:platform_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:pnp_card_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:pnp_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:sdw_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:slim_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:tb_service_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:typec_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:ulpi_device_id
driver_data	mod_devicetable.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:x86_cpu_id
driver_data	mod_devicetable.h	/^	unsigned long driver_data;$/;"	m	struct:hda_device_id
driver_data	mod_devicetable.h	/^	void *driver_data;$/;"	m	struct:dmi_system_id
driver_find	driver.c	/^EXPORT_SYMBOL_GPL(driver_find);$/;"	v
driver_find	driver.c	/^struct device_driver *driver_find(const char *name, struct bus_type *bus)$/;"	f
driver_find_device	driver.c	/^EXPORT_SYMBOL_GPL(driver_find_device);$/;"	v
driver_find_device	driver.c	/^struct device *driver_find_device(struct device_driver *drv,$/;"	f
driver_flags	pm.h	/^	u32			driver_flags;$/;"	m	struct:dev_pm_info
driver_for_each_device	driver.c	/^EXPORT_SYMBOL_GPL(driver_for_each_device);$/;"	v
driver_for_each_device	driver.c	/^int driver_for_each_device(struct device_driver *drv, struct device *start,$/;"	f
driver_info	mod_devicetable.h	/^	kernel_ulong_t	driver_info$/;"	m	struct:usb_device_id
driver_info	mod_devicetable.h	/^	kernel_ulong_t	driver_info;$/;"	m	struct:pcmcia_device_id
driver_info	mod_devicetable.h	/^	kernel_ulong_t driver_info;$/;"	m	struct:ap_device_id
driver_info	mod_devicetable.h	/^	kernel_ulong_t driver_info;$/;"	m	struct:ccw_device_id
driver_info	mod_devicetable.h	/^	kernel_ulong_t driver_info;$/;"	m	struct:input_device_id
driver_info	mod_devicetable.h	/^	kernel_ulong_t driver_info;$/;"	m	struct:mei_cl_device_id
driver_ktype	bus.c	/^static struct kobj_type driver_ktype = {$/;"	v	typeref:struct:kobj_type	file:
driver_match_device	base.h	/^static inline int driver_match_device(struct device_driver *drv,$/;"	f
driver_name	media-device.h	/^	char driver_name[32];$/;"	m	struct:media_device
driver_name	rc-core.h	/^	const char			*driver_name;$/;"	m	struct:rc_dev
driver_private	base.h	/^struct driver_private {$/;"	s
driver_register	driver.c	/^EXPORT_SYMBOL_GPL(driver_register);$/;"	v
driver_register	driver.c	/^int driver_register(struct device_driver *drv)$/;"	f
driver_release	bus.c	/^static void driver_release(struct kobject *kobj)$/;"	f	file:
driver_remove_file	driver.c	/^EXPORT_SYMBOL_GPL(driver_remove_file);$/;"	v
driver_remove_file	driver.c	/^void driver_remove_file(struct device_driver *drv,$/;"	f
driver_remove_groups	driver.c	/^void driver_remove_groups(struct device_driver *drv,$/;"	f
driver_sysfs_ops	bus.c	/^static const struct sysfs_ops driver_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
driver_type	rc-core.h	/^	enum rc_driver_type		driver_type;$/;"	m	struct:rc_dev	typeref:enum:rc_dev::rc_driver_type
driver_unregister	driver.c	/^EXPORT_SYMBOL_GPL(driver_unregister);$/;"	v
driver_unregister	driver.c	/^void driver_unregister(struct device_driver *drv)$/;"	f
driver_version	media.h	/^	__u32 driver_version;$/;"	m	struct:media_device_info
drivers_autoprobe	base.h	/^	unsigned int drivers_autoprobe:1;$/;"	m	struct:subsys_private
drivers_dir	module.h	/^	struct kobject *drivers_dir;$/;"	m	struct:module_kobject	typeref:struct:module_kobject::kobject
drivers_kset	base.h	/^	struct kset *drivers_kset;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::kset
drv_attr_show	bus.c	/^static ssize_t drv_attr_show(struct kobject *kobj, struct attribute *attr,$/;"	f	file:
drv_attr_store	bus.c	/^static ssize_t drv_attr_store(struct kobject *kobj, struct attribute *attr,$/;"	f	file:
drv_groups	device.h	/^	const struct attribute_group **drv_groups;$/;"	m	struct:bus_type	typeref:struct:bus_type::attribute_group
drv_name	soc_camera.h	/^	const char *drv_name;$/;"	m	struct:soc_camera_host
drv_priv	soc_camera.h	/^	void *drv_priv;$/;"	m	struct:soc_camera_subdev_desc
drv_priv	videobuf2-core.h	/^	void				*drv_priv;$/;"	m	struct:vb2_queue
dst	vsp1.h	/^	struct v4l2_rect dst;$/;"	m	struct:vsp1_du_atomic_config	typeref:struct:vsp1_du_atomic_config::v4l2_rect
dtv_frontend_properties	dvb_frontend.h	/^struct dtv_frontend_properties {$/;"	s
dtv_property_cache	dvb_frontend.h	/^	struct dtv_frontend_properties dtv_property_cache;$/;"	m	struct:dvb_frontend	typeref:struct:dvb_frontend::dtv_frontend_properties
dummy_driver	i2c-core-base.c	/^static struct i2c_driver dummy_driver = {$/;"	v	typeref:struct:i2c_driver	file:
dummy_id	i2c-core-base.c	/^static const struct i2c_device_id dummy_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
dummy_probe	i2c-core-base.c	/^static int dummy_probe(struct i2c_client *client,$/;"	f	file:
dummy_remove	i2c-core-base.c	/^static int dummy_remove(struct i2c_client *client)$/;"	f	file:
duration	rc-core.h	/^		u32             duration;$/;"	m	union:ir_raw_event::__anon31
duration	testusb.c	/^	struct timeval		duration;$/;"	m	struct:usbtest_param	typeref:struct:usbtest_param::timeval	file:
duty_cycle	rc-core.h	/^	u8                      duty_cycle;$/;"	m	struct:ir_raw_event
duty_cycle	v4l2-subdev.h	/^	unsigned int duty_cycle;$/;"	m	struct:v4l2_subdev_ir_parameters
dv_timings_cap	v4l2-subdev.h	/^	int (*dv_timings_cap)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
dvb	dvb_frontend.h	/^	struct dvb_adapter *dvb;$/;"	m	struct:dvb_frontend	typeref:struct:dvb_frontend::dvb_adapter
dvb	media.h	/^		int dvb;$/;"	m	union:media_entity_desc::__anon20
dvb	videobuf2-dvb.h	/^	struct vb2_dvb dvb;$/;"	m	struct:vb2_dvb_frontend	typeref:struct:vb2_dvb_frontend::vb2_dvb
dvb_adapter	dvbdev.h	/^struct dvb_adapter {$/;"	s
dvb_attach	dvbdev.h	438;"	d
dvb_attach	dvbdev.h	462;"	d
dvb_buf_type	dvb_vb2.h	/^enum dvb_buf_type {$/;"	g
dvb_buffer	dvb_vb2.h	/^struct dvb_buffer {$/;"	s
dvb_ca_en50221	dvb_ca_en50221.h	/^struct dvb_ca_en50221 {$/;"	s
dvb_create_media_graph	dvbdev.h	/^int dvb_create_media_graph(struct dvb_adapter *adap,$/;"	f
dvb_demux	dvb_demux.h	/^struct dvb_demux {$/;"	s
dvb_demux_feed	dvb_demux.h	/^struct dvb_demux_feed {$/;"	s
dvb_demux_filter	dvb_demux.h	/^struct dvb_demux_filter {$/;"	s
dvb_detach	dvbdev.h	459;"	d
dvb_detach	dvbdev.h	466;"	d
dvb_device	dvbdev.h	/^struct dvb_device {$/;"	s
dvb_device_type	dvbdev.h	/^enum dvb_device_type {$/;"	g
dvb_dmx_filter_type	dvb_demux.h	/^enum dvb_dmx_filter_type {$/;"	g
dvb_dmx_state	dvb_demux.h	/^enum dvb_dmx_state {$/;"	g
dvb_fe_events	dvb_frontend.h	/^struct dvb_fe_events {$/;"	s
dvb_frontend	dvb_frontend.h	/^struct dvb_frontend {$/;"	s
dvb_frontend_internal_info	dvb_frontend.h	/^struct dvb_frontend_internal_info {$/;"	s
dvb_frontend_ops	dvb_frontend.h	/^struct dvb_frontend_ops {$/;"	s
dvb_frontend_tune_settings	dvb_frontend.h	/^struct dvb_frontend_tune_settings {$/;"	s
dvb_get_media_controller	dvbdev.h	/^*dvb_get_media_controller(struct dvb_adapter *adap)$/;"	f
dvb_get_media_controller	dvbdev.h	309;"	d
dvb_net	dvb_net.h	/^struct dvb_net {$/;"	s
dvb_net_init	dvb_net.h	/^static inline int dvb_net_init(struct dvb_adapter *adap,$/;"	f
dvb_net_release	dvb_net.h	/^static inline void dvb_net_release(struct dvb_net *dvbnet)$/;"	f
dvb_q	dvb_vb2.h	/^	struct list_head	dvb_q;$/;"	m	struct:dvb_vb2_ctx	typeref:struct:dvb_vb2_ctx::list_head
dvb_register_media_controller	dvbdev.h	/^static inline void dvb_register_media_controller(struct dvb_adapter *adap,$/;"	f
dvb_register_media_controller	dvbdev.h	308;"	d
dvb_ringbuffer	dvb_ringbuffer.h	/^struct dvb_ringbuffer {$/;"	s
dvb_tuner_info	dvb_frontend.h	/^struct dvb_tuner_info {$/;"	s
dvb_tuner_ops	dvb_frontend.h	/^struct dvb_tuner_ops {$/;"	s
dvb_vb2_ctx	dvb_vb2.h	/^struct dvb_vb2_ctx {$/;"	s
dvb_vb2_fill_buffer	dvb_vb2.h	127;"	d
dvb_vb2_init	dvb_vb2.h	/^static inline int dvb_vb2_init(struct dvb_vb2_ctx *ctx,$/;"	f
dvb_vb2_is_streaming	dvb_vb2.h	126;"	d
dvb_vb2_poll	dvb_vb2.h	/^static inline __poll_t dvb_vb2_poll(struct dvb_vb2_ctx *ctx,$/;"	f
dvb_vb2_release	dvb_vb2.h	/^static inline int dvb_vb2_release(struct dvb_vb2_ctx *ctx)$/;"	f
dvb_vb2_states	dvb_vb2.h	/^enum dvb_vb2_states {$/;"	g
dvbdev	dmxdev.h	/^	struct dvb_device *dvbdev;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dvb_device
dvbdev	dvb_net.h	/^	struct dvb_device *dvbdev;$/;"	m	struct:dvb_net	typeref:struct:dvb_net::dvb_device
dvbfe_algo	dvb_frontend.h	/^enum dvbfe_algo {$/;"	g
dvbfe_search	dvb_frontend.h	/^enum dvbfe_search {$/;"	g
dvbq	videobuf2-dvb.h	/^	struct vb2_queue	dvbq;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::vb2_queue
dvr_buffer	dmxdev.h	/^	struct dvb_ringbuffer dvr_buffer;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dvb_ringbuffer
dvr_dvbdev	dmxdev.h	/^	struct dvb_device *dvr_dvbdev;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dvb_device
dvr_orig_fe	dmxdev.h	/^	struct dmx_frontend *dvr_orig_fe;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dmx_frontend
dvr_vb2_ctx	dmxdev.h	/^	struct dvb_vb2_ctx dvr_vb2_ctx;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dvb_vb2_ctx
early_init	pm.h	/^	bool			early_init:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info
early_initcall	module.h	110;"	d
edid	v4l2-compat-ioctl32.c	/^	compat_caddr_t edid;$/;"	m	struct:v4l2_edid32	file:
eeprom_data	i2c-slave-eeprom.c	/^struct eeprom_data {$/;"	s	file:
ehdr	relocs.c	/^static Elf_Ehdr ehdr;$/;"	v	file:
ei_funcs	module.h	/^	struct error_injection_entry *ei_funcs;$/;"	m	struct:module	typeref:struct:module::error_injection_entry
eisa_device_id	mod_devicetable.h	/^struct eisa_device_id {$/;"	s
elem_size	v4l2-ctrls.h	/^	u32 elem_size;$/;"	m	struct:v4l2_ctrl
elem_size	v4l2-ctrls.h	/^	u32 elem_size;$/;"	m	struct:v4l2_ctrl_config
elem_size	videodev2.h	/^	__u32                elem_size;$/;"	m	struct:v4l2_query_ext_ctrl
elems	v4l2-ctrls.h	/^	u32 elems;$/;"	m	struct:v4l2_ctrl
elems	v4l2-event.h	/^	unsigned int		elems;$/;"	m	struct:v4l2_subscribed_event
elems	videodev2.h	/^	__u32                elems;$/;"	m	struct:v4l2_query_ext_ctrl
elf16_to_cpu	relocs.c	/^static uint16_t elf16_to_cpu(uint16_t val)$/;"	f	file:
elf32_to_cpu	relocs.c	/^static uint32_t elf32_to_cpu(uint32_t val)$/;"	f	file:
elf64_to_cpu	relocs.c	/^static uint64_t elf64_to_cpu(uint64_t val)$/;"	f	file:
elf_addr_to_cpu	relocs.c	196;"	d	file:
elf_addr_to_cpu	relocs.c	200;"	d	file:
elf_half_to_cpu	relocs.c	185;"	d	file:
elf_off_to_cpu	relocs.c	197;"	d	file:
elf_off_to_cpu	relocs.c	201;"	d	file:
elf_word_to_cpu	relocs.c	186;"	d	file:
elf_xword_to_cpu	relocs.c	198;"	d	file:
elf_xword_to_cpu	relocs.c	202;"	d	file:
emit_relocs	relocs.c	/^static void emit_relocs(int as_text, int as_bin, FILE *outf)$/;"	f	file:
empty_out_buf	ffs-test.c	/^empty_out_buf(struct thread *ignore, const void *buf, size_t nbytes)$/;"	f	file:
enable	clk-provider.h	/^	int		(*enable)(struct clk_hw *hw);$/;"	m	struct:clk_ops
enable	gpio_keys.h	/^	int (*enable)(struct device *dev);$/;"	m	struct:gpio_keys_platform_data
enable	v4l2-clk.h	/^	int		(*enable)(struct v4l2_clk *clk);$/;"	m	struct:v4l2_clk_ops
enable	v4l2-clk.h	/^	int enable;$/;"	m	struct:v4l2_clk
enable	v4l2-subdev.h	/^	bool enable;$/;"	m	struct:v4l2_subdev_ir_parameters
enable_high_lnb_voltage	dvb_frontend.h	/^	int (*enable_high_lnb_voltage)(struct dvb_frontend* fe, long arg);$/;"	m	struct:dvb_frontend_ops
enable_irq	cec-pin.h	/^	bool (*enable_irq)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
enable_source	media-device.h	/^	int (*enable_source)(struct media_entity *entity,$/;"	m	struct:media_device
enabled_protocols	rc-core.h	/^	u64				enabled_protocols;$/;"	m	struct:rc_dev
encode_wakeup	rc-core.h	/^	bool				encode_wakeup;$/;"	m	struct:rc_dev
endpoint	device.h	/^	const char		*endpoint[2];$/;"	m	struct:device_connection
ent_enum	media-entity.h	/^	struct media_entity_enum ent_enum;$/;"	m	struct:media_graph	typeref:struct:media_graph::media_entity_enum
entities	media-device.h	/^	struct list_head entities;$/;"	m	struct:media_device	typeref:struct:media_device::list_head
entity	dvbdev.h	/^	struct media_entity *entity, *tsout_entity;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::media_entity
entity	media-entity.h	/^		struct media_entity *entity;$/;"	m	struct:media_graph::__anon15	typeref:struct:media_graph::__anon15::media_entity
entity	media-entity.h	/^		struct media_entity *entity;$/;"	m	union:media_link::__anon17	typeref:struct:media_link::__anon17::media_entity
entity	media-entity.h	/^	struct media_entity *entity;$/;"	m	struct:media_pad	typeref:struct:media_pad::media_entity
entity	media.h	/^	__u32 entity;		\/* entity ID *\/$/;"	m	struct:media_pad_desc
entity	media.h	/^	__u32 entity;$/;"	m	struct:media_links_enum
entity	v4l2-dev.h	/^	struct media_entity entity;$/;"	m	struct:video_device	typeref:struct:video_device::media_entity
entity	v4l2-subdev.h	/^	struct media_entity entity;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::media_entity
entity_id	media.h	/^	__u32 entity_id;$/;"	m	struct:media_v2_pad
entity_internal_idx	media-device.h	/^	struct ida entity_internal_idx;$/;"	m	struct:media_device	typeref:struct:media_device::ida
entity_internal_idx_max	media-device.h	/^	int entity_internal_idx_max;$/;"	m	struct:media_device
entity_notify	media-device.h	/^	struct list_head entity_notify;$/;"	m	struct:media_device	typeref:struct:media_device::list_head
entries	videodev2.h	/^	__u32 entries;$/;"	m	struct:v4l2_enc_idx
entries_cap	videodev2.h	/^	__u32 entries_cap;$/;"	m	struct:v4l2_enc_idx
entry	devres.c	/^	struct list_head		entry;$/;"	m	struct:devres_node	typeref:struct:devres_node::list_head	file:
entry	pm.h	/^	struct list_head	entry;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::list_head
entry	v4l2-subdev.h	/^	struct v4l2_mbus_frame_desc_entry entry[V4L2_FRAME_DESC_ENTRY_MAX];$/;"	m	struct:v4l2_mbus_frame_desc	typeref:struct:v4l2_mbus_frame_desc::v4l2_mbus_frame_desc_entry
entry	videodev2.h	/^	struct v4l2_enc_idx_entry entry[V4L2_ENC_IDX_ENTRIES];$/;"	m	struct:v4l2_enc_idx	typeref:struct:v4l2_enc_idx::v4l2_enc_idx_entry
enum_dv_timings	v4l2-subdev.h	/^	int (*enum_dv_timings)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
enum_frame_interval	v4l2-subdev.h	/^	int (*enum_frame_interval)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
enum_frame_size	v4l2-subdev.h	/^	int (*enum_frame_size)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
enum_framesizes	soc_camera.h	/^	int (*enum_framesizes)(struct soc_camera_device *, struct v4l2_frmsizeenum *);$/;"	m	struct:soc_camera_host_ops
enum_freq_bands	v4l2-subdev.h	/^	int (*enum_freq_bands)(struct v4l2_subdev *sd, struct v4l2_frequency_band *band);$/;"	m	struct:v4l2_subdev_tuner_ops
enum_mbus_code	v4l2-subdev.h	/^	int (*enum_mbus_code)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
ep	imx219.c	/^	struct v4l2_fwnode_endpoint ep; \/* the parsed DT endpoint info *\/$/;"	m	struct:imx219	typeref:struct:imx219::v4l2_fwnode_endpoint	file:
ep0_consume	ffs-test.c	/^ep0_consume(struct thread *ignore, const void *buf, size_t nbytes)$/;"	f	file:
ep0_init	ffs-test.c	/^static void ep0_init(struct thread *t, bool legacy_descriptors)$/;"	f	file:
equal	v4l2-ctrls.h	/^	bool (*equal)(const struct v4l2_ctrl *ctrl, u32 idx,$/;"	m	struct:v4l2_ctrl_type_ops
err	ffs-test.c	108;"	d	file:
error	dvb_ringbuffer.h	/^	int               error;$/;"	m	struct:dvb_ringbuffer
error	v4l2-ctrls.h	/^	int error;$/;"	m	struct:v4l2_ctrl_handler
error	videobuf2-core.h	/^	unsigned int			error:1;$/;"	m	struct:vb2_queue
error_idx	v4l2-compat-ioctl32.c	/^	__u32 error_idx;$/;"	m	struct:v4l2_ext_controls32	file:
error_idx	videodev2.h	/^	__u32 error_idx;$/;"	m	struct:v4l2_ext_controls
error_inj_file	cec.h	/^	struct dentry *error_inj_file;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::dentry
error_inj_parse_line	cec.h	/^	bool (*error_inj_parse_line)(struct cec_adapter *adap, char *line);$/;"	m	struct:cec_adap_ops
error_inj_show	cec.h	/^	int (*error_inj_show)(struct cec_adapter *adap, struct seq_file *sf);$/;"	m	struct:cec_adap_ops
ev	cec.h	/^	struct cec_event	ev;$/;"	m	struct:cec_event_entry	typeref:struct:cec_event_entry::cec_event
ev_subs	v4l2-ctrls.h	/^	struct list_head ev_subs;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::list_head
evbit	mod_devicetable.h	/^	kernel_ulong_t evbit[INPUT_DEVICE_ID_EV_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
event	i2c-pxa.h	/^	void (*event)(void *ptr, i2c_slave_event_t event);$/;"	m	struct:i2c_slave_client
event	pm.h	/^	int event;$/;"	m	struct:pm_message
event	v4l2-event.h	/^	struct v4l2_event	event;$/;"	m	struct:v4l2_kevent	typeref:struct:v4l2_kevent::v4l2_event
eventr	dvb_frontend.h	/^	int			  eventr;$/;"	m	struct:dvb_fe_events
events	cec.h	/^	struct list_head	events[CEC_NUM_EVENTS]; \/* queued events *\/$/;"	m	struct:cec_fh	typeref:struct:cec_fh::list_head
events	dvb_frontend.h	/^	struct dvb_frontend_event events[MAX_EVENT];$/;"	m	struct:dvb_fe_events	typeref:struct:dvb_fe_events::dvb_frontend_event
events	v4l2-event.h	/^	struct v4l2_kevent	events[];$/;"	m	struct:v4l2_subscribed_event	typeref:struct:v4l2_subscribed_event::v4l2_kevent
eventw	dvb_frontend.h	/^	int			  eventw;$/;"	m	struct:dvb_fe_events
exact_match	mod_devicetable.h	/^	unsigned char exact_match:1;$/;"	m	struct:dmi_strmatch
exit	dmxdev.h	/^	unsigned int exit:1;$/;"	m	struct:dmxdev
exit	dvb_frontend.h	/^	unsigned int exit;$/;"	m	struct:dvb_frontend
exit	dvb_net.h	/^	unsigned int exit:1;$/;"	m	struct:dvb_net
exit	module.h	/^	void (*exit)(void);$/;"	m	struct:module
exposure	imx219.c	/^	struct v4l2_ctrl *exposure;$/;"	m	struct:imx219	typeref:struct:imx219::v4l2_ctrl	file:
exposure	imx258.c	/^	struct v4l2_ctrl *exposure;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_ctrl	file:
ext_lock	videobuf-core.h	/^	struct mutex               *ext_lock;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::mutex
extable	module.h	/^	struct exception_table_entry *extable;$/;"	m	struct:module	typeref:struct:module::exception_table_entry
extendedmode	videodev2.h	/^	__u32		   extendedmode;  \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_captureparm
extendedmode	videodev2.h	/^	__u32		   extendedmode; \/*  Driver-specific extensions *\/$/;"	m	struct:v4l2_outputparm
external_strobe_set	v4l2-flash-led-class.h	/^	int (*external_strobe_set)(struct v4l2_flash *v4l2_flash,$/;"	m	struct:v4l2_flash_ops
extra	mod_devicetable.h	/^	__u8 extra;$/;"	m	struct:serio_device_id
family	mod_devicetable.h	/^	__u16 family;$/;"	m	struct:x86_cpu_id
fb	media.h	/^		} fb;$/;"	m	union:media_entity_desc::__anon20	typeref:struct:media_entity_desc::__anon20::__anon24
fd	ffs-test.c	/^	int fd;$/;"	m	struct:thread	file:
fd	v4l2-compat-ioctl32.c	/^		__s32		fd;$/;"	m	union:v4l2_buffer32::__anon39	file:
fd	v4l2-compat-ioctl32.c	/^		__s32		fd;$/;"	m	union:v4l2_plane32::__anon38	file:
fd	videobuf2-core.h	/^		int		fd;$/;"	m	union:vb2_plane::__anon47
fd	videodev2.h	/^		__s32		fd;$/;"	m	union:v4l2_buffer::__anon52
fd	videodev2.h	/^		__s32		fd;$/;"	m	union:v4l2_plane::__anon51
fd	videodev2.h	/^	__s32		fd;$/;"	m	struct:v4l2_exportbuffer
fe	tuner-core.c	/^	struct dvb_frontend fe;$/;"	m	struct:tuner	typeref:struct:tuner::dvb_frontend	file:
fe_hw	videobuf2-dvb.h	/^	struct dmx_frontend	fe_hw;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::dmx_frontend
fe_mem	videobuf2-dvb.h	/^	struct dmx_frontend	fe_mem;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::dmx_frontend
fe_set_config	tuner-core.c	/^static int fe_set_config(struct dvb_frontend *fe, void *priv_cfg)$/;"	f	file:
fe_set_params	tuner-core.c	/^static void fe_set_params(struct dvb_frontend *fe,$/;"	f	file:
fe_standby	tuner-core.c	/^static void fe_standby(struct dvb_frontend *fe)$/;"	f	file:
feature	mod_devicetable.h	/^	__u16	feature;$/;"	m	struct:cpu_feature
feature	mod_devicetable.h	/^	__u16 feature;	\/* bit index *\/$/;"	m	struct:x86_cpu_id
fec	dvb_frontend.h	/^	    enum fe_code_rate	fec;$/;"	m	struct:dtv_frontend_properties::__anon7	typeref:enum:dtv_frontend_properties::__anon7::fe_code_rate
fec_inner	dvb_frontend.h	/^	enum fe_code_rate	fec_inner;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_code_rate
feed	dmxdev.h	/^	} feed;$/;"	m	struct:dmxdev_filter	typeref:union:dmxdev_filter::__anon3
feed	dvb_demux.h	/^	struct dvb_demux_feed *feed;$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::dvb_demux_feed
feed	dvb_demux.h	/^	struct dvb_demux_feed *feed;$/;"	m	struct:dvb_demux_filter	typeref:struct:dvb_demux_filter::dvb_demux_feed
feed	dvb_demux.h	/^	} feed;$/;"	m	struct:dvb_demux_feed	typeref:union:dvb_demux_feed::__anon5
feed_list	dvb_demux.h	/^	struct list_head feed_list;$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::list_head
feednum	dvb_demux.h	/^	int feednum;$/;"	m	struct:dvb_demux
felist	videobuf2-dvb.h	/^	struct list_head felist;$/;"	m	struct:vb2_dvb_frontend	typeref:struct:vb2_dvb_frontend::list_head
felist	videobuf2-dvb.h	/^	struct list_head felist;$/;"	m	struct:vb2_dvb_frontends	typeref:struct:vb2_dvb_frontends::list_head
ffbit	mod_devicetable.h	/^	kernel_ulong_t ffbit[INPUT_DEVICE_ID_FF_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
fh	cec.h	/^	struct cec_fh *fh;$/;"	m	struct:cec_data	typeref:struct:cec_data::cec_fh
fh	v4l2-event.h	/^	struct v4l2_fh		*fh;$/;"	m	struct:v4l2_subscribed_event	typeref:struct:v4l2_subscribed_event::v4l2_fh
fh_list	v4l2-dev.h	/^	struct list_head	fh_list;$/;"	m	struct:video_device	typeref:struct:video_device::list_head
fh_lock	v4l2-dev.h	/^	spinlock_t		fh_lock;$/;"	m	struct:video_device
fhs	cec.h	/^	struct list_head fhs;$/;"	m	struct:cec_devnode	typeref:struct:cec_devnode::list_head
field	soc_camera.h	/^	enum v4l2_field field;		\/* Preserve field over close() *\/$/;"	m	struct:soc_camera_device	typeref:enum:soc_camera_device::v4l2_field
field	v4l2-compat-ioctl32.c	/^		__u32		field;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
field	v4l2-compat-ioctl32.c	/^	__u32			field;	\/* enum v4l2_field *\/$/;"	m	struct:v4l2_buffer32	file:
field	v4l2-compat-ioctl32.c	/^	__u32			field;	\/* enum v4l2_field *\/$/;"	m	struct:v4l2_window32	file:
field	videobuf-core.h	/^	enum v4l2_field            field;$/;"	m	struct:videobuf_queue	typeref:enum:videobuf_queue::v4l2_field
field	videobuf-core.h	/^	enum v4l2_field         field;$/;"	m	struct:videobuf_buffer	typeref:enum:videobuf_buffer::v4l2_field
field	videobuf2-v4l2.h	/^	__u32			field;$/;"	m	struct:vb2_v4l2_buffer
field	videodev2.h	/^		__u32		field;		\/* enum v4l2_field *\/$/;"	m	struct:v4l2_framebuffer::__anon53
field	videodev2.h	/^	__u32				field;$/;"	m	struct:v4l2_pix_format_mplane
field	videodev2.h	/^	__u32			field;		\/* enum v4l2_field *\/$/;"	m	struct:v4l2_pix_format
field	videodev2.h	/^	__u32			field;	 \/* enum v4l2_field *\/$/;"	m	struct:v4l2_window
field	videodev2.h	/^	__u32			field;$/;"	m	struct:v4l2_buffer
field	videodev2.h	/^	__u32   field;          \/* 0: first field, 1: second field *\/$/;"	m	struct:v4l2_sliced_vbi_data
field	videodev2.h	/^	__u8 field;$/;"	m	struct:v4l2_event_vsync
field_count	videobuf-core.h	/^	unsigned int            field_count;$/;"	m	struct:videobuf_buffer
fields	relocs_64.c	/^	} fields;$/;"	m	union:__anon32	typeref:struct:__anon32::__anon33	file:
fileio	videobuf2-core.h	/^	struct vb2_fileio_data		*fileio;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::vb2_fileio_data
fileio_read_once	videobuf2-core.h	/^	unsigned			fileio_read_once:1;$/;"	m	struct:vb2_queue
fileio_write_immediately	videobuf2-core.h	/^	unsigned			fileio_write_immediately:1;$/;"	m	struct:vb2_queue
filename	ffs-test.c	/^	const char *const filename;$/;"	m	struct:thread	file:
fill_event	v4l2-ctrls.c	/^static void fill_event(struct v4l2_event *ev, struct v4l2_ctrl *ctrl, u32 changes)$/;"	f	file:
fill_in_buf	ffs-test.c	/^fill_in_buf(struct thread *ignore, void *buf, size_t nbytes)$/;"	f	file:
fill_user_buffer	videobuf2-core.h	/^	void (*fill_user_buffer)(struct vb2_buffer *vb, void *pb);$/;"	m	struct:vb2_buf_ops
fill_vb2_buffer	videobuf2-core.h	/^	int (*fill_vb2_buffer)(struct vb2_buffer *vb, const void *pb,$/;"	m	struct:vb2_buf_ops
filter	dmxdev.h	/^	struct dmxdev_filter *filter;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::dmxdev_filter
filter	dmxdev.h	/^	} filter;$/;"	m	struct:dmxdev_filter	typeref:union:dmxdev_filter::__anon2
filter	dvb_demux.h	/^	struct dmx_section_filter filter;$/;"	m	struct:dvb_demux_filter	typeref:struct:dvb_demux_filter::dmx_section_filter
filter	dvb_demux.h	/^	struct dvb_demux_filter *filter;$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::dvb_demux_filter
filter	dvb_demux.h	/^	struct dvb_demux_filter *filter;$/;"	m	struct:dvb_demux_feed	typeref:struct:dvb_demux_feed::dvb_demux_filter
filter_mask	demux.h	/^	u8 filter_mask[DMX_MAX_FILTER_SIZE];$/;"	m	struct:dmx_section_filter
filter_mode	demux.h	/^	u8 filter_mode[DMX_MAX_FILTER_SIZE];$/;"	m	struct:dmx_section_filter
filter_value	demux.h	/^	u8 filter_value[DMX_MAX_FILTER_SIZE];$/;"	m	struct:dmx_section_filter
filternum	dmxdev.h	/^	int filternum;$/;"	m	struct:dmxdev
filternum	dvb_demux.h	/^	int filternum;$/;"	m	struct:dvb_demux
find_dr	devres.c	/^static struct devres *find_dr(struct device *dev, dr_release_t release,$/;"	f	file:
find_group	devres.c	/^static struct devres_group * find_group(struct device *dev, void *id)$/;"	f	file:
find_private_ref	v4l2-ctrls.c	/^static struct v4l2_ctrl_ref *find_private_ref($/;"	f	file:
find_ref	v4l2-ctrls.c	/^static struct v4l2_ctrl_ref *find_ref(struct v4l2_ctrl_handler *hdl, u32 id)$/;"	f	file:
find_ref_lock	v4l2-ctrls.c	/^static struct v4l2_ctrl_ref *find_ref_lock($/;"	f	file:
find_testdev	testusb.c	/^static int find_testdev(const char *name, const struct stat *sb, int flag)$/;"	f	file:
finish	videobuf2-core.h	/^	void		(*finish)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
finished	v4l2-mem2mem.h	/^	wait_queue_head_t		finished;$/;"	m	struct:v4l2_m2m_ctx
first	driver.h	/^	unsigned int first;$/;"	m	struct:gpio_irq_chip
first	v4l2-event.h	/^	unsigned int		first;$/;"	m	struct:v4l2_subscribed_event
first_write	i2c-slave-eeprom.c	/^	bool first_write;$/;"	m	struct:eeprom_data	file:
fixed_accuracy	clk-provider.h	/^	unsigned long	fixed_accuracy;$/;"	m	struct:clk_fixed_rate
fixed_get_rate	v4l2-clk.c	/^static unsigned long fixed_get_rate(struct v4l2_clk *clk)$/;"	f	file:
fixed_rate	clk-provider.h	/^	unsigned long	fixed_rate;$/;"	m	struct:clk_fixed_rate
flags	clk-provider.h	/^	u8		flags;$/;"	m	struct:clk_divider
flags	clk-provider.h	/^	u8		flags;$/;"	m	struct:clk_fixed_rate
flags	clk-provider.h	/^	u8		flags;$/;"	m	struct:clk_fractional_divider
flags	clk-provider.h	/^	u8		flags;$/;"	m	struct:clk_gate
flags	clk-provider.h	/^	u8		flags;$/;"	m	struct:clk_multiplier
flags	clk-provider.h	/^	u8		flags;$/;"	m	struct:clk_mux
flags	clk-provider.h	/^	unsigned long		flags;$/;"	m	struct:clk_init_data
flags	device.h	/^	u32 flags;$/;"	m	struct:device_link
flags	dvb_vb2.h	/^	enum dmx_buffer_flags flags;$/;"	m	struct:dvb_vb2_ctx	typeref:enum:dvb_vb2_ctx::dmx_buffer_flags
flags	gpio.h	/^	unsigned long	flags;$/;"	m	struct:gpio
flags	i2c-dev.c	/^	u16 flags;$/;"	m	struct:i2c_msg32	file:
flags	i2c.h	/^	u64 flags;$/;"	m	struct:i2c_adapter_quirks
flags	i2c.h	/^	unsigned short	flags;$/;"	m	struct:i2c_board_info
flags	i2c.h	/^	unsigned short flags;		\/* div., see below		*\/$/;"	m	struct:i2c_client
flags	machine.h	/^	enum gpio_lookup_flags flags;$/;"	m	struct:gpiod_lookup	typeref:enum:gpiod_lookup::gpio_lookup_flags
flags	media-devnode.h	/^	unsigned long flags;		\/* Use bitops to access flags *\/$/;"	m	struct:media_devnode
flags	media-entity.h	/^	u32				flags;$/;"	m	struct:media_interface
flags	media-entity.h	/^	unsigned long flags;$/;"	m	struct:media_entity
flags	media-entity.h	/^	unsigned long flags;$/;"	m	struct:media_link
flags	media-entity.h	/^	unsigned long flags;$/;"	m	struct:media_pad
flags	media.h	/^	__u32 flags;		\/* pad flags *\/$/;"	m	struct:media_pad_desc
flags	media.h	/^	__u32 flags;$/;"	m	struct:media_entity_desc
flags	media.h	/^	__u32 flags;$/;"	m	struct:media_link_desc
flags	media.h	/^	__u32 flags;$/;"	m	struct:media_v2_entity
flags	media.h	/^	__u32 flags;$/;"	m	struct:media_v2_interface
flags	media.h	/^	__u32 flags;$/;"	m	struct:media_v2_link
flags	media.h	/^	__u32 flags;$/;"	m	struct:media_v2_pad
flags	mod_devicetable.h	/^	kernel_ulong_t flags;$/;"	m	struct:input_device_id
flags	soc_camera.h	/^	unsigned long flags;$/;"	m	struct:soc_camera_link
flags	soc_camera.h	/^	unsigned long flags;$/;"	m	struct:soc_camera_sense
flags	soc_camera.h	/^	unsigned long flags;$/;"	m	struct:soc_camera_subdev_desc
flags	v4l2-compat-ioctl32.c	/^	__u32			flags;$/;"	m	struct:v4l2_buffer32	file:
flags	v4l2-compat-ioctl32.c	/^	__u32			flags;$/;"	m	struct:v4l2_framebuffer32	file:
flags	v4l2-ctrls.h	/^	u32 flags;$/;"	m	struct:v4l2_ctrl_config
flags	v4l2-ctrls.h	/^	unsigned long flags;$/;"	m	struct:v4l2_ctrl
flags	v4l2-dev.h	/^	unsigned long flags;$/;"	m	struct:video_device
flags	v4l2-event.h	/^	u32			flags;$/;"	m	struct:v4l2_subscribed_event
flags	v4l2-fwnode.h	/^	unsigned int flags;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi2
flags	v4l2-fwnode.h	/^	unsigned int flags;$/;"	m	struct:v4l2_fwnode_bus_parallel
flags	v4l2-ioctl.c	/^	u32 flags;$/;"	m	struct:v4l2_ioctl_info	file:
flags	v4l2-mediabus.h	/^	unsigned int flags;$/;"	m	struct:v4l2_mbus_config
flags	v4l2-subdev.h	/^	enum v4l2_mbus_frame_desc_flags flags;$/;"	m	struct:v4l2_mbus_frame_desc_entry	typeref:enum:v4l2_mbus_frame_desc_entry::v4l2_mbus_frame_desc_flags
flags	v4l2-subdev.h	/^	u32 flags;$/;"	m	struct:v4l2_subdev
flags	v4l2-subdev.h	/^	u32 flags;$/;"	m	struct:v4l2_subdev_io_pin_config
flags	videobuf2-v4l2.h	/^	__u32			flags;$/;"	m	struct:vb2_v4l2_buffer
flags	videodev2.h	/^	__u32				flags;$/;"	m	struct:v4l2_event_subscription
flags	videodev2.h	/^	__u32			flags;		\/* format flags (V4L2_PIX_FMT_FLAG_*) *\/$/;"	m	struct:v4l2_pix_format
flags	videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_buffer
flags	videodev2.h	/^	__u32			flags;$/;"	m	struct:v4l2_framebuffer
flags	videodev2.h	/^	__u32		flags;$/;"	m	struct:v4l2_exportbuffer
flags	videodev2.h	/^	__u32	flags;			\/* V4L2_VBI_* *\/$/;"	m	struct:v4l2_vbi_format
flags	videodev2.h	/^	__u32	flags;$/;"	m	struct:v4l2_bt_timings
flags	videodev2.h	/^	__u32	flags;$/;"	m	struct:v4l2_timecode
flags	videodev2.h	/^	__u32                   flags;$/;"	m	struct:v4l2_selection
flags	videodev2.h	/^	__u32                flags;$/;"	m	struct:v4l2_query_ext_ctrl
flags	videodev2.h	/^	__u32                flags;$/;"	m	struct:v4l2_queryctrl
flags	videodev2.h	/^	__u32               flags;$/;"	m	struct:v4l2_fmtdesc
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_dbg_chip_info
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_decoder_cmd
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_enc_idx_entry
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_encoder_cmd
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_event_ctrl
flags	videodev2.h	/^	__u32 flags;$/;"	m	struct:v4l2_event_motion_det
flags	videodev2.h	/^	__u8				flags;$/;"	m	struct:v4l2_pix_format_mplane
flash_faults	v4l2-flash-led-class.h	/^	u32 flash_faults;$/;"	m	struct:v4l2_flash_config
fled_cdev	v4l2-flash-led-class.h	/^	struct led_classdev_flash *fled_cdev;$/;"	m	struct:v4l2_flash	typeref:struct:v4l2_flash::led_classdev_flash
fm_gain_normal	tuner-types.h	/^	unsigned int fm_gain_normal:1;$/;"	m	struct:tuner_params
fmt	v4l2-compat-ioctl32.c	/^	} fmt;$/;"	m	struct:v4l2_format32	typeref:union:v4l2_format32::__anon37	file:
fmt	v4l2-compat-ioctl32.c	/^	} fmt;$/;"	m	struct:v4l2_framebuffer32	typeref:struct:v4l2_framebuffer32::__anon40	file:
fmt	videodev2.h	/^	} fmt;$/;"	m	struct:v4l2_format	typeref:union:v4l2_format::__anon67
fmt	videodev2.h	/^	} fmt;$/;"	m	struct:v4l2_framebuffer	typeref:struct:v4l2_framebuffer::__anon53
follower_cnt	cec.h	/^	u32 follower_cnt;$/;"	m	struct:cec_adapter
fops	dvbdev.h	/^	const struct file_operations *fops;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::file_operations
fops	media-devnode.h	/^	const struct media_file_operations *fops;$/;"	m	struct:media_devnode	typeref:struct:media_devnode::media_file_operations
fops	v4l2-dev.h	/^	const struct v4l2_file_operations *fops;$/;"	m	struct:video_device	typeref:struct:video_device::v4l2_file_operations
forever	testusb.c	/^	unsigned		forever : 1;$/;"	m	struct:testdev	file:
format	mod_devicetable.h	/^	__u8  format;			\/* Format version or IPACK_ANY_ID *\/$/;"	m	struct:ipack_device_id
format	v4l2-compat-ioctl32.c	/^	struct v4l2_format32	format;$/;"	m	struct:v4l2_create_buffers32	typeref:struct:v4l2_create_buffers32::v4l2_format32	file:
format	videodev2.h	/^			__u32 format;$/;"	m	struct:v4l2_decoder_cmd::__anon61::__anon63
format	videodev2.h	/^	struct v4l2_format	format;$/;"	m	struct:v4l2_create_buffers	typeref:struct:v4l2_create_buffers::v4l2_format
frame_sequence	videodev2.h	/^	__u32 frame_sequence;$/;"	m	struct:v4l2_event_frame_sync
frame_sequence	videodev2.h	/^	__u32 frame_sequence;$/;"	m	struct:v4l2_event_motion_det
frame_sync	videodev2.h	/^		struct v4l2_event_frame_sync	frame_sync;$/;"	m	union:v4l2_event::__anon70	typeref:struct:v4l2_event::__anon70::v4l2_event_frame_sync
framelines	v4l2-compat-ioctl32.c	/^	__u32		     framelines;$/;"	m	struct:v4l2_standard32	file:
framelines	videodev2.h	/^	__u32		     framelines;$/;"	m	struct:v4l2_standard
frameperiod	v4l2-compat-ioctl32.c	/^	struct v4l2_fract    frameperiod; \/* Frames, not fields *\/$/;"	m	struct:v4l2_standard32	typeref:struct:v4l2_standard32::v4l2_fract	file:
frameperiod	videodev2.h	/^	struct v4l2_fract    frameperiod; \/* Frames, not fields *\/$/;"	m	struct:v4l2_standard	typeref:struct:v4l2_standard::v4l2_fract
frames	videodev2.h	/^	__u8	frames;$/;"	m	struct:v4l2_timecode
free	cec-pin.h	/^	void (*free)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
free	driver.h	/^	void			(*free)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
free	module.h	/^	void (*free)(struct module *);$/;"	m	struct:module_attribute
free_bus	soc_camera.h	/^	void (*free_bus)(struct soc_camera_link *);$/;"	m	struct:soc_camera_link
free_bus	soc_camera.h	/^	void (*free_bus)(struct soc_camera_subdev_desc *);$/;"	m	struct:soc_camera_subdev_desc
freeze	pm.h	/^	int (*freeze)(struct device *dev);$/;"	m	struct:dev_pm_ops
freeze_late	pm.h	/^	int (*freeze_late)(struct device *dev);$/;"	m	struct:dev_pm_ops
freeze_noirq	pm.h	/^	int (*freeze_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops
frequency	dvb_frontend.h	/^	u32			frequency;$/;"	m	struct:dtv_frontend_properties
frequency	dvb_frontend.h	/^	unsigned int frequency;$/;"	m	struct:analog_parameters
frequency	videodev2.h	/^	__u32	frequency;$/;"	m	struct:v4l2_frequency
frequency_max_hz	dvb_frontend.h	/^	u32	frequency_max_hz;$/;"	m	struct:dvb_frontend_internal_info
frequency_max_hz	dvb_frontend.h	/^	u32 frequency_max_hz;$/;"	m	struct:dvb_tuner_info
frequency_min_hz	dvb_frontend.h	/^	u32	frequency_min_hz;$/;"	m	struct:dvb_frontend_internal_info
frequency_min_hz	dvb_frontend.h	/^	u32 frequency_min_hz;$/;"	m	struct:dvb_tuner_info
frequency_step_hz	dvb_frontend.h	/^	u32 frequency_step_hz;$/;"	m	struct:dvb_tuner_info
frequency_stepsize_hz	dvb_frontend.h	/^	u32	frequency_stepsize_hz;$/;"	m	struct:dvb_frontend_internal_info
frequency_tolerance_hz	dvb_frontend.h	/^	u32	frequency_tolerance_hz;$/;"	m	struct:dvb_frontend_internal_info
frontend	demux.h	/^	struct dmx_frontend *frontend;$/;"	m	struct:dmx_demux	typeref:struct:dmx_demux::dmx_frontend
frontend	videobuf2-dvb.h	/^	struct dvb_frontend	*frontend;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::dvb_frontend
frontend_list	dvb_demux.h	/^	struct list_head frontend_list;$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::list_head
frontend_priv	dvb_frontend.h	/^	void *frontend_priv;$/;"	m	struct:dvb_frontend
fs_count	ffs-test.c	/^	__le32 fs_count;$/;"	m	struct:__anon8	file:
fs_descs	ffs-test.c	/^	} __attribute__((packed)) fs_descs, hs_descs;$/;"	m	struct:__anon8	typeref:struct:__anon8::__anon9	file:
fs_initcall	module.h	118;"	d
fs_initcall_sync	module.h	119;"	d
fsl_mc_device_id	mod_devicetable.h	/^struct fsl_mc_device_id {$/;"	s
ftrace_callsites	module.h	/^	unsigned long *ftrace_callsites;$/;"	m	struct:module
ftrace_dump	kernel.h	/^static inline void ftrace_dump(enum ftrace_dump_mode oops_dump_mode) { }$/;"	f
ftrace_dump_mode	kernel.h	/^enum ftrace_dump_mode {$/;"	g
ftrace_vprintk	kernel.h	/^ftrace_vprintk(const char *fmt, va_list ap)$/;"	f
ftrace_vprintk	kernel.h	790;"	d
func	v4l2-ioctl.c	/^	int (*func)(const struct v4l2_ioctl_ops *ops, struct file *file,$/;"	m	struct:v4l2_ioctl_info	file:
func_id	mod_devicetable.h	/^	__u8  		func_id;$/;"	m	struct:pcmcia_device_id
function	media-entity.h	/^	u32 function;$/;"	m	struct:media_entity
function	media.h	/^	__u32 function;		\/* Main function of the entity *\/$/;"	m	struct:media_v2_entity
function	mod_devicetable.h	/^	__u8  		function;$/;"	m	struct:pcmcia_device_id
function	mod_devicetable.h	/^	unsigned short vendor, function;$/;"	m	struct:isapnp_device_id
function	v4l2-subdev.h	/^	u8 function;$/;"	m	struct:v4l2_subdev_io_pin_config
functionality	i2c.h	/^	u32 (*functionality) (struct i2c_adapter *);$/;"	m	struct:i2c_algorithm
fwnode	device.h	/^	struct fwnode_handle	*fwnode; \/* firmware device node *\/$/;"	m	struct:device	typeref:struct:device::fwnode_handle
fwnode	fwnode.h	/^	struct fwnode_handle *fwnode;$/;"	m	struct:fwnode_reference_args	typeref:struct:fwnode_reference_args::fwnode_handle
fwnode	i2c.h	/^	struct fwnode_handle *fwnode;$/;"	m	struct:i2c_board_info	typeref:struct:i2c_board_info::fwnode_handle
fwnode	property.c	/^	struct fwnode_handle fwnode;$/;"	m	struct:property_set	typeref:struct:property_set::fwnode_handle	file:
fwnode	v4l2-async.h	/^		struct fwnode_handle *fwnode;$/;"	m	union:v4l2_async_subdev::__anon34	typeref:struct:v4l2_async_subdev::__anon34::fwnode_handle
fwnode	v4l2-subdev.h	/^	struct fwnode_handle *fwnode;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::fwnode_handle
fwnode_call_bool_op	fwnode.h	116;"	d
fwnode_call_int_op	fwnode.h	112;"	d
fwnode_call_ptr_op	fwnode.h	120;"	d
fwnode_call_void_op	fwnode.h	123;"	d
fwnode_device_is_available	property.c	/^EXPORT_SYMBOL_GPL(fwnode_device_is_available);$/;"	v
fwnode_device_is_available	property.c	/^bool fwnode_device_is_available(const struct fwnode_handle *fwnode)$/;"	f
fwnode_endpoint	fwnode.h	/^struct fwnode_endpoint {$/;"	s
fwnode_for_each_available_child_node	property.h	93;"	d
fwnode_for_each_child_node	property.h	89;"	d
fwnode_get_mac_addr	property.c	/^static void *fwnode_get_mac_addr(struct fwnode_handle *fwnode,$/;"	f	file:
fwnode_get_mac_address	property.c	/^EXPORT_SYMBOL(fwnode_get_mac_address);$/;"	v
fwnode_get_mac_address	property.c	/^void *fwnode_get_mac_address(struct fwnode_handle *fwnode, char *addr, int alen)$/;"	f
fwnode_get_named_child_node	property.c	/^EXPORT_SYMBOL_GPL(fwnode_get_named_child_node);$/;"	v
fwnode_get_named_child_node	property.c	/^fwnode_get_named_child_node(const struct fwnode_handle *fwnode,$/;"	f
fwnode_get_named_gpiod	consumer.h	/^struct gpio_desc *fwnode_get_named_gpiod(struct fwnode_handle *fwnode,$/;"	f
fwnode_get_next_available_child_node	property.c	/^EXPORT_SYMBOL_GPL(fwnode_get_next_available_child_node);$/;"	v
fwnode_get_next_available_child_node	property.c	/^fwnode_get_next_available_child_node(const struct fwnode_handle *fwnode,$/;"	f
fwnode_get_next_child_node	property.c	/^EXPORT_SYMBOL_GPL(fwnode_get_next_child_node);$/;"	v
fwnode_get_next_child_node	property.c	/^fwnode_get_next_child_node(const struct fwnode_handle *fwnode,$/;"	f
fwnode_get_next_parent	property.c	/^EXPORT_SYMBOL_GPL(fwnode_get_next_parent);$/;"	v
fwnode_get_next_parent	property.c	/^struct fwnode_handle *fwnode_get_next_parent(struct fwnode_handle *fwnode)$/;"	f
fwnode_get_parent	property.c	/^EXPORT_SYMBOL_GPL(fwnode_get_parent);$/;"	v
fwnode_get_parent	property.c	/^struct fwnode_handle *fwnode_get_parent(const struct fwnode_handle *fwnode)$/;"	f
fwnode_get_phy_mode	property.c	/^EXPORT_SYMBOL_GPL(fwnode_get_phy_mode);$/;"	v
fwnode_get_phy_mode	property.c	/^int fwnode_get_phy_mode(struct fwnode_handle *fwnode)$/;"	f
fwnode_graph_for_each_endpoint	property.h	307;"	d
fwnode_graph_get_next_endpoint	property.c	/^EXPORT_SYMBOL_GPL(fwnode_graph_get_next_endpoint);$/;"	v
fwnode_graph_get_next_endpoint	property.c	/^fwnode_graph_get_next_endpoint(const struct fwnode_handle *fwnode,$/;"	f
fwnode_graph_get_port_parent	property.c	/^EXPORT_SYMBOL_GPL(fwnode_graph_get_port_parent);$/;"	v
fwnode_graph_get_port_parent	property.c	/^fwnode_graph_get_port_parent(const struct fwnode_handle *endpoint)$/;"	f
fwnode_graph_get_remote_endpoint	property.c	/^EXPORT_SYMBOL_GPL(fwnode_graph_get_remote_endpoint);$/;"	v
fwnode_graph_get_remote_endpoint	property.c	/^fwnode_graph_get_remote_endpoint(const struct fwnode_handle *fwnode)$/;"	f
fwnode_graph_get_remote_node	property.c	/^EXPORT_SYMBOL_GPL(fwnode_graph_get_remote_node);$/;"	v
fwnode_graph_get_remote_node	property.c	/^fwnode_graph_get_remote_node(const struct fwnode_handle *fwnode, u32 port_id,$/;"	f
fwnode_graph_get_remote_port	property.c	/^EXPORT_SYMBOL_GPL(fwnode_graph_get_remote_port);$/;"	v
fwnode_graph_get_remote_port	property.c	/^fwnode_graph_get_remote_port(const struct fwnode_handle *fwnode)$/;"	f
fwnode_graph_get_remote_port_parent	property.c	/^EXPORT_SYMBOL_GPL(fwnode_graph_get_remote_port_parent);$/;"	v
fwnode_graph_get_remote_port_parent	property.c	/^fwnode_graph_get_remote_port_parent(const struct fwnode_handle *fwnode)$/;"	f
fwnode_graph_parse_endpoint	property.c	/^EXPORT_SYMBOL(fwnode_graph_parse_endpoint);$/;"	v
fwnode_graph_parse_endpoint	property.c	/^int fwnode_graph_parse_endpoint(const struct fwnode_handle *fwnode,$/;"	f
fwnode_handle	fwnode.h	/^struct fwnode_handle {$/;"	s
fwnode_handle_get	property.c	/^EXPORT_SYMBOL_GPL(fwnode_handle_get);$/;"	v
fwnode_handle_get	property.c	/^struct fwnode_handle *fwnode_handle_get(struct fwnode_handle *fwnode)$/;"	f
fwnode_handle_put	property.c	/^EXPORT_SYMBOL_GPL(fwnode_handle_put);$/;"	v
fwnode_handle_put	property.c	/^void fwnode_handle_put(struct fwnode_handle *fwnode)$/;"	f
fwnode_has_op	fwnode.h	110;"	d
fwnode_irq_get	property.c	/^EXPORT_SYMBOL(fwnode_irq_get);$/;"	v
fwnode_irq_get	property.c	/^int fwnode_irq_get(struct fwnode_handle *fwnode, unsigned int index)$/;"	f
fwnode_operations	fwnode.h	/^struct fwnode_operations {$/;"	s
fwnode_property_get_reference_args	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_get_reference_args);$/;"	v
fwnode_property_get_reference_args	property.c	/^int fwnode_property_get_reference_args(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_match_string	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_match_string);$/;"	v
fwnode_property_match_string	property.c	/^int fwnode_property_match_string(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_present	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_present);$/;"	v
fwnode_property_present	property.c	/^bool fwnode_property_present(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_bool	property.h	/^static inline bool fwnode_property_read_bool(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_int_array	property.c	/^static int fwnode_property_read_int_array(const struct fwnode_handle *fwnode,$/;"	f	file:
fwnode_property_read_string	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_read_string);$/;"	v
fwnode_property_read_string	property.c	/^int fwnode_property_read_string(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_string_array	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_read_string_array);$/;"	v
fwnode_property_read_string_array	property.c	/^int fwnode_property_read_string_array(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u16	property.h	/^static inline int fwnode_property_read_u16(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u16_array	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_read_u16_array);$/;"	v
fwnode_property_read_u16_array	property.c	/^int fwnode_property_read_u16_array(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u32	property.h	/^static inline int fwnode_property_read_u32(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u32_array	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_read_u32_array);$/;"	v
fwnode_property_read_u32_array	property.c	/^int fwnode_property_read_u32_array(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u64	property.h	/^static inline int fwnode_property_read_u64(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u64_array	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_read_u64_array);$/;"	v
fwnode_property_read_u64_array	property.c	/^int fwnode_property_read_u64_array(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u8	property.h	/^static inline int fwnode_property_read_u8(const struct fwnode_handle *fwnode,$/;"	f
fwnode_property_read_u8_array	property.c	/^EXPORT_SYMBOL_GPL(fwnode_property_read_u8_array);$/;"	v
fwnode_property_read_u8_array	property.c	/^int fwnode_property_read_u8_array(const struct fwnode_handle *fwnode,$/;"	f
fwnode_reference_args	fwnode.h	/^struct fwnode_reference_args {$/;"	s
g_dv_timings	v4l2-subdev.h	/^	int (*g_dv_timings)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
g_frame_interval	v4l2-subdev.h	/^	int (*g_frame_interval)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
g_frequency	v4l2-subdev.h	/^	int (*g_frequency)(struct v4l2_subdev *sd, struct v4l2_frequency *freq);$/;"	m	struct:v4l2_subdev_tuner_ops
g_input_status	v4l2-subdev.h	/^	int (*g_input_status)(struct v4l2_subdev *sd, u32 *status);$/;"	m	struct:v4l2_subdev_video_ops
g_mbus_config	v4l2-subdev.h	/^	int (*g_mbus_config)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
g_modulator	v4l2-subdev.h	/^	int (*g_modulator)(struct v4l2_subdev *sd, struct v4l2_modulator *vm);$/;"	m	struct:v4l2_subdev_tuner_ops
g_pixelaspect	v4l2-subdev.h	/^	int (*g_pixelaspect)(struct v4l2_subdev *sd, struct v4l2_fract *aspect);$/;"	m	struct:v4l2_subdev_video_ops
g_register	v4l2-subdev.h	/^	int (*g_register)(struct v4l2_subdev *sd, struct v4l2_dbg_register *reg);$/;"	m	struct:v4l2_subdev_core_ops
g_skip_frames	v4l2-subdev.h	/^	int (*g_skip_frames)(struct v4l2_subdev *sd, u32 *frames);$/;"	m	struct:v4l2_subdev_sensor_ops
g_skip_top_lines	v4l2-subdev.h	/^	int (*g_skip_top_lines)(struct v4l2_subdev *sd, u32 *lines);$/;"	m	struct:v4l2_subdev_sensor_ops
g_sliced_fmt	v4l2-subdev.h	/^	int (*g_sliced_fmt)(struct v4l2_subdev *sd, struct v4l2_sliced_vbi_format *fmt);$/;"	m	struct:v4l2_subdev_vbi_ops
g_sliced_vbi_cap	v4l2-subdev.h	/^	int (*g_sliced_vbi_cap)(struct v4l2_subdev *sd, struct v4l2_sliced_vbi_cap *cap);$/;"	m	struct:v4l2_subdev_vbi_ops
g_std	v4l2-subdev.h	/^	int (*g_std)(struct v4l2_subdev *sd, v4l2_std_id *norm);$/;"	m	struct:v4l2_subdev_video_ops
g_std_output	v4l2-subdev.h	/^	int (*g_std_output)(struct v4l2_subdev *sd, v4l2_std_id *std);$/;"	m	struct:v4l2_subdev_video_ops
g_tuner	v4l2-subdev.h	/^	int (*g_tuner)(struct v4l2_subdev *sd, struct v4l2_tuner *vt);$/;"	m	struct:v4l2_subdev_tuner_ops
g_tvnorms	v4l2-subdev.h	/^	int (*g_tvnorms)(struct v4l2_subdev *sd, v4l2_std_id *std);$/;"	m	struct:v4l2_subdev_video_ops
g_tvnorms_output	v4l2-subdev.h	/^	int (*g_tvnorms_output)(struct v4l2_subdev *sd, v4l2_std_id *std);$/;"	m	struct:v4l2_subdev_video_ops
g_vbi_data	v4l2-subdev.h	/^	int (*g_vbi_data)(struct v4l2_subdev *sd, struct v4l2_sliced_vbi_data *vbi_data);$/;"	m	struct:v4l2_subdev_vbi_ops
g_volatile_ctrl	v4l2-ctrls.h	/^	int (*g_volatile_ctrl)(struct v4l2_ctrl *ctrl);$/;"	m	struct:v4l2_ctrl_ops
gap	rc-core.h	/^	bool				gap;$/;"	m	struct:rc_dev
gap_duration	rc-core.h	/^	u64				gap_duration;$/;"	m	struct:rc_dev
gap_start	rc-core.h	/^	ktime_t				gap_start;$/;"	m	struct:rc_dev
gate	i2c-mux.h	/^	unsigned int gate:1;$/;"	m	struct:i2c_mux_core
gate	videobuf2-dvb.h	/^	int gate; \/* Frontend with gate control 0=!MFE,1=fe0,2=fe1 etc *\/$/;"	m	struct:vb2_dvb_frontends
gate_hw	clk-provider.h	/^	struct clk_hw	*gate_hw;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_hw
gate_ops	clk-provider.h	/^	const struct clk_ops	*gate_ops;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_ops
get	driver.h	/^	int			(*get)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
get	fwnode.h	/^	struct fwnode_handle *(*get)(struct fwnode_handle *fwnode);$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::get
get_afc	dvb_frontend.h	/^	int  (*get_afc)(struct dvb_frontend *fe, s32 *afc);$/;"	m	struct:analog_demod_ops
get_afc	dvb_frontend.h	/^	int (*get_afc)(struct dvb_frontend *fe, s32 *afc);$/;"	m	struct:dvb_tuner_ops
get_bandwidth	dvb_frontend.h	/^	int (*get_bandwidth)(struct dvb_frontend *fe, u32 *bandwidth);$/;"	m	struct:dvb_tuner_ops
get_bus_free	i2c.h	/^	int (*get_bus_free)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info
get_ctrl	v4l2-ctrls.c	/^static int get_ctrl(struct v4l2_ctrl *ctrl, struct v4l2_ext_control *c)$/;"	f	file:
get_direction	driver.h	/^	int			(*get_direction)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
get_dmabuf	videobuf2-core.h	/^	struct dma_buf *(*get_dmabuf)(void *buf_priv, unsigned long flags);$/;"	m	struct:vb2_mem_ops	typeref:struct:vb2_mem_ops::get_dmabuf
get_duty_cycle	clk-provider.h	/^	int		(*get_duty_cycle)(struct clk_hw *hw,$/;"	m	struct:clk_ops
get_edid	v4l2-subdev.h	/^	int (*get_edid)(struct v4l2_subdev *sd, struct v4l2_edid *edid);$/;"	m	struct:v4l2_subdev_pad_ops
get_fmt	v4l2-subdev.h	/^	int (*get_fmt)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
get_formats	soc_camera.h	/^	int (*get_formats)(struct soc_camera_device *, unsigned int,$/;"	m	struct:soc_camera_host_ops
get_frame_desc	v4l2-subdev.h	/^	int (*get_frame_desc)(struct v4l2_subdev *sd, unsigned int pad,$/;"	m	struct:v4l2_subdev_pad_ops
get_free_i2c_dev	i2c-dev.c	/^static struct i2c_dev *get_free_i2c_dev(struct i2c_adapter *adap)$/;"	f	file:
get_frequency	dvb_frontend.h	/^	int (*get_frequency)(struct dvb_frontend *fe, u32 *frequency);$/;"	m	struct:dvb_tuner_ops
get_frontend	dvb_frontend.h	/^	int (*get_frontend)(struct dvb_frontend *fe,$/;"	m	struct:dvb_frontend_ops
get_frontend_algo	dvb_frontend.h	/^	enum dvbfe_algo (*get_frontend_algo)(struct dvb_frontend *fe);$/;"	m	struct:dvb_frontend_ops	typeref:enum:dvb_frontend_ops::get_frontend_algo
get_frontends	demux.h	/^	struct list_head *(*get_frontends)(struct dmx_demux *demux);$/;"	m	struct:dmx_demux	typeref:struct:dmx_demux::get_frontends
get_fwnode_pad	media-entity.h	/^	int (*get_fwnode_pad)(struct fwnode_endpoint *endpoint);$/;"	m	struct:media_entity_operations
get_if_frequency	dvb_frontend.h	/^	int (*get_if_frequency)(struct dvb_frontend *fe, u32 *frequency);$/;"	m	struct:dvb_tuner_ops
get_index	v4l2-dev.c	/^static int get_index(struct video_device *vdev)$/;"	f	file:
get_multiple	driver.h	/^	int			(*get_multiple)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
get_named_child_node	fwnode.h	/^	(*get_named_child_node)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::get_named_child_node
get_next_child_node	fwnode.h	/^	(*get_next_child_node)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::get_next_child_node
get_ownership	device.h	/^	void (*get_ownership)(struct device *dev, kuid_t *uid, kgid_t *gid);$/;"	m	class:__anon1
get_parent	clk-provider.h	/^	u8		(*get_parent)(struct clk_hw *hw);$/;"	m	struct:clk_ops
get_parent	fwnode.h	/^	struct fwnode_handle *(*get_parent)(const struct fwnode_handle *fwnode);$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::get_parent
get_parm	soc_camera.h	/^	int (*get_parm)(struct soc_camera_device *, struct v4l2_streamparm *);$/;"	m	struct:soc_camera_host_ops
get_pes_pids	demux.h	/^	int (*get_pes_pids)(struct dmx_demux *demux, u16 *pids);$/;"	m	struct:dmx_demux
get_phase	clk-provider.h	/^	int		(*get_phase)(struct clk_hw *hw);$/;"	m	struct:clk_ops
get_queue_ctx	v4l2-mem2mem.c	/^static struct v4l2_m2m_queue_ctx *get_queue_ctx(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f	file:
get_rate	v4l2-clk.h	/^	unsigned long	(*get_rate)(struct v4l2_clk *clk);$/;"	m	struct:v4l2_clk_ops
get_reference_args	fwnode.h	/^	int (*get_reference_args)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations
get_rf_strength	dvb_frontend.h	/^	int (*get_rf_strength)(struct dvb_frontend *fe, u16 *strength);$/;"	m	struct:dvb_tuner_ops
get_scl	i2c.h	/^	int (*get_scl)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info
get_scl_gpio_value	i2c-core-base.c	/^static int get_scl_gpio_value(struct i2c_adapter *adap)$/;"	f	file:
get_sda	i2c.h	/^	int (*get_sda)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info
get_sda_gpio_value	i2c-core-base.c	/^static int get_sda_gpio_value(struct i2c_adapter *adap)$/;"	f	file:
get_selection	soc_camera.h	/^	int (*get_selection)(struct soc_camera_device *, struct v4l2_selection *);$/;"	m	struct:soc_camera_host_ops
get_selection	v4l2-subdev.h	/^	int (*get_selection)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
get_status	dvb_frontend.h	/^	int (*get_status)(struct dvb_frontend *fe, u32 *status);$/;"	m	struct:dvb_tuner_ops
get_stc	demux.h	/^	int (*get_stc)(struct dmx_demux *demux, unsigned int num,$/;"	m	struct:dmx_demux
get_tune_settings	dvb_frontend.h	/^	int (*get_tune_settings)(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* settings);$/;"	m	struct:dvb_frontend_ops
get_unaligned	unaligned.h	22;"	d
get_unaligned	unaligned.h	30;"	d
get_unaligned_be16	access_ok.h	/^static __always_inline u16 get_unaligned_be16(const void *p)$/;"	f
get_unaligned_be16	be_byteshift.h	/^static inline u16 get_unaligned_be16(const void *p)$/;"	f
get_unaligned_be16	be_memmove.h	/^static inline u16 get_unaligned_be16(const void *p)$/;"	f
get_unaligned_be16	be_struct.h	/^static inline u16 get_unaligned_be16(const void *p)$/;"	f
get_unaligned_be32	access_ok.h	/^static __always_inline u32 get_unaligned_be32(const void *p)$/;"	f
get_unaligned_be32	be_byteshift.h	/^static inline u32 get_unaligned_be32(const void *p)$/;"	f
get_unaligned_be32	be_memmove.h	/^static inline u32 get_unaligned_be32(const void *p)$/;"	f
get_unaligned_be32	be_struct.h	/^static inline u32 get_unaligned_be32(const void *p)$/;"	f
get_unaligned_be64	access_ok.h	/^static __always_inline u64 get_unaligned_be64(const void *p)$/;"	f
get_unaligned_be64	be_byteshift.h	/^static inline u64 get_unaligned_be64(const void *p)$/;"	f
get_unaligned_be64	be_memmove.h	/^static inline u64 get_unaligned_be64(const void *p)$/;"	f
get_unaligned_be64	be_struct.h	/^static inline u64 get_unaligned_be64(const void *p)$/;"	f
get_unaligned_le16	access_ok.h	/^static __always_inline u16 get_unaligned_le16(const void *p)$/;"	f
get_unaligned_le16	le_byteshift.h	/^static inline u16 get_unaligned_le16(const void *p)$/;"	f
get_unaligned_le16	le_memmove.h	/^static inline u16 get_unaligned_le16(const void *p)$/;"	f
get_unaligned_le16	le_struct.h	/^static inline u16 get_unaligned_le16(const void *p)$/;"	f
get_unaligned_le32	access_ok.h	/^static __always_inline u32 get_unaligned_le32(const void *p)$/;"	f
get_unaligned_le32	le_byteshift.h	/^static inline u32 get_unaligned_le32(const void *p)$/;"	f
get_unaligned_le32	le_memmove.h	/^static inline u32 get_unaligned_le32(const void *p)$/;"	f
get_unaligned_le32	le_struct.h	/^static inline u32 get_unaligned_le32(const void *p)$/;"	f
get_unaligned_le64	access_ok.h	/^static __always_inline u64 get_unaligned_le64(const void *p)$/;"	f
get_unaligned_le64	le_byteshift.h	/^static inline u64 get_unaligned_le64(const void *p)$/;"	f
get_unaligned_le64	le_memmove.h	/^static inline u64 get_unaligned_le64(const void *p)$/;"	f
get_unaligned_le64	le_struct.h	/^static inline u64 get_unaligned_le64(const void *p)$/;"	f
get_unmapped_area	v4l2-dev.h	/^	unsigned long (*get_unmapped_area) (struct file *, unsigned long,$/;"	m	struct:v4l2_file_operations
get_user_cast	v4l2-compat-ioctl32.c	57;"	d	file:
get_userptr	videobuf2-core.h	/^	void		*(*get_userptr)(struct device *dev, unsigned long vaddr,$/;"	m	struct:vb2_mem_ops
get_v4l2_buffer32	v4l2-compat-ioctl32.c	/^static int get_v4l2_buffer32(struct v4l2_buffer __user *p64,$/;"	f	file:
get_v4l2_create32	v4l2-compat-ioctl32.c	/^static int get_v4l2_create32(struct v4l2_create_buffers __user *p64,$/;"	f	file:
get_v4l2_edid32	v4l2-compat-ioctl32.c	/^static int get_v4l2_edid32(struct v4l2_edid __user *p64,$/;"	f	file:
get_v4l2_ext_controls32	v4l2-compat-ioctl32.c	/^static int get_v4l2_ext_controls32(struct file *file,$/;"	f	file:
get_v4l2_format32	v4l2-compat-ioctl32.c	/^static int get_v4l2_format32(struct v4l2_format __user *p64,$/;"	f	file:
get_v4l2_framebuffer32	v4l2-compat-ioctl32.c	/^static int get_v4l2_framebuffer32(struct v4l2_framebuffer __user *p64,$/;"	f	file:
get_v4l2_input32	v4l2-compat-ioctl32.c	/^static inline int get_v4l2_input32(struct v4l2_input __user *p64,$/;"	f	file:
get_v4l2_plane32	v4l2-compat-ioctl32.c	/^static int get_v4l2_plane32(struct v4l2_plane __user *p64,$/;"	f	file:
get_v4l2_standard32	v4l2-compat-ioctl32.c	/^static int get_v4l2_standard32(struct v4l2_standard __user *p64,$/;"	f	file:
get_v4l2_window32	v4l2-compat-ioctl32.c	/^static int get_v4l2_window32(struct v4l2_window __user *p64,$/;"	f	file:
getclock	i2c-algo-pcf.h	/^	int  (*getclock) (void *data);$/;"	m	struct:i2c_algo_pcf_data
getown	i2c-algo-pcf.h	/^	int  (*getown) (void *data);$/;"	m	struct:i2c_algo_pcf_data
getpcf	i2c-algo-pcf.h	/^	int  (*getpcf) (void *data, int ctl);$/;"	m	struct:i2c_algo_pcf_data
getscl	i2c-algo-bit.h	/^	int  (*getscl) (void *data);$/;"	m	struct:i2c_algo_bit_data
getsda	i2c-algo-bit.h	/^	int  (*getsda) (void *data);$/;"	m	struct:i2c_algo_bit_data
gfp_flags	videobuf2-core.h	/^	gfp_t				gfp_flags;$/;"	m	struct:vb2_queue
global_alpha	v4l2-compat-ioctl32.c	/^	__u8                    global_alpha;$/;"	m	struct:v4l2_window32	file:
global_alpha	videodev2.h	/^	__u8                    global_alpha;$/;"	m	struct:v4l2_window
glue_dirs	base.h	/^	struct kset glue_dirs;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::kset
gobj0	media-entity.h	/^		struct media_gobj *gobj0;$/;"	m	union:media_link::__anon16	typeref:struct:media_link::__anon16::media_gobj
gobj1	media-entity.h	/^		struct media_gobj *gobj1;$/;"	m	union:media_link::__anon17	typeref:struct:media_link::__anon17::media_gobj
gobj_to_entity	media-entity.h	538;"	d
gobj_to_intf	media-entity.h	565;"	d
gobj_to_link	media-entity.h	556;"	d
gobj_to_pad	media-entity.h	547;"	d
gpio	gpio.h	/^	unsigned	gpio;$/;"	m	struct:gpio
gpio	gpio.h	/^struct gpio {$/;"	s
gpio	gpio_keys.h	/^	int gpio;$/;"	m	struct:gpio_keys_button
gpio_cansleep	gpio.h	/^static inline int gpio_cansleep(unsigned gpio)$/;"	f
gpio_cansleep	gpio.h	/^static inline int gpio_cansleep(unsigned int gpio)$/;"	f
gpio_chip	driver.h	/^struct gpio_chip {$/;"	s
gpio_descs	consumer.h	/^struct gpio_descs {$/;"	s
gpio_direction_input	gpio.h	/^static inline int gpio_direction_input(unsigned gpio)$/;"	f
gpio_direction_output	gpio.h	/^static inline int gpio_direction_output(unsigned gpio, int value)$/;"	f
gpio_export	gpio.h	/^static inline int gpio_export(unsigned gpio, bool direction_may_change)$/;"	f
gpio_export_link	gpio.h	/^static inline int gpio_export_link(struct device *dev, const char *name,$/;"	f
gpio_free	gpio.h	/^static inline void gpio_free(unsigned gpio)$/;"	f
gpio_free_array	gpio.h	/^static inline void gpio_free_array(const struct gpio *array, size_t num)$/;"	f
gpio_get_value	gpio.h	/^static inline int gpio_get_value(unsigned gpio)$/;"	f
gpio_get_value	gpio.h	/^static inline int gpio_get_value(unsigned int gpio)$/;"	f
gpio_get_value_cansleep	gpio.h	/^static inline int gpio_get_value_cansleep(unsigned gpio)$/;"	f
gpio_irq_chip	driver.h	/^struct gpio_irq_chip {$/;"	s
gpio_is_valid	gpio.h	/^static inline bool gpio_is_valid(int number)$/;"	f
gpio_keys_button	gpio_keys.h	/^struct gpio_keys_button {$/;"	s
gpio_keys_platform_data	gpio_keys.h	/^struct gpio_keys_platform_data {$/;"	s
gpio_lookup_flags	machine.h	/^enum gpio_lookup_flags {$/;"	g
gpio_pin_range	driver.h	/^struct gpio_pin_range {$/;"	s
gpio_request	gpio.h	/^static inline int gpio_request(unsigned gpio, const char *label)$/;"	f
gpio_request_array	gpio.h	/^static inline int gpio_request_array(const struct gpio *array, size_t num)$/;"	f
gpio_request_one	gpio.h	/^static inline int gpio_request_one(unsigned gpio,$/;"	f
gpio_set_debounce	gpio.h	/^static inline int gpio_set_debounce(unsigned gpio, unsigned debounce)$/;"	f
gpio_set_value	gpio.h	/^static inline void gpio_set_value(unsigned gpio, int value)$/;"	f
gpio_set_value	gpio.h	/^static inline void gpio_set_value(unsigned int gpio, int value)$/;"	f
gpio_set_value_cansleep	gpio.h	/^static inline void gpio_set_value_cansleep(unsigned gpio, int value)$/;"	f
gpio_to_desc	consumer.h	/^static inline struct gpio_desc *gpio_to_desc(unsigned gpio)$/;"	f
gpio_to_irq	gpio.h	/^static inline int gpio_to_irq(unsigned gpio)$/;"	f
gpio_to_irq	gpio.h	/^static inline int gpio_to_irq(unsigned int gpio)$/;"	f
gpio_unexport	gpio.h	/^static inline void gpio_unexport(unsigned gpio)$/;"	f
gpiochip_add	driver.h	/^static inline int gpiochip_add(struct gpio_chip *chip)$/;"	f
gpiochip_add_data	driver.h	379;"	d
gpiochip_add_data	driver.h	386;"	d
gpiochip_add_pin_range	driver.h	/^gpiochip_add_pin_range(struct gpio_chip *chip, const char *pinctl_name,$/;"	f
gpiochip_add_pingroup_range	driver.h	/^gpiochip_add_pingroup_range(struct gpio_chip *chip,$/;"	f
gpiochip_irqchip_add	driver.h	/^static inline int gpiochip_irqchip_add(struct gpio_chip *gpiochip,$/;"	f
gpiochip_irqchip_add_nested	driver.h	/^static inline int gpiochip_irqchip_add_nested(struct gpio_chip *gpiochip,$/;"	f
gpiochip_lock_as_irq	gpio.h	/^static inline int gpiochip_lock_as_irq(struct gpio_chip *chip,$/;"	f
gpiochip_remove_pin_ranges	driver.h	/^gpiochip_remove_pin_ranges(struct gpio_chip *chip)$/;"	f
gpiochip_unlock_as_irq	gpio.h	/^static inline void gpiochip_unlock_as_irq(struct gpio_chip *chip,$/;"	f
gpiod	clk-provider.h	/^	struct gpio_desc *gpiod;$/;"	m	struct:clk_gpio	typeref:struct:clk_gpio::gpio_desc
gpiod_add_hogs	machine.h	/^static inline void gpiod_add_hogs(struct gpiod_hog *hogs) {}$/;"	f
gpiod_add_lookup_table	machine.h	/^void gpiod_add_lookup_table(struct gpiod_lookup_table *table) {}$/;"	f
gpiod_add_lookup_tables	machine.h	/^void gpiod_add_lookup_tables(struct gpiod_lookup_table **tables, size_t n) {}$/;"	f
gpiod_cansleep	consumer.h	/^static inline int gpiod_cansleep(const struct gpio_desc *desc)$/;"	f
gpiod_count	consumer.h	/^static inline int gpiod_count(struct device *dev, const char *con_id)$/;"	f
gpiod_direction_input	consumer.h	/^static inline int gpiod_direction_input(struct gpio_desc *desc)$/;"	f
gpiod_direction_output	consumer.h	/^static inline int gpiod_direction_output(struct gpio_desc *desc, int value)$/;"	f
gpiod_direction_output_raw	consumer.h	/^static inline int gpiod_direction_output_raw(struct gpio_desc *desc, int value)$/;"	f
gpiod_export	consumer.h	/^static inline int gpiod_export(struct gpio_desc *desc,$/;"	f
gpiod_export_link	consumer.h	/^static inline int gpiod_export_link(struct device *dev, const char *name,$/;"	f
gpiod_flags	consumer.h	/^enum gpiod_flags {$/;"	g
gpiod_get	consumer.h	/^static inline struct gpio_desc *__must_check gpiod_get(struct device *dev,$/;"	f
gpiod_get_array	consumer.h	/^gpiod_get_array(struct device *dev, const char *con_id,$/;"	f
gpiod_get_array_optional	consumer.h	/^gpiod_get_array_optional(struct device *dev, const char *con_id,$/;"	f
gpiod_get_array_value	consumer.h	/^static inline int gpiod_get_array_value(unsigned int array_size,$/;"	f
gpiod_get_array_value_cansleep	consumer.h	/^static inline int gpiod_get_array_value_cansleep(unsigned int array_size,$/;"	f
gpiod_get_direction	consumer.h	/^static inline int gpiod_get_direction(const struct gpio_desc *desc)$/;"	f
gpiod_get_index	consumer.h	/^gpiod_get_index(struct device *dev,$/;"	f
gpiod_get_index_optional	consumer.h	/^gpiod_get_index_optional(struct device *dev, const char *con_id,$/;"	f
gpiod_get_optional	consumer.h	/^gpiod_get_optional(struct device *dev, const char *con_id,$/;"	f
gpiod_get_raw_array_value	consumer.h	/^static inline int gpiod_get_raw_array_value(unsigned int array_size,$/;"	f
gpiod_get_raw_array_value_cansleep	consumer.h	/^static inline int gpiod_get_raw_array_value_cansleep(unsigned int array_size,$/;"	f
gpiod_get_raw_value	consumer.h	/^static inline int gpiod_get_raw_value(const struct gpio_desc *desc)$/;"	f
gpiod_get_raw_value_cansleep	consumer.h	/^static inline int gpiod_get_raw_value_cansleep(const struct gpio_desc *desc)$/;"	f
gpiod_get_value	consumer.h	/^static inline int gpiod_get_value(const struct gpio_desc *desc)$/;"	f
gpiod_get_value_cansleep	consumer.h	/^static inline int gpiod_get_value_cansleep(const struct gpio_desc *desc)$/;"	f
gpiod_hog	machine.h	/^struct gpiod_hog {$/;"	s
gpiod_is_active_low	consumer.h	/^static inline int gpiod_is_active_low(const struct gpio_desc *desc)$/;"	f
gpiod_lookup	machine.h	/^struct gpiod_lookup {$/;"	s
gpiod_lookup_table	machine.h	/^struct gpiod_lookup_table {$/;"	s
gpiod_put	consumer.h	/^static inline void gpiod_put(struct gpio_desc *desc)$/;"	f
gpiod_put_array	consumer.h	/^static inline void gpiod_put_array(struct gpio_descs *descs)$/;"	f
gpiod_remove_lookup_table	machine.h	/^void gpiod_remove_lookup_table(struct gpiod_lookup_table *table) {}$/;"	f
gpiod_set_array_value	consumer.h	/^static inline void gpiod_set_array_value(unsigned int array_size,$/;"	f
gpiod_set_array_value_cansleep	consumer.h	/^static inline void gpiod_set_array_value_cansleep(unsigned int array_size,$/;"	f
gpiod_set_consumer_name	consumer.h	/^static inline int gpiod_set_consumer_name(struct gpio_desc *desc,$/;"	f
gpiod_set_debounce	consumer.h	/^static inline int gpiod_set_debounce(struct gpio_desc *desc, unsigned debounce)$/;"	f
gpiod_set_raw_array_value	consumer.h	/^static inline int gpiod_set_raw_array_value(unsigned int array_size,$/;"	f
gpiod_set_raw_array_value_cansleep	consumer.h	/^static inline int gpiod_set_raw_array_value_cansleep(unsigned int array_size,$/;"	f
gpiod_set_raw_value	consumer.h	/^static inline void gpiod_set_raw_value(struct gpio_desc *desc, int value)$/;"	f
gpiod_set_raw_value_cansleep	consumer.h	/^static inline void gpiod_set_raw_value_cansleep(struct gpio_desc *desc,$/;"	f
gpiod_set_transitory	consumer.h	/^static inline int gpiod_set_transitory(struct gpio_desc *desc, bool transitory)$/;"	f
gpiod_set_value	consumer.h	/^static inline void gpiod_set_value(struct gpio_desc *desc, int value)$/;"	f
gpiod_set_value_cansleep	consumer.h	/^static inline void gpiod_set_value_cansleep(struct gpio_desc *desc, int value)$/;"	f
gpiod_to_chip	driver.h	/^static inline struct gpio_chip *gpiod_to_chip(const struct gpio_desc *desc)$/;"	f
gpiod_to_irq	consumer.h	/^static inline int gpiod_to_irq(const struct gpio_desc *desc)$/;"	f
gpiod_unexport	consumer.h	/^static inline void gpiod_unexport(struct gpio_desc *desc)$/;"	f
gpiodev	driver.h	/^	struct gpio_device	*gpiodev;$/;"	m	struct:gpio_chip	typeref:struct:gpio_chip::gpio_device
gpl_crcs	module.h	/^	const s32 *gpl_crcs;$/;"	m	struct:module
gpl_future_crcs	module.h	/^	const s32 *gpl_future_crcs;$/;"	m	struct:module
gpl_future_syms	module.h	/^	const struct kernel_symbol *gpl_future_syms;$/;"	m	struct:module	typeref:struct:module::kernel_symbol
gpl_syms	module.h	/^	const struct kernel_symbol *gpl_syms;$/;"	m	struct:module	typeref:struct:module::kernel_symbol
graph	media-entity.h	/^	struct media_graph graph;$/;"	m	struct:media_pipeline	typeref:struct:media_pipeline::media_graph
graph_get_next_endpoint	fwnode.h	/^	(*graph_get_next_endpoint)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::graph_get_next_endpoint
graph_get_port_parent	fwnode.h	/^	(*graph_get_port_parent)(struct fwnode_handle *fwnode);$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::graph_get_port_parent
graph_get_remote_endpoint	fwnode.h	/^	(*graph_get_remote_endpoint)(const struct fwnode_handle *fwnode);$/;"	m	struct:fwnode_operations	typeref:struct:fwnode_operations::graph_get_remote_endpoint
graph_mutex	media-device.h	/^	struct mutex graph_mutex;$/;"	m	struct:media_device	typeref:struct:media_device::mutex
graph_obj	media-entity.h	/^	struct media_gobj		graph_obj;$/;"	m	struct:media_interface	typeref:struct:media_interface::media_gobj
graph_obj	media-entity.h	/^	struct media_gobj graph_obj;	\/* must be first field in struct *\/$/;"	m	struct:media_entity	typeref:struct:media_entity::media_gobj
graph_obj	media-entity.h	/^	struct media_gobj graph_obj;	\/* must be first field in struct *\/$/;"	m	struct:media_pad	typeref:struct:media_pad::media_gobj
graph_obj	media-entity.h	/^	struct media_gobj graph_obj;$/;"	m	struct:media_link	typeref:struct:media_link::media_gobj
graph_parse_endpoint	fwnode.h	/^	int (*graph_parse_endpoint)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations
group	mod_devicetable.h	/^	__u16 group;$/;"	m	struct:hid_device_id
group_close_release	devres.c	/^static void group_close_release(struct device *dev, void *res)$/;"	f	file:
group_id	media.h	/^	__u32 group_id;$/;"	m	struct:media_entity_desc
group_open_release	devres.c	/^static void group_open_release(struct device *dev, void *res)$/;"	f	file:
groups	device.h	/^	const struct attribute_group **groups;	\/* optional groups *\/$/;"	m	struct:device	typeref:struct:device::attribute_group
groups	device.h	/^	const struct attribute_group **groups;$/;"	m	struct:device_driver	typeref:struct:device_driver::attribute_group
groups	device.h	/^	const struct attribute_group **groups;$/;"	m	struct:device_type	typeref:struct:device_type::attribute_group
grp_id	v4l2-subdev.h	/^	u32 grp_id;$/;"	m	struct:v4l2_subdev
gsb_buffer	i2c-core-acpi.c	/^struct gsb_buffer {$/;"	s	file:
guard_interval	dvb_frontend.h	/^	enum fe_guard_interval	guard_interval;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_guard_interval
guid	mod_devicetable.h	/^	uuid_le guid;$/;"	m	struct:hv_vmbus_device_id
handle_setup	ffs-test.c	/^static void handle_setup(const struct usb_ctrlrequest *setup)$/;"	f	file:
handle_testdev	testusb.c	/^static void *handle_testdev (void *arg)$/;"	f	file:
handler	driver.h	/^	irq_flow_handler_t handler;$/;"	m	struct:gpio_irq_chip
handler	v4l2-ctrls.h	/^	struct v4l2_ctrl_handler *handler;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::v4l2_ctrl_handler
handler_new_ref	v4l2-ctrls.c	/^static int handler_new_ref(struct v4l2_ctrl_handler *hdl,$/;"	f	file:
handler_set_err	v4l2-ctrls.c	/^static inline int handler_set_err(struct v4l2_ctrl_handler *hdl, int err)$/;"	f	file:
has_MAC_address	tveeprom.h	/^	u32 has_MAC_address;$/;"	m	struct:tveeprom
has_changed	v4l2-ctrls.h	/^	unsigned int has_changed:1;$/;"	m	struct:v4l2_ctrl
has_external_strobe	v4l2-flash-led-class.h	/^	unsigned int has_external_strobe:1;$/;"	m	struct:v4l2_flash_config
has_flash_op	v4l2-flash-led-class.c	20;"	d	file:
has_ir	tveeprom.h	/^	u32 has_ir;$/;"	m	struct:tveeprom
has_op	v4l2-ctrls.c	31;"	d	file:
has_radio	tveeprom.h	/^	u32 has_radio;$/;"	m	struct:tveeprom
has_signal	dvb_frontend.h	/^	int  (*has_signal)(struct dvb_frontend *fe, u16 *signal);$/;"	m	struct:analog_demod_ops
has_tda9887	tuner-types.h	/^	unsigned int has_tda9887:1;$/;"	m	struct:tuner_params
has_volatiles	v4l2-ctrls.h	/^	unsigned int has_volatiles:1;$/;"	m	struct:v4l2_ctrl
hbackporch	videodev2.h	/^	__u32	hbackporch;$/;"	m	struct:v4l2_bt_timings
hblank	imx258.c	/^	struct v4l2_ctrl *hblank;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_ctrl	file:
hda_device_id	mod_devicetable.h	/^struct hda_device_id {$/;"	s
hdl	v4l2-flash-led-class.h	/^	struct v4l2_ctrl_handler hdl;$/;"	m	struct:v4l2_flash	typeref:struct:v4l2_flash::v4l2_ctrl_handler
hdmi_vic	videodev2.h	/^	__u8	hdmi_vic;$/;"	m	struct:v4l2_bt_timings
hdr	module.h	/^	Elf_Ehdr hdr;$/;"	m	struct:klp_modinfo
header	ffs-test.c	/^	struct usb_functionfs_descs_head_v2 header;$/;"	m	struct:__anon8	typeref:struct:__anon8::usb_functionfs_descs_head_v2	file:
header	ffs-test.c	/^	struct usb_functionfs_strings_head header;$/;"	m	struct:__anon11	typeref:struct:__anon11::usb_functionfs_strings_head	file:
height	imx219.c	/^	u32 height;$/;"	m	struct:imx219_mode	file:
height	imx258.c	/^	u32 height;$/;"	m	struct:imx258_mode	file:
height	v4l2-compat-ioctl32.c	/^		__u32		height;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
height	videobuf-core.h	/^	unsigned int            height;$/;"	m	struct:videobuf_buffer
height	videodev2.h	/^		__u32		height;$/;"	m	struct:v4l2_framebuffer::__anon53
height	videodev2.h	/^	__u32				height;$/;"	m	struct:v4l2_pix_format_mplane
height	videodev2.h	/^	__u32			height;		\/* Frame height *\/$/;"	m	struct:v4l2_frmivalenum
height	videodev2.h	/^	__u32			height;		\/* Frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
height	videodev2.h	/^	__u32			height;$/;"	m	struct:v4l2_pix_format
height	videodev2.h	/^	__u32	height;$/;"	m	struct:v4l2_bt_timings
height	videodev2.h	/^	__u32   height;$/;"	m	struct:v4l2_rect
height	vsp1.h	/^	unsigned int height;$/;"	m	struct:vsp1_du_lif_config
helper	v4l2-ctrls.h	/^	struct v4l2_ctrl_helper *helper;$/;"	m	struct:v4l2_ctrl_ref	typeref:struct:v4l2_ctrl_ref::v4l2_ctrl_helper
hex_asc_hi	kernel.h	614;"	d
hex_asc_lo	kernel.h	613;"	d
hex_asc_upper_hi	kernel.h	625;"	d
hex_asc_upper_lo	kernel.h	624;"	d
hex_byte_pack	kernel.h	/^static inline char *hex_byte_pack(char *buf, u8 byte)$/;"	f
hex_byte_pack_upper	kernel.h	/^static inline char *hex_byte_pack_upper(char *buf, u8 byte)$/;"	f
hfrontporch	videodev2.h	/^	__u32	hfrontporch;$/;"	m	struct:v4l2_bt_timings
hid_device_id	mod_devicetable.h	/^struct hid_device_id {$/;"	s
hierarchy	dvb_frontend.h	/^	enum fe_hierarchy	hierarchy;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_hierarchy
high	cec-pin.h	/^	void (*high)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
holders_dir	module.h	/^	struct kobject *holders_dir;$/;"	m	struct:module	typeref:struct:module::kobject
host_desc	soc_camera.h	/^	struct soc_camera_host_desc host_desc;$/;"	m	struct:soc_camera_desc	typeref:struct:soc_camera_desc::soc_camera_host_desc
host_fmt	soc_camera.h	/^	const struct soc_mbus_pixelfmt *host_fmt;$/;"	m	struct:soc_camera_format_xlate	typeref:struct:soc_camera_format_xlate::soc_mbus_pixelfmt
host_lock	soc_camera.h	/^	struct mutex host_lock;		\/* Main synchronisation lock *\/$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::mutex
host_notify_domain	i2c.h	/^	struct irq_domain *host_notify_domain;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::irq_domain
host_priv	soc_camera.h	/^	void *host_priv;		\/* Per-device host private data *\/$/;"	m	struct:soc_camera_device
host_priv	soc_camera.h	/^	void *host_priv;$/;"	m	struct:soc_camera_link
host_priv	v4l2-subdev.h	/^	void *host_priv;$/;"	m	struct:v4l2_subdev
host_priv	v4l2-subdev.h	/^	void *host_priv;$/;"	m	struct:v4l2_subdev_platform_data
hours	videodev2.h	/^	__u8	hours;$/;"	m	struct:v4l2_timecode
hs_count	ffs-test.c	/^	__le32 hs_count;$/;"	m	struct:__anon8	file:
hs_descs	ffs-test.c	/^	} __attribute__((packed)) fs_descs, hs_descs;$/;"	m	struct:__anon8	typeref:struct:__anon8::__anon9	file:
hsv_enc	videodev2.h	/^		__u32			hsv_enc;$/;"	m	union:v4l2_pix_format::__anon48
hsv_enc	videodev2.h	/^		__u8				hsv_enc;$/;"	m	union:v4l2_pix_format_mplane::__anon66
hsync	videodev2.h	/^	__u32	hsync;$/;"	m	struct:v4l2_bt_timings
htonl	generic.h	131;"	d
htonl	generic.h	139;"	d
htons	generic.h	132;"	d
htons	generic.h	141;"	d
hv_vmbus_device_id	mod_devicetable.h	/^struct hv_vmbus_device_id {$/;"	s
hversion	mod_devicetable.h	/^	__u16	hversion;	\/* 12 bits *\/$/;"	m	struct:parisc_device_id
hversion_rev	mod_devicetable.h	/^	__u8	hversion_rev;	\/* 4 bits *\/$/;"	m	struct:parisc_device_id
hw	clk-provider.h	/^	struct		clk_hw hw;$/;"	m	struct:clk_fixed_rate	typeref:struct:clk_fixed_rate::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_divider	typeref:struct:clk_divider::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_fixed_factor	typeref:struct:clk_fixed_factor::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_fractional_divider	typeref:struct:clk_fractional_divider::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_gpio	typeref:struct:clk_gpio::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_multiplier	typeref:struct:clk_multiplier::clk_hw
hw	clk-provider.h	/^	struct clk_hw	hw;$/;"	m	struct:clk_mux	typeref:struct:clk_mux::clk_hw
hw	clk-provider.h	/^	struct clk_hw hw;$/;"	m	struct:clk_gate	typeref:struct:clk_gate::clk_hw
hw_handle	dvb_demux.h	/^	u16 hw_handle;$/;"	m	struct:dvb_demux_filter
hw_revision	media-device.h	/^	u32 hw_revision;$/;"	m	struct:media_device
hw_revision	media.h	/^	__u32 hw_revision;$/;"	m	struct:media_device_info
hw_type	mod_devicetable.h	/^	__u8	hw_type;	\/* 5 bits used *\/$/;"	m	struct:parisc_device_id
hws	clk-provider.h	/^	struct clk_hw *hws[];$/;"	m	struct:clk_hw_onecell_data	typeref:struct:clk_hw_onecell_data::clk_hw
hypervisor_init	base.h	/^static inline int hypervisor_init(void) { return 0; }$/;"	f
i	videobuf-core.h	/^	unsigned int            i;$/;"	m	struct:videobuf_buffer
i2c	i2c-dev.c	/^ATTRIBUTE_GROUPS(i2c);$/;"	v
i2c	tuner-core.c	/^	struct i2c_client   *i2c;$/;"	m	struct:tuner	typeref:struct:tuner::i2c_client	file:
i2c	v4l2-async.h	/^		} i2c;$/;"	m	union:v4l2_async_subdev::__anon34	typeref:struct:v4l2_async_subdev::__anon34::__anon35
i2c_8bit_addr_from_msg	i2c.h	/^static inline u8 i2c_8bit_addr_from_msg(const struct i2c_msg *msg)$/;"	f
i2c_acpi_add_device	i2c-core-acpi.c	/^static acpi_status i2c_acpi_add_device(acpi_handle handle, u32 level,$/;"	f	file:
i2c_acpi_do_lookup	i2c-core-acpi.c	/^static int i2c_acpi_do_lookup(struct acpi_device *adev,$/;"	f	file:
i2c_acpi_fill_info	i2c-core-acpi.c	/^static int i2c_acpi_fill_info(struct acpi_resource *ares, void *data)$/;"	f	file:
i2c_acpi_find_adapter_by_handle	i2c-core-acpi.c	/^static struct i2c_adapter *i2c_acpi_find_adapter_by_handle(acpi_handle handle)$/;"	f	file:
i2c_acpi_find_bus_speed	i2c-core-acpi.c	/^EXPORT_SYMBOL_GPL(i2c_acpi_find_bus_speed);$/;"	v
i2c_acpi_find_bus_speed	i2c-core-acpi.c	/^u32 i2c_acpi_find_bus_speed(struct device *dev)$/;"	f
i2c_acpi_find_bus_speed	i2c.h	/^static inline u32 i2c_acpi_find_bus_speed(struct device *dev)$/;"	f
i2c_acpi_find_client_by_adev	i2c-core-acpi.c	/^static struct i2c_client *i2c_acpi_find_client_by_adev(struct acpi_device *adev)$/;"	f	file:
i2c_acpi_find_match_adapter	i2c-core-acpi.c	/^static int i2c_acpi_find_match_adapter(struct device *dev, void *data)$/;"	f	file:
i2c_acpi_find_match_device	i2c-core-acpi.c	/^static int i2c_acpi_find_match_device(struct device *dev, void *data)$/;"	f	file:
i2c_acpi_get_info	i2c-core-acpi.c	/^static int i2c_acpi_get_info(struct acpi_device *adev,$/;"	f	file:
i2c_acpi_handler_data	i2c-core-acpi.c	/^struct i2c_acpi_handler_data {$/;"	s	file:
i2c_acpi_ignored_device_ids	i2c-core-acpi.c	/^static const struct acpi_device_id i2c_acpi_ignored_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
i2c_acpi_install_space_handler	i2c-core-acpi.c	/^int i2c_acpi_install_space_handler(struct i2c_adapter *adapter)$/;"	f
i2c_acpi_install_space_handler	i2c-core.h	/^static inline int i2c_acpi_install_space_handler(struct i2c_adapter *adapter) { return 0; }$/;"	f
i2c_acpi_lookup	i2c-core-acpi.c	/^struct i2c_acpi_lookup {$/;"	s	file:
i2c_acpi_lookup_speed	i2c-core-acpi.c	/^static acpi_status i2c_acpi_lookup_speed(acpi_handle handle, u32 level,$/;"	f	file:
i2c_acpi_match_device	i2c-core-acpi.c	/^i2c_acpi_match_device(const struct acpi_device_id *matches,$/;"	f
i2c_acpi_match_device	i2c-core.h	/^i2c_acpi_match_device(const struct acpi_device_id *matches,$/;"	f
i2c_acpi_new_device	i2c-core-acpi.c	/^EXPORT_SYMBOL_GPL(i2c_acpi_new_device);$/;"	v
i2c_acpi_new_device	i2c-core-acpi.c	/^struct i2c_client *i2c_acpi_new_device(struct device *dev, int index,$/;"	f
i2c_acpi_new_device	i2c.h	/^static inline struct i2c_client *i2c_acpi_new_device(struct device *dev,$/;"	f
i2c_acpi_notifier	i2c-core-acpi.c	/^struct notifier_block i2c_acpi_notifier = {$/;"	v	typeref:struct:notifier_block
i2c_acpi_notify	i2c-core-acpi.c	/^static int i2c_acpi_notify(struct notifier_block *nb, unsigned long value,$/;"	f	file:
i2c_acpi_register_device	i2c-core-acpi.c	/^static void i2c_acpi_register_device(struct i2c_adapter *adapter,$/;"	f	file:
i2c_acpi_register_devices	i2c-core-acpi.c	/^void i2c_acpi_register_devices(struct i2c_adapter *adap)$/;"	f
i2c_acpi_register_devices	i2c-core.h	/^static inline void i2c_acpi_register_devices(struct i2c_adapter *adap) { }$/;"	f
i2c_acpi_remove_space_handler	i2c-core-acpi.c	/^void i2c_acpi_remove_space_handler(struct i2c_adapter *adapter)$/;"	f
i2c_acpi_remove_space_handler	i2c-core.h	/^static inline void i2c_acpi_remove_space_handler(struct i2c_adapter *adapter) { }$/;"	f
i2c_acpi_space_handler	i2c-core-acpi.c	/^i2c_acpi_space_handler(u32 function, acpi_physical_address command,$/;"	f	file:
i2c_adapter	i2c-core-base.c	/^ATTRIBUTE_GROUPS(i2c_adapter);$/;"	v
i2c_adapter	i2c.h	/^struct i2c_adapter {$/;"	s
i2c_adapter_attrs	i2c-core-base.c	/^static struct attribute *i2c_adapter_attrs[] = {$/;"	v	typeref:struct:attribute	file:
i2c_adapter_compat_class	i2c-core-base.c	/^static struct class_compat *i2c_adapter_compat_class;$/;"	v	typeref:struct:class_compat	file:
i2c_adapter_depth	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_adapter_depth);$/;"	v
i2c_adapter_depth	i2c-core-base.c	/^unsigned int i2c_adapter_depth(struct i2c_adapter *adapter)$/;"	f
i2c_adapter_dev_release	i2c-core-base.c	/^static void i2c_adapter_dev_release(struct device *dev)$/;"	f	file:
i2c_adapter_id	i2c.h	/^static inline int i2c_adapter_id(struct i2c_adapter *adap)$/;"	f
i2c_adapter_id	soc_camera.h	/^	int i2c_adapter_id;$/;"	m	struct:soc_camera_host_desc
i2c_adapter_id	soc_camera.h	/^	int i2c_adapter_id;$/;"	m	struct:soc_camera_link
i2c_adapter_lock_bus	i2c-core-base.c	/^static void i2c_adapter_lock_bus(struct i2c_adapter *adapter,$/;"	f	file:
i2c_adapter_lock_ops	i2c-core-base.c	/^static const struct i2c_lock_operations i2c_adapter_lock_ops = {$/;"	v	typeref:struct:i2c_lock_operations	file:
i2c_adapter_quirks	i2c.h	/^struct i2c_adapter_quirks {$/;"	s
i2c_adapter_trylock_bus	i2c-core-base.c	/^static int i2c_adapter_trylock_bus(struct i2c_adapter *adapter,$/;"	f	file:
i2c_adapter_type	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_adapter_type);$/;"	v
i2c_adapter_type	i2c-core-base.c	/^struct device_type i2c_adapter_type = {$/;"	v	typeref:struct:device_type
i2c_adapter_unlock_bus	i2c-core-base.c	/^static void i2c_adapter_unlock_bus(struct i2c_adapter *adapter,$/;"	f	file:
i2c_add_adapter	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_add_adapter);$/;"	v
i2c_add_adapter	i2c-core-base.c	/^int i2c_add_adapter(struct i2c_adapter *adapter)$/;"	f
i2c_add_driver	i2c.h	804;"	d
i2c_add_numbered_adapter	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_add_numbered_adapter);$/;"	v
i2c_add_numbered_adapter	i2c-core-base.c	/^int i2c_add_numbered_adapter(struct i2c_adapter *adap)$/;"	f
i2c_alert_protocol	i2c.h	/^enum i2c_alert_protocol {$/;"	g
i2c_algo_bit_data	i2c-algo-bit.h	/^struct i2c_algo_bit_data {$/;"	s
i2c_algo_pca_data	i2c-algo-pca.h	/^struct i2c_algo_pca_data {$/;"	s
i2c_algo_pcf_data	i2c-algo-pcf.h	/^struct i2c_algo_pcf_data {$/;"	s
i2c_algorithm	i2c.h	/^struct i2c_algorithm {$/;"	s
i2c_attrs	i2c-dev.c	/^static struct attribute *i2c_attrs[] = {$/;"	v	typeref:struct:attribute	file:
i2c_board_info	i2c.h	/^struct i2c_board_info {$/;"	s
i2c_bus_recovery_info	i2c.h	/^struct i2c_bus_recovery_info {$/;"	s
i2c_bus_type	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_bus_type);$/;"	v
i2c_bus_type	i2c-core-base.c	/^struct bus_type i2c_bus_type = {$/;"	v	typeref:struct:bus_type
i2c_check_7bit_addr_validity_strict	i2c-core-base.c	/^int i2c_check_7bit_addr_validity_strict(unsigned short addr)$/;"	f
i2c_check_addr_busy	i2c-core-base.c	/^static int i2c_check_addr_busy(struct i2c_adapter *adapter, int addr)$/;"	f	file:
i2c_check_addr_validity	i2c-core-base.c	/^static int i2c_check_addr_validity(unsigned int addr, unsigned short flags)$/;"	f	file:
i2c_check_for_quirks	i2c-core-base.c	/^static int i2c_check_for_quirks(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)$/;"	f	file:
i2c_check_functionality	i2c.h	/^static inline int i2c_check_functionality(struct i2c_adapter *adap, u32 func)$/;"	f
i2c_check_mux_children	i2c-core-base.c	/^static int i2c_check_mux_children(struct device *dev, void *addrp)$/;"	f	file:
i2c_check_mux_parents	i2c-core-base.c	/^static int i2c_check_mux_parents(struct i2c_adapter *adapter, int addr)$/;"	f	file:
i2c_check_quirks	i2c.h	/^static inline bool i2c_check_quirks(struct i2c_adapter *adap, u64 quirks)$/;"	f
i2c_client	i2c.h	/^struct i2c_client {$/;"	s
i2c_client_dev_release	i2c-core-base.c	/^static void i2c_client_dev_release(struct device *dev)$/;"	f	file:
i2c_client_type	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_client_type);$/;"	v
i2c_client_type	i2c-core-base.c	/^struct device_type i2c_client_type = {$/;"	v	typeref:struct:device_type
i2c_clients_command	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_clients_command);$/;"	v
i2c_clients_command	i2c-core-base.c	/^void i2c_clients_command(struct i2c_adapter *adap, unsigned int cmd, void *arg)$/;"	f
i2c_clock	i2c-algo-pca.h	/^	unsigned int			i2c_clock;$/;"	m	struct:i2c_algo_pca_data
i2c_cmd	i2c-core-base.c	/^static int i2c_cmd(struct device *dev, void *_arg)$/;"	f	file:
i2c_cmd_arg	i2c-core-base.c	/^struct i2c_cmd_arg {$/;"	s	file:
i2c_default_probe	i2c-core-base.c	/^static int i2c_default_probe(struct i2c_adapter *adap, unsigned short addr)$/;"	f	file:
i2c_del_adapter	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_del_adapter);$/;"	v
i2c_del_adapter	i2c-core-base.c	/^void i2c_del_adapter(struct i2c_adapter *adap)$/;"	f
i2c_del_driver	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_del_driver);$/;"	v
i2c_del_driver	i2c-core-base.c	/^void i2c_del_driver(struct i2c_driver *driver)$/;"	f
i2c_detect	i2c-core-base.c	/^static int i2c_detect(struct i2c_adapter *adapter, struct i2c_driver *driver)$/;"	f	file:
i2c_detect_address	i2c-core-base.c	/^static int i2c_detect_address(struct i2c_client *temp_client,$/;"	f	file:
i2c_detect_slave_mode	i2c-core-slave.c	/^EXPORT_SYMBOL_GPL(i2c_detect_slave_mode);$/;"	v
i2c_detect_slave_mode	i2c-core-slave.c	/^bool i2c_detect_slave_mode(struct device *dev)$/;"	f
i2c_detect_slave_mode	i2c.h	/^static inline bool i2c_detect_slave_mode(struct device *dev) { return false; }$/;"	f
i2c_dev	i2c-core-base.c	/^ATTRIBUTE_GROUPS(i2c_dev);$/;"	v
i2c_dev	i2c-dev.c	/^struct i2c_dev {$/;"	s	file:
i2c_dev_attrs	i2c-core-base.c	/^static struct attribute *i2c_dev_attrs[] = {$/;"	v	typeref:struct:attribute	file:
i2c_dev_class	i2c-dev.c	/^static struct class *i2c_dev_class;$/;"	v	typeref:struct:class	file:
i2c_dev_exit	i2c-dev.c	/^module_exit(i2c_dev_exit);$/;"	v
i2c_dev_exit	i2c-dev.c	/^static void __exit i2c_dev_exit(void)$/;"	f	file:
i2c_dev_get_by_minor	i2c-dev.c	/^static struct i2c_dev *i2c_dev_get_by_minor(unsigned index)$/;"	f	file:
i2c_dev_init	i2c-dev.c	/^module_init(i2c_dev_init);$/;"	v
i2c_dev_init	i2c-dev.c	/^static int __init i2c_dev_init(void)$/;"	f	file:
i2c_dev_irq_from_resources	i2c-core-base.c	/^static int i2c_dev_irq_from_resources(const struct resource *resources,$/;"	f	file:
i2c_dev_set_name	i2c-core-base.c	/^static void i2c_dev_set_name(struct i2c_adapter *adap,$/;"	f	file:
i2c_device_id	mod_devicetable.h	/^struct i2c_device_id {$/;"	s
i2c_device_identity	i2c.h	/^struct i2c_device_identity {$/;"	s
i2c_device_match	i2c-core-base.c	/^static int i2c_device_match(struct device *dev, struct device_driver *drv)$/;"	f	file:
i2c_device_probe	i2c-core-base.c	/^static int i2c_device_probe(struct device *dev)$/;"	f	file:
i2c_device_remove	i2c-core-base.c	/^static int i2c_device_remove(struct device *dev)$/;"	f	file:
i2c_device_shutdown	i2c-core-base.c	/^static void i2c_device_shutdown(struct device *dev)$/;"	f	file:
i2c_device_uevent	i2c-core-base.c	/^static int i2c_device_uevent(struct device *dev, struct kobj_uevent_env *env)$/;"	f	file:
i2c_devinfo	i2c-core.h	/^struct i2c_devinfo {$/;"	s
i2c_do_add_adapter	i2c-core-base.c	/^static int i2c_do_add_adapter(struct i2c_driver *driver,$/;"	f	file:
i2c_do_del_adapter	i2c-core-base.c	/^static void i2c_do_del_adapter(struct i2c_driver *driver,$/;"	f	file:
i2c_driver	i2c.h	/^struct i2c_driver {$/;"	s
i2c_encode_flags_to_addr	i2c-core-base.c	/^static unsigned short i2c_encode_flags_to_addr(struct i2c_client *client)$/;"	f	file:
i2c_exit	i2c-core-base.c	/^module_exit(i2c_exit);$/;"	v
i2c_exit	i2c-core-base.c	/^static void __exit i2c_exit(void)$/;"	f	file:
i2c_for_each_dev	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_for_each_dev);$/;"	v
i2c_for_each_dev	i2c-core-base.c	/^int i2c_for_each_dev(void *data, int (*fn)(struct device *, void *))$/;"	f
i2c_gate_ctrl	dvb_frontend.h	/^	int  (*i2c_gate_ctrl)(struct dvb_frontend *fe, int enable);$/;"	m	struct:analog_demod_ops
i2c_gate_ctrl	dvb_frontend.h	/^	int (*i2c_gate_ctrl)(struct dvb_frontend* fe, int enable);$/;"	m	struct:dvb_frontend_ops
i2c_generic_bus_free	i2c-core-base.c	/^static int i2c_generic_bus_free(struct i2c_adapter *adap)$/;"	f	file:
i2c_generic_scl_recovery	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_generic_scl_recovery);$/;"	v
i2c_generic_scl_recovery	i2c-core-base.c	/^int i2c_generic_scl_recovery(struct i2c_adapter *adap)$/;"	f
i2c_get_adapdata	i2c.h	/^static inline void *i2c_get_adapdata(const struct i2c_adapter *dev)$/;"	f
i2c_get_adapter	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_get_adapter);$/;"	v
i2c_get_adapter	i2c-core-base.c	/^struct i2c_adapter *i2c_get_adapter(int nr)$/;"	f
i2c_get_clientdata	i2c.h	/^static inline void *i2c_get_clientdata(const struct i2c_client *dev)$/;"	f
i2c_get_device_id	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_get_device_id);$/;"	v
i2c_get_device_id	i2c-core-base.c	/^int i2c_get_device_id(const struct i2c_client *client,$/;"	f
i2c_get_dma_safe_msg_buf	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_get_dma_safe_msg_buf);$/;"	v
i2c_get_dma_safe_msg_buf	i2c-core-base.c	/^u8 *i2c_get_dma_safe_msg_buf(struct i2c_msg *msg, unsigned int threshold)$/;"	f
i2c_get_functionality	i2c.h	/^static inline u32 i2c_get_functionality(struct i2c_adapter *adap)$/;"	f
i2c_handle_smbus_alert	i2c-smbus.c	/^EXPORT_SYMBOL_GPL(i2c_handle_smbus_alert);$/;"	v
i2c_handle_smbus_alert	i2c-smbus.c	/^int i2c_handle_smbus_alert(struct i2c_client *ara)$/;"	f
i2c_handle_smbus_host_notify	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_handle_smbus_host_notify);$/;"	v
i2c_handle_smbus_host_notify	i2c-core-base.c	/^int i2c_handle_smbus_host_notify(struct i2c_adapter *adap, unsigned short addr)$/;"	f
i2c_host_notify_irq_map	i2c-core-base.c	/^static int i2c_host_notify_irq_map(struct irq_domain *h,$/;"	f	file:
i2c_host_notify_irq_ops	i2c-core-base.c	/^static const struct irq_domain_ops i2c_host_notify_irq_ops = {$/;"	v	typeref:struct:irq_domain_ops	file:
i2c_host_notify_irq_teardown	i2c-core-base.c	/^static void i2c_host_notify_irq_teardown(struct i2c_adapter *adap)$/;"	f	file:
i2c_init	i2c-core-base.c	/^postcore_initcall(i2c_init);$/;"	v
i2c_init	i2c-core-base.c	/^static int __init i2c_init(void)$/;"	f	file:
i2c_init_recovery	i2c-core-base.c	/^static void i2c_init_recovery(struct i2c_adapter *adap)$/;"	f	file:
i2c_lock_bus	i2c.h	/^i2c_lock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f
i2c_lock_operations	i2c.h	/^struct i2c_lock_operations {$/;"	s
i2c_master_recv	i2c.h	/^static inline int i2c_master_recv(const struct i2c_client *client,$/;"	f
i2c_master_recv_dmasafe	i2c.h	/^static inline int i2c_master_recv_dmasafe(const struct i2c_client *client,$/;"	f
i2c_master_send	i2c.h	/^static inline int i2c_master_send(const struct i2c_client *client,$/;"	f
i2c_master_send_dmasafe	i2c.h	/^static inline int i2c_master_send_dmasafe(const struct i2c_client *client,$/;"	f
i2c_match_id	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_match_id);$/;"	v
i2c_match_id	i2c-core-base.c	/^const struct i2c_device_id *i2c_match_id(const struct i2c_device_id *id,$/;"	f
i2c_msg32	i2c-dev.c	/^struct i2c_msg32 {$/;"	s	file:
i2c_mux_add_adapter	i2c-mux.c	/^EXPORT_SYMBOL_GPL(i2c_mux_add_adapter);$/;"	v
i2c_mux_add_adapter	i2c-mux.c	/^int i2c_mux_add_adapter(struct i2c_mux_core *muxc,$/;"	f
i2c_mux_alloc	i2c-mux.c	/^EXPORT_SYMBOL_GPL(i2c_mux_alloc);$/;"	v
i2c_mux_alloc	i2c-mux.c	/^struct i2c_mux_core *i2c_mux_alloc(struct i2c_adapter *parent,$/;"	f
i2c_mux_core	i2c-mux.h	/^struct i2c_mux_core {$/;"	s
i2c_mux_del_adapters	i2c-mux.c	/^EXPORT_SYMBOL_GPL(i2c_mux_del_adapters);$/;"	v
i2c_mux_del_adapters	i2c-mux.c	/^void i2c_mux_del_adapters(struct i2c_mux_core *muxc)$/;"	f
i2c_mux_functionality	i2c-mux.c	/^static u32 i2c_mux_functionality(struct i2c_adapter *adap)$/;"	f	file:
i2c_mux_lock_bus	i2c-mux.c	/^static void i2c_mux_lock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f	file:
i2c_mux_lock_ops	i2c-mux.c	/^static const struct i2c_lock_operations i2c_mux_lock_ops = {$/;"	v	typeref:struct:i2c_lock_operations	file:
i2c_mux_master_xfer	i2c-mux.c	/^static int i2c_mux_master_xfer(struct i2c_adapter *adap,$/;"	f	file:
i2c_mux_parent_classes	i2c-mux.c	/^static unsigned int i2c_mux_parent_classes(struct i2c_adapter *parent)$/;"	f	file:
i2c_mux_priv	i2c-mux.c	/^struct i2c_mux_priv {$/;"	s	file:
i2c_mux_priv	i2c-mux.h	/^static inline void *i2c_mux_priv(struct i2c_mux_core *muxc)$/;"	f
i2c_mux_smbus_xfer	i2c-mux.c	/^static int i2c_mux_smbus_xfer(struct i2c_adapter *adap,$/;"	f	file:
i2c_mux_trylock_bus	i2c-mux.c	/^static int i2c_mux_trylock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f	file:
i2c_mux_unlock_bus	i2c-mux.c	/^static void i2c_mux_unlock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f	file:
i2c_new_device	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_new_device);$/;"	v
i2c_new_device	i2c-core-base.c	/^i2c_new_device(struct i2c_adapter *adap, struct i2c_board_info const *info)$/;"	f
i2c_new_dummy	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_new_dummy);$/;"	v
i2c_new_dummy	i2c-core-base.c	/^struct i2c_client *i2c_new_dummy(struct i2c_adapter *adapter, u16 address)$/;"	f
i2c_new_probed_device	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_new_probed_device);$/;"	v
i2c_new_probed_device	i2c-core-base.c	/^i2c_new_probed_device(struct i2c_adapter *adap,$/;"	f
i2c_new_secondary_device	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_new_secondary_device);$/;"	v
i2c_new_secondary_device	i2c-core-base.c	/^struct i2c_client *i2c_new_secondary_device(struct i2c_client *client,$/;"	f
i2c_of_match_device	i2c-core-of.c	/^*i2c_of_match_device(const struct of_device_id *matches,$/;"	f
i2c_of_match_device	i2c-core-of.c	/^EXPORT_SYMBOL_GPL(i2c_of_match_device);$/;"	v
i2c_of_match_device	i2c.h	/^*i2c_of_match_device(const struct of_device_id *matches,$/;"	f
i2c_of_match_device_sysfs	i2c-core-of.c	/^i2c_of_match_device_sysfs(const struct of_device_id *matches,$/;"	f	file:
i2c_of_notifier	i2c-core-of.c	/^struct notifier_block i2c_of_notifier = {$/;"	v	typeref:struct:notifier_block
i2c_parent_is_i2c_adapter	i2c.h	/^i2c_parent_is_i2c_adapter(const struct i2c_adapter *adapter)$/;"	f
i2c_parent_lock_bus	i2c-mux.c	/^static void i2c_parent_lock_bus(struct i2c_adapter *adapter,$/;"	f	file:
i2c_parent_lock_ops	i2c-mux.c	/^static const struct i2c_lock_operations i2c_parent_lock_ops = {$/;"	v	typeref:struct:i2c_lock_operations	file:
i2c_parent_trylock_bus	i2c-mux.c	/^static int i2c_parent_trylock_bus(struct i2c_adapter *adapter,$/;"	f	file:
i2c_parent_unlock_bus	i2c-mux.c	/^static void i2c_parent_unlock_bus(struct i2c_adapter *adapter,$/;"	f	file:
i2c_parse_fw_timings	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_parse_fw_timings);$/;"	v
i2c_parse_fw_timings	i2c-core-base.c	/^void i2c_parse_fw_timings(struct device *dev, struct i2c_timings *t, bool use_defaults)$/;"	f
i2c_probe_func_quick_read	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_probe_func_quick_read);$/;"	v
i2c_probe_func_quick_read	i2c-core-base.c	/^int i2c_probe_func_quick_read(struct i2c_adapter *adap, unsigned short addr)$/;"	f
i2c_put_adapter	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_put_adapter);$/;"	v
i2c_put_adapter	i2c-core-base.c	/^void i2c_put_adapter(struct i2c_adapter *adap)$/;"	f
i2c_put_dma_safe_msg_buf	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_put_dma_safe_msg_buf);$/;"	v
i2c_put_dma_safe_msg_buf	i2c-core-base.c	/^void i2c_put_dma_safe_msg_buf(u8 *buf, struct i2c_msg *msg, bool xferred)$/;"	f
i2c_quirk_error	i2c-core-base.c	/^static int i2c_quirk_error(struct i2c_adapter *adap, struct i2c_msg *msg, char *err_msg)$/;"	f	file:
i2c_quirk_exceeded	i2c-core-base.c	1790;"	d	file:
i2c_rdwr_ioctl_data32	i2c-dev.c	/^struct i2c_rdwr_ioctl_data32 {$/;"	s	file:
i2c_recover_bus	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_recover_bus);$/;"	v
i2c_recover_bus	i2c-core-base.c	/^int i2c_recover_bus(struct i2c_adapter *adap)$/;"	f
i2c_register_adapter	i2c-core-base.c	/^static int i2c_register_adapter(struct i2c_adapter *adap)$/;"	f	file:
i2c_register_board_info	i2c-boardinfo.c	/^int i2c_register_board_info(int busnum, struct i2c_board_info const *info, unsigned len)$/;"	f
i2c_register_board_info	i2c.h	/^i2c_register_board_info(int busnum, struct i2c_board_info const *info,$/;"	f
i2c_register_driver	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_register_driver);$/;"	v
i2c_register_driver	i2c-core-base.c	/^int i2c_register_driver(struct module *owner, struct i2c_driver *driver)$/;"	f
i2c_release_client	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_release_client);$/;"	v
i2c_release_client	i2c-core-base.c	/^void i2c_release_client(struct i2c_client *client)$/;"	f
i2c_root_adapter	i2c-mux.c	/^EXPORT_SYMBOL_GPL(i2c_root_adapter);$/;"	v
i2c_root_adapter	i2c-mux.c	/^struct i2c_adapter *i2c_root_adapter(struct device *dev)$/;"	f
i2c_scan_static_board_info	i2c-core-base.c	/^static void i2c_scan_static_board_info(struct i2c_adapter *adapter)$/;"	f	file:
i2c_set_adapdata	i2c.h	/^static inline void i2c_set_adapdata(struct i2c_adapter *dev, void *data)$/;"	f
i2c_set_clientdata	i2c.h	/^static inline void i2c_set_clientdata(struct i2c_client *dev, void *data)$/;"	f
i2c_setup_host_notify_irq_domain	i2c-core-base.c	/^static int i2c_setup_host_notify_irq_domain(struct i2c_adapter *adap)$/;"	f	file:
i2c_setup_smbus_alert	i2c-core-smbus.c	/^EXPORT_SYMBOL_GPL(i2c_setup_smbus_alert);$/;"	v
i2c_setup_smbus_alert	i2c-core-smbus.c	/^struct i2c_client *i2c_setup_smbus_alert(struct i2c_adapter *adapter,$/;"	f
i2c_slave_cb_t	i2c.h	/^typedef int (*i2c_slave_cb_t)(struct i2c_client *, enum i2c_slave_event, u8 *);$/;"	t
i2c_slave_client	i2c-pxa.h	/^struct i2c_slave_client {$/;"	s
i2c_slave_eeprom_bin_read	i2c-slave-eeprom.c	/^static ssize_t i2c_slave_eeprom_bin_read(struct file *filp, struct kobject *kobj,$/;"	f	file:
i2c_slave_eeprom_bin_write	i2c-slave-eeprom.c	/^static ssize_t i2c_slave_eeprom_bin_write(struct file *filp, struct kobject *kobj,$/;"	f	file:
i2c_slave_eeprom_driver	i2c-slave-eeprom.c	/^module_i2c_driver(i2c_slave_eeprom_driver);$/;"	v
i2c_slave_eeprom_driver	i2c-slave-eeprom.c	/^static struct i2c_driver i2c_slave_eeprom_driver = {$/;"	v	typeref:struct:i2c_driver	file:
i2c_slave_eeprom_id	i2c-slave-eeprom.c	/^static const struct i2c_device_id i2c_slave_eeprom_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
i2c_slave_eeprom_probe	i2c-slave-eeprom.c	/^static int i2c_slave_eeprom_probe(struct i2c_client *client, const struct i2c_device_id *id)$/;"	f	file:
i2c_slave_eeprom_remove	i2c-slave-eeprom.c	/^static int i2c_slave_eeprom_remove(struct i2c_client *client)$/;"	f	file:
i2c_slave_eeprom_slave_cb	i2c-slave-eeprom.c	/^static int i2c_slave_eeprom_slave_cb(struct i2c_client *client,$/;"	f	file:
i2c_slave_event	i2c.h	/^enum i2c_slave_event {$/;"	g
i2c_slave_event	i2c.h	/^static inline int i2c_slave_event(struct i2c_client *client,$/;"	f
i2c_slave_event_e	i2c-pxa.h	/^typedef enum i2c_slave_event_e {$/;"	g
i2c_slave_event_t	i2c-pxa.h	/^} i2c_slave_event_t;$/;"	t	typeref:enum:i2c_slave_event_e
i2c_slave_register	i2c-core-slave.c	/^EXPORT_SYMBOL_GPL(i2c_slave_register);$/;"	v
i2c_slave_register	i2c-core-slave.c	/^int i2c_slave_register(struct i2c_client *client, i2c_slave_cb_t slave_cb)$/;"	f
i2c_slave_unregister	i2c-core-slave.c	/^EXPORT_SYMBOL_GPL(i2c_slave_unregister);$/;"	v
i2c_slave_unregister	i2c-core-slave.c	/^int i2c_slave_unregister(struct i2c_client *client)$/;"	f
i2c_smbus_add_pec	i2c-core-smbus.c	/^static inline void i2c_smbus_add_pec(struct i2c_msg *msg)$/;"	f	file:
i2c_smbus_alert	i2c-smbus.c	/^struct i2c_smbus_alert {$/;"	s	file:
i2c_smbus_alert_setup	i2c-smbus.h	/^struct i2c_smbus_alert_setup {$/;"	s
i2c_smbus_check_pec	i2c-core-smbus.c	/^static int i2c_smbus_check_pec(u8 cpec, struct i2c_msg *msg)$/;"	f	file:
i2c_smbus_host_notify_to_irq	i2c-core-base.c	/^static int i2c_smbus_host_notify_to_irq(const struct i2c_client *client)$/;"	f	file:
i2c_smbus_ioctl_data32	i2c-dev.c	/^struct i2c_smbus_ioctl_data32 {$/;"	s	file:
i2c_smbus_msg_pec	i2c-core-smbus.c	/^static u8 i2c_smbus_msg_pec(u8 pec, struct i2c_msg *msg)$/;"	f	file:
i2c_smbus_pec	i2c-core-smbus.c	/^static u8 i2c_smbus_pec(u8 crc, u8 *p, size_t count)$/;"	f	file:
i2c_smbus_read_block_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_read_block_data);$/;"	v
i2c_smbus_read_block_data	i2c-core-smbus.c	/^s32 i2c_smbus_read_block_data(const struct i2c_client *client, u8 command,$/;"	f
i2c_smbus_read_byte	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_read_byte);$/;"	v
i2c_smbus_read_byte	i2c-core-smbus.c	/^s32 i2c_smbus_read_byte(const struct i2c_client *client)$/;"	f
i2c_smbus_read_byte_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_read_byte_data);$/;"	v
i2c_smbus_read_byte_data	i2c-core-smbus.c	/^s32 i2c_smbus_read_byte_data(const struct i2c_client *client, u8 command)$/;"	f
i2c_smbus_read_i2c_block_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_read_i2c_block_data);$/;"	v
i2c_smbus_read_i2c_block_data	i2c-core-smbus.c	/^s32 i2c_smbus_read_i2c_block_data(const struct i2c_client *client, u8 command,$/;"	f
i2c_smbus_read_i2c_block_data_or_emulated	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_read_i2c_block_data_or_emulated);$/;"	v
i2c_smbus_read_i2c_block_data_or_emulated	i2c-core-smbus.c	/^s32 i2c_smbus_read_i2c_block_data_or_emulated(const struct i2c_client *client,$/;"	f
i2c_smbus_read_word_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_read_word_data);$/;"	v
i2c_smbus_read_word_data	i2c-core-smbus.c	/^s32 i2c_smbus_read_word_data(const struct i2c_client *client, u8 command)$/;"	f
i2c_smbus_read_word_swapped	i2c.h	/^i2c_smbus_read_word_swapped(const struct i2c_client *client, u8 command)$/;"	f
i2c_smbus_try_get_dmabuf	i2c-core-smbus.c	/^static void i2c_smbus_try_get_dmabuf(struct i2c_msg *msg, u8 init_val)$/;"	f	file:
i2c_smbus_write_block_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_write_block_data);$/;"	v
i2c_smbus_write_block_data	i2c-core-smbus.c	/^s32 i2c_smbus_write_block_data(const struct i2c_client *client, u8 command,$/;"	f
i2c_smbus_write_byte	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_write_byte);$/;"	v
i2c_smbus_write_byte	i2c-core-smbus.c	/^s32 i2c_smbus_write_byte(const struct i2c_client *client, u8 value)$/;"	f
i2c_smbus_write_byte_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_write_byte_data);$/;"	v
i2c_smbus_write_byte_data	i2c-core-smbus.c	/^s32 i2c_smbus_write_byte_data(const struct i2c_client *client, u8 command,$/;"	f
i2c_smbus_write_i2c_block_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_write_i2c_block_data);$/;"	v
i2c_smbus_write_i2c_block_data	i2c-core-smbus.c	/^s32 i2c_smbus_write_i2c_block_data(const struct i2c_client *client, u8 command,$/;"	f
i2c_smbus_write_word_data	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_write_word_data);$/;"	v
i2c_smbus_write_word_data	i2c-core-smbus.c	/^s32 i2c_smbus_write_word_data(const struct i2c_client *client, u8 command,$/;"	f
i2c_smbus_write_word_swapped	i2c.h	/^i2c_smbus_write_word_swapped(const struct i2c_client *client,$/;"	f
i2c_smbus_xfer	i2c-core-smbus.c	/^EXPORT_SYMBOL(i2c_smbus_xfer);$/;"	v
i2c_smbus_xfer	i2c-core-smbus.c	/^s32 i2c_smbus_xfer(struct i2c_adapter *adapter, u16 addr,$/;"	f
i2c_smbus_xfer_emulated	i2c-core-smbus.c	/^static s32 i2c_smbus_xfer_emulated(struct i2c_adapter *adapter, u16 addr,$/;"	f	file:
i2c_sysfs_delete_device	i2c-core-base.c	/^i2c_sysfs_delete_device(struct device *dev, struct device_attribute *attr,$/;"	f	file:
i2c_sysfs_new_device	i2c-core-base.c	/^i2c_sysfs_new_device(struct device *dev, struct device_attribute *attr,$/;"	f	file:
i2c_timings	i2c.h	/^struct i2c_timings {$/;"	s
i2c_transfer	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_transfer);$/;"	v
i2c_transfer	i2c-core-base.c	/^int i2c_transfer(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)$/;"	f
i2c_transfer_buffer_flags	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_transfer_buffer_flags);$/;"	v
i2c_transfer_buffer_flags	i2c-core-base.c	/^int i2c_transfer_buffer_flags(const struct i2c_client *client, char *buf,$/;"	f
i2c_transfer_trace_reg	i2c-core-base.c	/^int i2c_transfer_trace_reg(void)$/;"	f
i2c_transfer_trace_unreg	i2c-core-base.c	/^void i2c_transfer_trace_unreg(void)$/;"	f
i2c_trylock_bus	i2c.h	/^i2c_trylock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f
i2c_unlock_bus	i2c.h	/^i2c_unlock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f
i2c_unregister_device	i2c-core-base.c	/^EXPORT_SYMBOL_GPL(i2c_unregister_device);$/;"	v
i2c_unregister_device	i2c-core-base.c	/^void i2c_unregister_device(struct i2c_client *client)$/;"	f
i2c_use_client	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_use_client);$/;"	v
i2c_use_client	i2c-core-base.c	/^struct i2c_client *i2c_use_client(struct i2c_client *client)$/;"	f
i2c_verify_adapter	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_verify_adapter);$/;"	v
i2c_verify_adapter	i2c-core-base.c	/^struct i2c_adapter *i2c_verify_adapter(struct device *dev)$/;"	f
i2c_verify_client	i2c-core-base.c	/^EXPORT_SYMBOL(i2c_verify_client);$/;"	v
i2c_verify_client	i2c-core-base.c	/^struct i2c_client *i2c_verify_client(struct device *dev)$/;"	f
i2cdev_attach_adapter	i2c-dev.c	/^static int i2cdev_attach_adapter(struct device *dev, void *dummy)$/;"	f	file:
i2cdev_check	i2c-dev.c	/^static int i2cdev_check(struct device *dev, void *addrp)$/;"	f	file:
i2cdev_check_addr	i2c-dev.c	/^static int i2cdev_check_addr(struct i2c_adapter *adapter, unsigned int addr)$/;"	f	file:
i2cdev_check_mux_children	i2c-dev.c	/^static int i2cdev_check_mux_children(struct device *dev, void *addrp)$/;"	f	file:
i2cdev_check_mux_parents	i2c-dev.c	/^static int i2cdev_check_mux_parents(struct i2c_adapter *adapter, int addr)$/;"	f	file:
i2cdev_detach_adapter	i2c-dev.c	/^static int i2cdev_detach_adapter(struct device *dev, void *dummy)$/;"	f	file:
i2cdev_fops	i2c-dev.c	/^static const struct file_operations i2cdev_fops = {$/;"	v	typeref:struct:file_operations	file:
i2cdev_ioctl	i2c-dev.c	/^static long i2cdev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
i2cdev_ioctl_rdwr	i2c-dev.c	/^static noinline int i2cdev_ioctl_rdwr(struct i2c_client *client,$/;"	f	file:
i2cdev_ioctl_smbus	i2c-dev.c	/^static noinline int i2cdev_ioctl_smbus(struct i2c_client *client,$/;"	f	file:
i2cdev_notifier	i2c-dev.c	/^static struct notifier_block i2cdev_notifier = {$/;"	v	typeref:struct:notifier_block	file:
i2cdev_notifier_call	i2c-dev.c	/^static int i2cdev_notifier_call(struct notifier_block *nb, unsigned long action,$/;"	f	file:
i2cdev_open	i2c-dev.c	/^static int i2cdev_open(struct inode *inode, struct file *file)$/;"	f	file:
i2cdev_read	i2c-dev.c	/^static ssize_t i2cdev_read(struct file *file, char __user *buf, size_t count,$/;"	f	file:
i2cdev_release	i2c-dev.c	/^static int i2cdev_release(struct inode *inode, struct file *file)$/;"	f	file:
i2cdev_write	i2c-dev.c	/^static ssize_t i2cdev_write(struct file *file, const char __user *buf,$/;"	f	file:
iInterface	testusb.c	/^	__u8  iInterface;$/;"	m	struct:usb_interface_descriptor	file:
iManufacturer	testusb.c	/^	__u8  iManufacturer;$/;"	m	struct:usb_device_descriptor	file:
iProduct	testusb.c	/^	__u8  iProduct;$/;"	m	struct:usb_device_descriptor	file:
iSerialNumber	testusb.c	/^	__u8  iSerialNumber;$/;"	m	struct:usb_device_descriptor	file:
icd	soc_camera.h	/^	struct soc_camera_device *icd;	\/* Currently attached client *\/$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::soc_camera_device
id	clk.h	/^	const char		*id;$/;"	m	struct:clk_bulk_data
id	device.h	/^	const char		*id;$/;"	m	struct:device_connection
id	device.h	/^	u32			id;	\/* device instance *\/$/;"	m	struct:device
id	devres.c	/^	void				*id;$/;"	m	struct:devres_group	file:
id	dvb_frontend.h	/^	int id;$/;"	m	struct:dvb_frontend
id	dvbdev.h	/^	u32 id;$/;"	m	struct:dvb_device
id	ffs-test.c	/^	pthread_t id;$/;"	m	struct:thread	file:
id	fwnode.h	/^	unsigned int id;$/;"	m	struct:fwnode_endpoint
id	media-device.h	/^	u32 id;$/;"	m	struct:media_device
id	media-entity.h	/^	u32			id;$/;"	m	struct:media_gobj
id	media.h	/^	__u32 id;$/;"	m	struct:media_entity_desc
id	media.h	/^	__u32 id;$/;"	m	struct:media_v2_entity
id	media.h	/^	__u32 id;$/;"	m	struct:media_v2_interface
id	media.h	/^	__u32 id;$/;"	m	struct:media_v2_link
id	media.h	/^	__u32 id;$/;"	m	struct:media_v2_pad
id	mod_devicetable.h	/^		__u8 id[PNP_ID_LEN];$/;"	m	struct:pnp_card_device_id::__anon26
id	mod_devicetable.h	/^	__u16	id;$/;"	m	struct:bcma_device_id
id	mod_devicetable.h	/^	__u32 id;			\/* Device ID or ZORRO_WILDCARD *\/$/;"	m	struct:zorro_device_id
id	mod_devicetable.h	/^	__u8 id;$/;"	m	struct:serio_device_id
id	mod_devicetable.h	/^	__u8 id[ACPI_ID_LEN];$/;"	m	struct:acpi_device_id
id	mod_devicetable.h	/^	__u8 id[PNP_ID_LEN];$/;"	m	struct:pnp_card_device_id
id	mod_devicetable.h	/^	__u8 id[PNP_ID_LEN];$/;"	m	struct:pnp_device_id
id	mod_devicetable.h	/^	unsigned int		id;$/;"	m	struct:amba_id
id	v4l2-compat-ioctl32.c	/^	__u32				id;$/;"	m	struct:v4l2_event32	file:
id	v4l2-compat-ioctl32.c	/^	__u32 id;$/;"	m	struct:v4l2_ext_control32	file:
id	v4l2-compat-ioctl32.c	/^	compat_u64	     id;$/;"	m	struct:v4l2_standard32	file:
id	v4l2-ctrls.h	/^	u32 id;$/;"	m	struct:v4l2_ctrl
id	v4l2-ctrls.h	/^	u32 id;$/;"	m	struct:v4l2_ctrl_config
id	v4l2-event.h	/^	u32			id;$/;"	m	struct:v4l2_subscribed_event
id	videobuf2-dvb.h	/^	int id;$/;"	m	struct:vb2_dvb_frontend
id	videodev2.h	/^	__u32				id;$/;"	m	struct:v4l2_event
id	videodev2.h	/^	__u32				id;$/;"	m	struct:v4l2_event_subscription
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_control
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_query_ext_ctrl
id	videodev2.h	/^	__u32		     id;$/;"	m	struct:v4l2_queryctrl
id	videodev2.h	/^	__u32		id;$/;"	m	struct:v4l2_querymenu
id	videodev2.h	/^	__u32   id;$/;"	m	struct:v4l2_sliced_vbi_data
id	videodev2.h	/^	__u32 id;$/;"	m	struct:v4l2_ext_control
id	videodev2.h	/^	__u8 id;	\/* One of V4L2_MPEG_VBI_IVTV_* above *\/$/;"	m	struct:v4l2_mpeg_vbi_itv0_line
id	videodev2.h	/^	v4l2_std_id          id;$/;"	m	struct:v4l2_standard
idProduct	mod_devicetable.h	/^	__u16		idProduct;$/;"	m	struct:usb_device_id
idProduct	testusb.c	/^	__u16 idProduct;$/;"	m	struct:usb_device_descriptor	file:
idVendor	mod_devicetable.h	/^	__u16		idVendor;$/;"	m	struct:usb_device_id
idVendor	testusb.c	/^	__u16 idVendor;$/;"	m	struct:usb_device_descriptor	file:
id_table	i2c.h	/^	const struct i2c_device_id *id_table;$/;"	m	struct:i2c_driver	typeref:struct:i2c_driver::i2c_device_id
ident	mod_devicetable.h	/^	const char *ident;$/;"	m	struct:dmi_system_id
idle	rc-core.h	/^	bool				idle;$/;"	m	struct:rc_dev
idle_notification	pm.h	/^	unsigned int		idle_notification:1;$/;"	m	struct:dev_pm_info
idx	machine.h	/^	unsigned int idx;$/;"	m	struct:gpiod_lookup
idx_max	media-entity.h	/^	int idx_max;$/;"	m	struct:media_entity_enum
ieee1394_device_id	mod_devicetable.h	/^struct ieee1394_device_id {$/;"	s
if_aud_dec_pad_index	v4l2-mc.h	/^enum if_aud_dec_pad_index {$/;"	g
if_vid_dec_pad_index	v4l2-mc.h	/^enum if_vid_dec_pad_index {$/;"	g
iface	soc_camera.h	/^	unsigned char iface;		\/* Host number *\/$/;"	m	struct:soc_camera_device
iffreq	tuner-types.h	/^	u16 iffreq;$/;"	m	struct:tuner_params
ifnum	testusb.c	/^	unsigned		ifnum : 8;$/;"	m	struct:testdev	file:
ignore_children	pm.h	/^	bool			ignore_children:1;$/;"	m	struct:dev_pm_info
ignore_lockdep	sysfs1.h	/^	bool			ignore_lockdep:1;$/;"	m	struct:attribute
il_vbackporch	videodev2.h	/^	__u32	il_vbackporch;$/;"	m	struct:v4l2_bt_timings
il_vfrontporch	videodev2.h	/^	__u32	il_vfrontporch;$/;"	m	struct:v4l2_bt_timings
il_vsync	videodev2.h	/^	__u32	il_vsync;$/;"	m	struct:v4l2_bt_timings
iled_cdev	v4l2-flash-led-class.h	/^	struct led_classdev *iled_cdev;$/;"	m	struct:v4l2_flash	typeref:struct:v4l2_flash::led_classdev
imx219	imx219.c	/^struct imx219 {$/;"	s	file:
imx219_core_ops	imx219.c	/^static const struct v4l2_subdev_core_ops imx219_core_ops = {$/;"	v	typeref:struct:v4l2_subdev_core_ops	file:
imx219_ctrl_ops	imx219.c	/^static const struct v4l2_ctrl_ops imx219_ctrl_ops = {$/;"	v	typeref:struct:v4l2_ctrl_ops	file:
imx219_dt_ids	imx219.c	/^static const struct of_device_id imx219_dt_ids[] = {$/;"	v	typeref:struct:of_device_id	file:
imx219_enum_frame_size	imx219.c	/^static int imx219_enum_frame_size(struct v4l2_subdev *sd,$/;"	f	file:
imx219_enum_mbus_code	imx219.c	/^static int imx219_enum_mbus_code(struct v4l2_subdev *sd,$/;"	f	file:
imx219_free_controls	imx219.c	/^static void imx219_free_controls(struct imx219 *imx219)$/;"	f	file:
imx219_get_pad_format	imx219.c	/^static int imx219_get_pad_format(struct v4l2_subdev *sd,$/;"	f	file:
imx219_get_regulators	imx219.c	/^static int imx219_get_regulators(struct imx219 *imx219)$/;"	f	file:
imx219_i2c_driver	imx219.c	/^module_i2c_driver(imx219_i2c_driver);$/;"	v
imx219_i2c_driver	imx219.c	/^static struct i2c_driver imx219_i2c_driver = {$/;"	v	typeref:struct:i2c_driver	file:
imx219_identify_module	imx219.c	/^static int imx219_identify_module(struct imx219 *imx219)$/;"	f	file:
imx219_init_controls	imx219.c	/^static int imx219_init_controls(struct imx219 *imx219)$/;"	f	file:
imx219_internal_ops	imx219.c	/^static const struct v4l2_subdev_internal_ops imx219_internal_ops = {$/;"	v	typeref:struct:v4l2_subdev_internal_ops	file:
imx219_mode	imx219.c	/^struct imx219_mode {$/;"	s	file:
imx219_open	imx219.c	/^static int imx219_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)$/;"	f	file:
imx219_pad_ops	imx219.c	/^static const struct v4l2_subdev_pad_ops imx219_pad_ops = {$/;"	v	typeref:struct:v4l2_subdev_pad_ops	file:
imx219_power	imx219.c	/^static void imx219_power(struct imx219 *imx219, bool enable)$/;"	f	file:
imx219_probe	imx219.c	/^static int imx219_probe(struct i2c_client *client,$/;"	f	file:
imx219_read_reg	imx219.c	/^static int imx219_read_reg(struct imx219 *imx219, u16 reg, u32 len, u32 *val)$/;"	f	file:
imx219_reg	imx219.c	/^struct imx219_reg {$/;"	s	file:
imx219_reg_list	imx219.c	/^struct imx219_reg_list {$/;"	s	file:
imx219_remove	imx219.c	/^static int imx219_remove(struct i2c_client *client)$/;"	f	file:
imx219_resume	imx219.c	/^static int __maybe_unused imx219_resume(struct device *dev)$/;"	f	file:
imx219_s_power	imx219.c	/^static int imx219_s_power(struct v4l2_subdev *sd, int on)$/;"	f	file:
imx219_set_ctrl	imx219.c	/^static int imx219_set_ctrl(struct v4l2_ctrl *ctrl)$/;"	f	file:
imx219_set_pad_format	imx219.c	/^static int imx219_set_pad_format(struct v4l2_subdev *sd,$/;"	f	file:
imx219_set_power	imx219.c	/^static int imx219_set_power(struct imx219 *imx219, bool on)$/;"	f	file:
imx219_set_power_off	imx219.c	/^static void imx219_set_power_off(struct imx219 *imx219)$/;"	f	file:
imx219_set_power_on	imx219.c	/^static int imx219_set_power_on(struct imx219 *imx219)$/;"	f	file:
imx219_set_stream	imx219.c	/^static int imx219_set_stream(struct v4l2_subdev *sd, int enable)$/;"	f	file:
imx219_start_streaming	imx219.c	/^static int imx219_start_streaming(struct imx219 *imx219)$/;"	f	file:
imx219_stop_streaming	imx219.c	/^static int imx219_stop_streaming(struct imx219 *imx219)$/;"	f	file:
imx219_subdev_ops	imx219.c	/^static const struct v4l2_subdev_ops imx219_subdev_ops = {$/;"	v	typeref:struct:v4l2_subdev_ops	file:
imx219_supply_name	imx219.c	/^static const char * const imx219_supply_name[] = {$/;"	v	file:
imx219_suspend	imx219.c	/^static int __maybe_unused imx219_suspend(struct device *dev)$/;"	f	file:
imx219_test_pattern_menu	imx219.c	/^static const char * const imx219_test_pattern_menu[] = {$/;"	v	file:
imx219_test_pattern_val	imx219.c	/^static const int imx219_test_pattern_val[] = {$/;"	v	file:
imx219_update_pad_format	imx219.c	/^static void imx219_update_pad_format(const struct imx219_mode *mode,$/;"	f	file:
imx219_video_ops	imx219.c	/^static const struct v4l2_subdev_video_ops imx219_video_ops = {$/;"	v	typeref:struct:v4l2_subdev_video_ops	file:
imx219_write_reg	imx219.c	/^static int imx219_write_reg(struct imx219 *imx219, u16 reg, u32 len, u32 val)$/;"	f	file:
imx219_write_regs	imx219.c	/^static int imx219_write_regs(struct imx219 *imx219,$/;"	f	file:
imx258	imx258.c	/^struct imx258 {$/;"	s	file:
imx258_acpi_ids	imx258.c	/^static const struct acpi_device_id imx258_acpi_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
imx258_ctrl_ops	imx258.c	/^static const struct v4l2_ctrl_ops imx258_ctrl_ops = {$/;"	v	typeref:struct:v4l2_ctrl_ops	file:
imx258_enum_frame_size	imx258.c	/^static int imx258_enum_frame_size(struct v4l2_subdev *sd,$/;"	f	file:
imx258_enum_mbus_code	imx258.c	/^static int imx258_enum_mbus_code(struct v4l2_subdev *sd,$/;"	f	file:
imx258_free_controls	imx258.c	/^static void imx258_free_controls(struct imx258 *imx258)$/;"	f	file:
imx258_get_pad_format	imx258.c	/^static int imx258_get_pad_format(struct v4l2_subdev *sd,$/;"	f	file:
imx258_i2c_driver	imx258.c	/^module_i2c_driver(imx258_i2c_driver);$/;"	v
imx258_i2c_driver	imx258.c	/^static struct i2c_driver imx258_i2c_driver = {$/;"	v	typeref:struct:i2c_driver	file:
imx258_identify_module	imx258.c	/^static int imx258_identify_module(struct imx258 *imx258)$/;"	f	file:
imx258_init_controls	imx258.c	/^static int imx258_init_controls(struct imx258 *imx258)$/;"	f	file:
imx258_internal_ops	imx258.c	/^static const struct v4l2_subdev_internal_ops imx258_internal_ops = {$/;"	v	typeref:struct:v4l2_subdev_internal_ops	file:
imx258_link_freq_config	imx258.c	/^struct imx258_link_freq_config {$/;"	s	file:
imx258_mode	imx258.c	/^struct imx258_mode {$/;"	s	file:
imx258_open	imx258.c	/^static int imx258_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)$/;"	f	file:
imx258_pad_ops	imx258.c	/^static const struct v4l2_subdev_pad_ops imx258_pad_ops = {$/;"	v	typeref:struct:v4l2_subdev_pad_ops	file:
imx258_pm_ops	imx258.c	/^static const struct dev_pm_ops imx258_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
imx258_probe	imx258.c	/^static int imx258_probe(struct i2c_client *client)$/;"	f	file:
imx258_read_reg	imx258.c	/^static int imx258_read_reg(struct imx258 *imx258, u16 reg, u32 len, u32 *val)$/;"	f	file:
imx258_reg	imx258.c	/^struct imx258_reg {$/;"	s	file:
imx258_reg_list	imx258.c	/^struct imx258_reg_list {$/;"	s	file:
imx258_remove	imx258.c	/^static int imx258_remove(struct i2c_client *client)$/;"	f	file:
imx258_resume	imx258.c	/^static int __maybe_unused imx258_resume(struct device *dev)$/;"	f	file:
imx258_set_ctrl	imx258.c	/^static int imx258_set_ctrl(struct v4l2_ctrl *ctrl)$/;"	f	file:
imx258_set_pad_format	imx258.c	/^static int imx258_set_pad_format(struct v4l2_subdev *sd,$/;"	f	file:
imx258_set_stream	imx258.c	/^static int imx258_set_stream(struct v4l2_subdev *sd, int enable)$/;"	f	file:
imx258_start_streaming	imx258.c	/^static int imx258_start_streaming(struct imx258 *imx258)$/;"	f	file:
imx258_stop_streaming	imx258.c	/^static int imx258_stop_streaming(struct imx258 *imx258)$/;"	f	file:
imx258_subdev_ops	imx258.c	/^static const struct v4l2_subdev_ops imx258_subdev_ops = {$/;"	v	typeref:struct:v4l2_subdev_ops	file:
imx258_suspend	imx258.c	/^static int __maybe_unused imx258_suspend(struct device *dev)$/;"	f	file:
imx258_test_pattern_menu	imx258.c	/^static const char * const imx258_test_pattern_menu[] = {$/;"	v	file:
imx258_test_pattern_val	imx258.c	/^static const int imx258_test_pattern_val[] = {$/;"	v	file:
imx258_update_digital_gain	imx258.c	/^static int imx258_update_digital_gain(struct imx258 *imx258, u32 len, u32 val)$/;"	f	file:
imx258_update_pad_format	imx258.c	/^static void imx258_update_pad_format(const struct imx258_mode *mode,$/;"	f	file:
imx258_video_ops	imx258.c	/^static const struct v4l2_subdev_video_ops imx258_video_ops = {$/;"	v	typeref:struct:v4l2_subdev_video_ops	file:
imx258_write_reg	imx258.c	/^static int imx258_write_reg(struct imx258 *imx258, u16 reg, u32 len, u32 val)$/;"	f	file:
imx258_write_regs	imx258.c	/^static int imx258_write_regs(struct imx258 *imx258,$/;"	f	file:
in	ffs-test.c	/^	ssize_t (*in)(struct thread *, void *, size_t);$/;"	m	struct:thread	file:
in_dpm_list	pm.h	/^	bool			in_dpm_list:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info
in_name	ffs-test.c	/^	const char *const in_name;$/;"	m	struct:thread	file:
in_use	v4l2-event.h	/^	unsigned int		in_use;$/;"	m	struct:v4l2_subscribed_event
index	dvb_demux.h	/^	int index;$/;"	m	struct:dvb_demux_filter
index	dvb_demux.h	/^	unsigned int index;$/;"	m	struct:dvb_demux_feed
index	i2c-core-acpi.c	/^	int index;$/;"	m	struct:i2c_acpi_lookup	file:
index	media-entity.h	/^	u16 index;$/;"	m	struct:media_pad
index	media.h	/^	__u16 index;		\/* pad index *\/$/;"	m	struct:media_pad_desc
index	media.h	/^	__u32 index;$/;"	m	struct:media_v2_pad
index	v4l2-compat-ioctl32.c	/^	__u32			index;$/;"	m	struct:v4l2_buffer32	file:
index	v4l2-compat-ioctl32.c	/^	__u32			index;$/;"	m	struct:v4l2_create_buffers32	file:
index	v4l2-compat-ioctl32.c	/^	__u32		     index;$/;"	m	struct:v4l2_standard32	file:
index	v4l2-compat-ioctl32.c	/^	__u32	     index;		\/*  Which input *\/$/;"	m	struct:v4l2_input32	file:
index	v4l2-dev.h	/^	int index;$/;"	m	struct:video_device
index	videobuf2-core.h	/^	unsigned int		index;$/;"	m	struct:vb2_buffer
index	videodev2.h	/^	__u32			index;		\/* Frame format index *\/$/;"	m	struct:v4l2_frmivalenum
index	videodev2.h	/^	__u32			index;		\/* Frame size number *\/$/;"	m	struct:v4l2_frmsizeenum
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_buffer
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_create_buffers
index	videodev2.h	/^	__u32			index;$/;"	m	struct:v4l2_modulator
index	videodev2.h	/^	__u32		     index;$/;"	m	struct:v4l2_standard
index	videodev2.h	/^	__u32		    index;             \/* Format number      *\/$/;"	m	struct:v4l2_fmtdesc
index	videodev2.h	/^	__u32		index;$/;"	m	struct:v4l2_exportbuffer
index	videodev2.h	/^	__u32		index;$/;"	m	struct:v4l2_querymenu
index	videodev2.h	/^	__u32	     index;		\/*  Which input *\/$/;"	m	struct:v4l2_input
index	videodev2.h	/^	__u32	     index;		\/*  Which output *\/$/;"	m	struct:v4l2_output
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audio
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_audioout
index	videodev2.h	/^	__u32	index;$/;"	m	struct:v4l2_frequency_band
index	videodev2.h	/^	__u32                   index;$/;"	m	struct:v4l2_tuner
index	videodev2.h	/^	__u32 index;$/;"	m	struct:v4l2_enum_dv_timings
index	vsp1.h	/^	unsigned int index;$/;"	m	struct:vsp1_du_crc_config
index_show	v4l2-dev.c	/^static ssize_t index_show(struct device *cd,$/;"	f	file:
info	dvb_frontend.h	/^	struct analog_demod_info info;$/;"	m	struct:analog_demod_ops	typeref:struct:analog_demod_ops::analog_demod_info
info	dvb_frontend.h	/^	struct dvb_frontend_internal_info info;$/;"	m	struct:dvb_frontend_ops	typeref:struct:dvb_frontend_ops::dvb_frontend_internal_info
info	dvb_frontend.h	/^	struct dvb_tuner_info info;$/;"	m	struct:dvb_tuner_ops	typeref:struct:dvb_tuner_ops::dvb_tuner_info
info	ffs-test.c	111;"	d	file:
info	i2c-core-acpi.c	/^	struct acpi_connection_info info;$/;"	m	struct:i2c_acpi_handler_data	typeref:struct:i2c_acpi_handler_data::acpi_connection_info	file:
info	i2c-core-acpi.c	/^	struct i2c_board_info *info;$/;"	m	struct:i2c_acpi_lookup	typeref:struct:i2c_acpi_lookup::i2c_board_info	file:
info	media-entity.h	/^	} info;$/;"	m	struct:media_entity	typeref:union:media_entity::__anon18
init	clk-provider.h	/^	const struct clk_init_data *init;$/;"	m	struct:clk_hw	typeref:struct:clk_hw::clk_init_data
init	clk-provider.h	/^	void		(*init)(struct clk_hw *hw);$/;"	m	struct:clk_ops
init	dvb_frontend.h	/^	int (*init)(struct dvb_frontend *fe);$/;"	m	struct:dvb_tuner_ops
init	dvb_frontend.h	/^	int (*init)(struct dvb_frontend* fe);$/;"	m	struct:dvb_frontend_ops
init	module.h	/^	int (*init)(void);$/;"	m	struct:module
init	v4l2-ctrls.h	/^	void (*init)(const struct v4l2_ctrl *ctrl, u32 idx,$/;"	m	struct:v4l2_ctrl_type_ops
init	v4l2-subdev.h	/^	int (*init)(struct v4l2_subdev *sd, u32 val);$/;"	m	struct:v4l2_subdev_core_ops
init_cfg	v4l2-subdev.h	/^	int (*init_cfg)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
init_ir_raw_event	rc-core.h	/^static inline void init_ir_raw_event(struct ir_raw_event *ev)$/;"	f
init_irq	i2c.h	/^	int init_irq;			\/* irq set at initialization	*\/$/;"	m	struct:i2c_client
init_layout	module.h	/^	struct module_layout init_layout;$/;"	m	struct:module	typeref:struct:module::module_layout
init_name	device.h	/^	const char		*init_name; \/* initial name of the device *\/$/;"	m	struct:device
init_thread	ffs-test.c	/^static void init_thread(struct thread *t)$/;"	f	file:
init_videobuf2	soc_camera.h	/^	int (*init_videobuf2)(struct vb2_queue *,$/;"	m	struct:soc_camera_host_ops
initdata	tuner-types.h	/^	u8 *initdata;$/;"	m	struct:tunertype
input_dev	rc-core.h	/^	struct input_dev		*input_dev;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::input_dev
input_device_id	mod_devicetable.h	/^struct input_device_id {$/;"	s
input_drv	cec.h	/^	char input_drv[32];$/;"	m	struct:cec_adapter
input_id	rc-core.h	/^	struct input_id			input_id;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::input_id
input_phys	cec.h	/^	char input_phys[32];$/;"	m	struct:cec_adapter
input_phys	rc-core.h	/^	const char			*input_phys;$/;"	m	struct:rc_dev
instance	mod_devicetable.h	/^	__u16 dev_index, instance;$/;"	m	struct:slim_device_id
int_ops	videobuf-core.h	/^	struct videobuf_qtype_ops  *int_ops;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::videobuf_qtype_ops
int_sqrt64	kernel.h	/^static inline u32 int_sqrt64(u64 x)$/;"	f
intensity	v4l2-flash-led-class.h	/^	struct led_flash_setting intensity;$/;"	m	struct:v4l2_flash_config	typeref:struct:v4l2_flash_config::led_flash_setting
intensity_to_led_brightness	v4l2-flash-led-class.h	/^	enum led_brightness (*intensity_to_led_brightness)$/;"	m	struct:v4l2_flash_ops	typeref:enum:v4l2_flash_ops::intensity_to_led_brightness
intercarrier_mode	tuner-types.h	/^	unsigned int intercarrier_mode:1;$/;"	m	struct:tuner_params
interfaces	base.h	/^	struct list_head interfaces;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::list_head
interfaces	media-device.h	/^	struct list_head interfaces;$/;"	m	struct:media_device	typeref:struct:media_device::list_head
interlaced	videodev2.h	/^	__u32	interlaced;$/;"	m	struct:v4l2_bt_timings
interlaced	vsp1.h	/^	bool interlaced;$/;"	m	struct:vsp1_du_lif_config
interleaving	dvb_frontend.h	/^	    u8			interleaving;$/;"	m	struct:dtv_frontend_properties::__anon7
interleaving	dvb_frontend.h	/^	enum fe_interleaving	interleaving;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_interleaving
internal_create_group	group.c	/^static int internal_create_group(struct kobject *kobj, int update,$/;"	f	file:
internal_idx	media-entity.h	/^	int internal_idx;$/;"	m	struct:media_entity
internal_ops	v4l2-subdev.h	/^	const struct v4l2_subdev_internal_ops *internal_ops;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_subdev_internal_ops
interrupt_enable	v4l2-subdev.h	/^	bool interrupt_enable;$/;"	m	struct:v4l2_subdev_ir_parameters
interrupt_service_routine	v4l2-subdev.h	/^	int (*interrupt_service_routine)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_core_ops
intf	ffs-test.c	/^		struct usb_interface_descriptor intf;$/;"	m	struct:__anon8::__anon10	typeref:struct:__anon8::__anon10::usb_interface_descriptor	file:
intf	ffs-test.c	/^		struct usb_interface_descriptor intf;$/;"	m	struct:__anon8::__anon9	typeref:struct:__anon8::__anon9::usb_interface_descriptor	file:
intf	media-entity.h	/^		struct media_interface *intf;$/;"	m	union:media_link::__anon16	typeref:struct:media_link::__anon16::media_interface
intf	media-entity.h	/^	struct media_interface		intf;$/;"	m	struct:media_intf_devnode	typeref:struct:media_intf_devnode::media_interface
intf_devnode	dvbdev.h	/^	struct media_intf_devnode *intf_devnode;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::media_intf_devnode
intf_devnode	v4l2-dev.h	/^	struct media_intf_devnode *intf_devnode;$/;"	m	struct:video_device	typeref:struct:video_device::media_intf_devnode
intf_devnode	v4l2-mem2mem.c	/^	struct media_intf_devnode *intf_devnode;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_intf_devnode	file:
intf_to_devnode	media-entity.h	574;"	d
intf_type	media.h	/^	__u32 intf_type;$/;"	m	struct:media_v2_interface
inversion	dvb_frontend.h	/^	enum fe_spectral_inversion inversion;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_spectral_inversion
invert_carrier_sense	v4l2-subdev.h	/^	bool invert_carrier_sense;$/;"	m	struct:v4l2_subdev_ir_parameters
invert_level	v4l2-subdev.h	/^	bool invert_level;$/;"	m	struct:v4l2_subdev_ir_parameters
io_modes	videobuf2-core.h	/^	unsigned int			io_modes;$/;"	m	struct:vb2_queue
io_size	videodev2.h	/^	__u32   io_size;$/;"	m	struct:v4l2_sliced_vbi_format
ioctl	media-devnode.h	/^	long (*ioctl) (struct file *, unsigned int, unsigned long);$/;"	m	struct:media_file_operations
ioctl	v4l2-ioctl.c	/^	unsigned int ioctl;$/;"	m	struct:v4l2_ioctl_info	file:
ioctl	v4l2-subdev.h	/^	long (*ioctl)(struct v4l2_subdev *sd, unsigned int cmd, void *arg);$/;"	m	struct:v4l2_subdev_core_ops
ioctl_mutex	dvb_net.h	/^	struct mutex ioctl_mutex;$/;"	m	struct:dvb_net	typeref:struct:dvb_net::mutex
ioctl_ops	v4l2-dev.h	/^	const struct v4l2_ioctl_ops *ioctl_ops;$/;"	m	struct:video_device	typeref:struct:video_device::v4l2_ioctl_ops
iolock	videobuf-core.h	/^	int (*iolock)		(struct videobuf_queue *q,$/;"	m	struct:videobuf_qtype_ops
iommu_fwspec	device.h	/^	struct iommu_fwspec	*iommu_fwspec;$/;"	m	struct:device	typeref:struct:device::iommu_fwspec
iommu_group	device.h	/^	struct iommu_group	*iommu_group;$/;"	m	struct:device	typeref:struct:device::iommu_group
iommu_ops	device.h	/^	const struct iommu_ops *iommu_ops;$/;"	m	struct:bus_type	typeref:struct:bus_type::iommu_ops
ipack_device_id	mod_devicetable.h	/^struct ipack_device_id {$/;"	s
ir	v4l2-subdev.h	/^	const struct v4l2_subdev_ir_ops		*ir;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_ir_ops
ir_extract_bits	rc-core.h	/^static inline u32 ir_extract_bits(u32 data, u32 mask)$/;"	f
ir_nec_bytes_to_scancode	rc-core.h	/^static inline u32 ir_nec_bytes_to_scancode(u8 address, u8 not_address,$/;"	f
ir_raw_event	rc-core.h	/^struct ir_raw_event {$/;"	s
ir_raw_event_reset	rc-core.h	/^static inline void ir_raw_event_reset(struct rc_dev *dev)$/;"	f
irq	driver.h	/^	struct gpio_irq_chip irq;$/;"	m	struct:gpio_chip	typeref:struct:gpio_chip::gpio_irq_chip
irq	gpio_keys.h	/^	unsigned int irq;$/;"	m	struct:gpio_keys_button
irq	i2c-smbus.h	/^	int			irq;$/;"	m	struct:i2c_smbus_alert_setup
irq	i2c.h	/^	int		irq;$/;"	m	struct:i2c_board_info
irq	i2c.h	/^	int irq;			\/* irq issued by device		*\/$/;"	m	struct:i2c_client
irq_safe	pm.h	/^	unsigned int		irq_safe:1;$/;"	m	struct:dev_pm_info
irq_to_gpio	gpio.h	/^static inline int irq_to_gpio(unsigned int irq)$/;"	f
irq_to_gpio	gpio.h	/^static inline int irq_to_gpio(unsigned irq)$/;"	f
irqlock	videobuf-core.h	/^	spinlock_t                 *irqlock;$/;"	m	struct:videobuf_queue
is_array	property.h	/^	bool is_array;$/;"	m	struct:property_entry
is_array	v4l2-ctrls.h	/^	unsigned int is_array:1;$/;"	m	struct:v4l2_ctrl
is_auto	v4l2-ctrls.h	/^	unsigned int is_auto:1;$/;"	m	struct:v4l2_ctrl
is_backlink	media-entity.h	/^	bool is_backlink;$/;"	m	struct:media_link
is_bin_visible	sysfs1.h	/^	umode_t			(*is_bin_visible)(struct kobject *,$/;"	m	struct:attribute_group
is_configured	cec.h	/^	bool is_configured;$/;"	m	struct:cec_adapter
is_configuring	cec.h	/^	bool is_configuring;$/;"	m	struct:cec_adapter
is_cur_manual	v4l2-ctrls.c	/^static bool is_cur_manual(const struct v4l2_ctrl *master)$/;"	f	file:
is_enabled	clk-provider.h	/^	int		(*is_enabled)(struct clk_hw *hw);$/;"	m	struct:clk_ops
is_filtering	demux.h	/^	int is_filtering;$/;"	m	struct:dmx_section_feed
is_filtering	demux.h	/^	int is_filtering;$/;"	m	struct:dmx_ts_feed
is_int	v4l2-ctrls.h	/^	unsigned int is_int:1;$/;"	m	struct:v4l2_ctrl
is_late_suspended	pm.h	/^	bool			is_late_suspended:1;$/;"	m	struct:dev_pm_info
is_livepatch_module	module.h	/^static inline bool is_livepatch_module(struct module *mod)$/;"	f
is_media_entity_v4l2_subdev	media-entity.h	/^static inline bool is_media_entity_v4l2_subdev(struct media_entity *entity)$/;"	f
is_media_entity_v4l2_video_device	media-entity.h	/^static inline bool is_media_entity_v4l2_video_device(struct media_entity *entity)$/;"	f
is_module_address	module.h	/^static inline bool is_module_address(unsigned long addr)$/;"	f
is_module_percpu_address	module.h	/^static inline bool is_module_percpu_address(unsigned long addr)$/;"	f
is_module_sig_enforced	module.h	/^static inline bool is_module_sig_enforced(void)$/;"	f
is_module_text_address	module.h	/^static inline bool is_module_text_address(unsigned long addr)$/;"	f
is_multiplanar	videobuf2-core.h	/^	unsigned int			is_multiplanar:1;$/;"	m	struct:vb2_queue
is_new	v4l2-ctrls.h	/^	unsigned int is_new:1;$/;"	m	struct:v4l2_ctrl
is_new_manual	v4l2-ctrls.c	/^static bool is_new_manual(const struct v4l2_ctrl *master)$/;"	f	file:
is_noirq_suspended	pm.h	/^	bool			is_noirq_suspended:1;$/;"	m	struct:dev_pm_info
is_output	videobuf2-core.h	/^	unsigned int			is_output:1;$/;"	m	struct:vb2_queue
is_prepared	clk-provider.h	/^	int		(*is_prepared)(struct clk_hw *hw);$/;"	m	struct:clk_ops
is_prepared	pm.h	/^	bool			is_prepared:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info
is_private	v4l2-ctrls.h	/^	unsigned int is_private:1;$/;"	m	struct:v4l2_ctrl
is_private	v4l2-ctrls.h	/^	unsigned int is_private:1;$/;"	m	struct:v4l2_ctrl_config
is_pset_node	property.c	/^static inline bool is_pset_node(const struct fwnode_handle *fwnode)$/;"	f	file:
is_ptr	v4l2-ctrls.h	/^	unsigned int is_ptr:1;$/;"	m	struct:v4l2_ctrl
is_registered	i2c-core-base.c	/^static bool is_registered;$/;"	v	file:
is_second_field	v4l2-subdev.h	/^	u32 is_second_field;$/;"	m	struct:v4l2_decode_vbi_line
is_string	v4l2-ctrls.h	/^	unsigned int is_string:1;$/;"	m	struct:v4l2_ctrl
is_suspended	pm.h	/^	bool			is_suspended:1;	\/* Ditto *\/$/;"	m	struct:dev_pm_info
is_valid_ioctl	v4l2-ioctl.c	42;"	d	file:
is_visible	sysfs1.h	/^	umode_t			(*is_visible)(struct kobject *,$/;"	m	struct:attribute_group
isapnp_device_id	mod_devicetable.h	/^struct isapnp_device_id {$/;"	s
isdbt_layer_enabled	dvb_frontend.h	/^	u8			isdbt_layer_enabled;$/;"	m	struct:dtv_frontend_properties
isdbt_partial_reception	dvb_frontend.h	/^	u8			isdbt_partial_reception;$/;"	m	struct:dtv_frontend_properties
isdbt_sb_mode	dvb_frontend.h	/^	u8			isdbt_sb_mode;$/;"	m	struct:dtv_frontend_properties
isdbt_sb_segment_count	dvb_frontend.h	/^	u32			isdbt_sb_segment_count;$/;"	m	struct:dtv_frontend_properties
isdbt_sb_segment_idx	dvb_frontend.h	/^	u32			isdbt_sb_segment_idx;$/;"	m	struct:dtv_frontend_properties
isdbt_sb_subchannel	dvb_frontend.h	/^	u8			isdbt_sb_subchannel;$/;"	m	struct:dtv_frontend_properties
iterations	testusb.c	/^	unsigned		iterations;$/;"	m	struct:usbtest_param	file:
itv0	videodev2.h	/^		struct v4l2_mpeg_vbi_itv0 itv0;$/;"	m	union:v4l2_mpeg_vbi_fmt_ivtv::__anon65	typeref:struct:v4l2_mpeg_vbi_fmt_ivtv::__anon65::v4l2_mpeg_vbi_itv0
job_abort	v4l2-mem2mem.h	/^	void (*job_abort)(void *priv);$/;"	m	struct:v4l2_m2m_ops
job_flags	v4l2-mem2mem.h	/^	unsigned long			job_flags;$/;"	m	struct:v4l2_m2m_ctx
job_queue	v4l2-mem2mem.c	/^	struct list_head	job_queue;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::list_head	file:
job_ready	v4l2-mem2mem.h	/^	int (*job_ready)(void *priv);$/;"	m	struct:v4l2_m2m_ops
job_spinlock	v4l2-mem2mem.c	/^	spinlock_t		job_spinlock;$/;"	m	struct:v4l2_m2m_dev	file:
join_thread	ffs-test.c	/^static void join_thread(struct thread *t)$/;"	f	file:
jpeg_markers	videodev2.h	/^	__u32 jpeg_markers;     \/* Which markers should go into the JPEG$/;"	m	struct:v4l2_jpegcompression
jump_entries	module.h	/^	struct jump_entry *jump_entries;$/;"	m	struct:module	typeref:struct:module::jump_entry
kHz	dvb_frontend.h	56;"	d
kallsyms	module.h	/^	struct mod_kallsyms *kallsyms;$/;"	m	struct:module	typeref:struct:module::mod_kallsyms
kernel_ioctl	dvbdev.h	/^	int (*kernel_ioctl)(struct file *file, unsigned int cmd, void *arg);$/;"	m	struct:dvb_device
kernel_ulong_t	mod_devicetable.h	/^typedef unsigned long kernel_ulong_t;$/;"	t
key	sysfs1.h	/^	struct lock_class_key	*key;$/;"	m	struct:attribute	typeref:struct:attribute::lock_class_key
keybit	mod_devicetable.h	/^	kernel_ulong_t keybit[INPUT_DEVICE_ID_KEY_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
keycode	rc-map.h	/^	u32	keycode;$/;"	m	struct:rc_map_table
keylock	rc-core.h	/^	spinlock_t			keylock;$/;"	m	struct:rc_dev
keypressed	rc-core.h	/^	bool				keypressed;$/;"	m	struct:rc_dev
keyup_jiffies	rc-core.h	/^	unsigned long			keyup_jiffies;$/;"	m	struct:rc_dev
ki	device.h	/^	struct klist_iter		ki;$/;"	m	struct:class_dev_iter	typeref:struct:class_dev_iter::klist_iter
ki	device.h	/^	struct klist_iter		ki;$/;"	m	struct:subsys_dev_iter	typeref:struct:subsys_dev_iter::klist_iter
klist_children	base.h	/^	struct klist klist_children;$/;"	m	struct:device_private	typeref:struct:device_private::klist
klist_devices	base.h	/^	struct klist klist_devices;$/;"	m	struct:driver_private	typeref:struct:driver_private::klist
klist_devices	base.h	/^	struct klist klist_devices;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::klist
klist_devices_get	bus.c	/^static void klist_devices_get(struct klist_node *n)$/;"	f	file:
klist_devices_put	bus.c	/^static void klist_devices_put(struct klist_node *n)$/;"	f	file:
klist_drivers	base.h	/^	struct klist klist_drivers;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::klist
klp	module.h	/^	bool klp; \/* Is this a livepatch module? *\/$/;"	m	struct:module
klp_alive	module.h	/^	bool klp_alive;$/;"	m	struct:module
klp_info	module.h	/^	struct klp_modinfo *klp_info;$/;"	m	struct:module	typeref:struct:module::klp_modinfo
klp_modinfo	module.h	/^struct klp_modinfo {$/;"	s
knode_bus	base.h	/^	struct klist_node knode_bus;$/;"	m	struct:device_private	typeref:struct:device_private::klist_node
knode_bus	base.h	/^	struct klist_node knode_bus;$/;"	m	struct:driver_private	typeref:struct:driver_private::klist_node
knode_class	device.h	/^	struct klist_node	knode_class;$/;"	m	struct:device	typeref:struct:device::klist_node
knode_driver	base.h	/^	struct klist_node knode_driver;$/;"	m	struct:device_private	typeref:struct:device_private::klist_node
knode_parent	base.h	/^	struct klist_node knode_parent;$/;"	m	struct:device_private	typeref:struct:device_private::klist_node
kobj	base.h	/^	struct kobject kobj;$/;"	m	struct:driver_private	typeref:struct:driver_private::kobject
kobj	device.h	/^	struct kobject kobj;$/;"	m	struct:device	typeref:struct:device::kobject
kobj	module.h	/^	struct kobject kobj;$/;"	m	struct:module_kobject	typeref:struct:module_kobject::kobject
kobj_completion	module.h	/^	struct completion *kobj_completion;$/;"	m	struct:module_kobject	typeref:struct:module_kobject::completion
kobj_to_dev	device.h	/^static inline struct device *kobj_to_dev(struct kobject *kobj)$/;"	f
kobj_to_i2c_client	i2c.h	/^static inline struct i2c_client *kobj_to_i2c_client(struct kobject *kobj)$/;"	f
kp	module.h	/^	struct kernel_param *kp;$/;"	m	struct:module	typeref:struct:module::kernel_param
kref	device.h	/^	struct kref kref;$/;"	m	struct:device_link	typeref:struct:device_link::kref
kstrtol	kernel.h	/^static inline int __must_check kstrtol(const char *s, unsigned int base, long *res)$/;"	f
kstrtos32	kernel.h	/^static inline int __must_check kstrtos32(const char *s, unsigned int base, s32 *res)$/;"	f
kstrtos32_from_user	kernel.h	/^static inline int __must_check kstrtos32_from_user(const char __user *s, size_t count, unsigned int base, s32 *res)$/;"	f
kstrtos64	kernel.h	/^static inline int __must_check kstrtos64(const char *s, unsigned int base, s64 *res)$/;"	f
kstrtos64_from_user	kernel.h	/^static inline int __must_check kstrtos64_from_user(const char __user *s, size_t count, unsigned int base, s64 *res)$/;"	f
kstrtou32	kernel.h	/^static inline int __must_check kstrtou32(const char *s, unsigned int base, u32 *res)$/;"	f
kstrtou32_from_user	kernel.h	/^static inline int __must_check kstrtou32_from_user(const char __user *s, size_t count, unsigned int base, u32 *res)$/;"	f
kstrtou64	kernel.h	/^static inline int __must_check kstrtou64(const char *s, unsigned int base, u64 *res)$/;"	f
kstrtou64_from_user	kernel.h	/^static inline int __must_check kstrtou64_from_user(const char __user *s, size_t count, unsigned int base, u64 *res)$/;"	f
kstrtoul	kernel.h	/^static inline int __must_check kstrtoul(const char *s, unsigned int base, unsigned long *res)$/;"	f
kthread	cec.h	/^	struct task_struct *kthread;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::task_struct
kthread_config	cec.h	/^	struct task_struct *kthread_config;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::task_struct
kthread_waitq	cec.h	/^	wait_queue_head_t kthread_waitq;$/;"	m	struct:cec_adapter
lab_mdelay	i2c-algo-pcf.h	/^	unsigned long lab_mdelay;$/;"	m	struct:i2c_algo_pcf_data
label	driver.h	/^	const char		*label;$/;"	m	struct:gpio_chip
label	driver.h	/^	const char *label;$/;"	m	struct:bgpio_pdata
label	gpio.h	/^	const char	*label;$/;"	m	struct:gpio
lane_polarities	v4l2-fwnode.h	/^	bool lane_polarities[1 + V4L2_FWNODE_CSI2_MAX_DATA_LANES];$/;"	m	struct:v4l2_fwnode_bus_mipi_csi2
lane_polarity	v4l2-fwnode.h	/^	bool lane_polarity[2];$/;"	m	struct:v4l2_fwnode_bus_mipi_csi1
lang0	ffs-test.c	/^	} __attribute__((packed)) lang0;$/;"	m	struct:__anon11	typeref:struct:__anon11::__anon12	file:
last	videobuf-core.h	/^	enum v4l2_field            last;   \/* for field=V4L2_FIELD_ALTERNATE *\/$/;"	m	struct:videobuf_queue	typeref:enum:videobuf_queue::v4l2_field
last_buffer_dequeued	videobuf2-core.h	/^	unsigned int			last_buffer_dequeued:1;$/;"	m	struct:vb2_queue
last_busy	pm.h	/^	unsigned long		last_busy;$/;"	m	struct:dev_pm_info
last_initiator	cec.h	/^	u8 last_initiator;$/;"	m	struct:cec_adapter
last_keycode	rc-core.h	/^	u32				last_keycode;$/;"	m	struct:rc_dev
last_protocol	rc-core.h	/^	enum rc_proto			last_protocol;$/;"	m	struct:rc_dev	typeref:enum:rc_dev::rc_proto
last_scancode	rc-core.h	/^	u32				last_scancode;$/;"	m	struct:rc_dev
last_toggle	rc-core.h	/^	u8				last_toggle;$/;"	m	struct:rc_dev
late_initcall	module.h	123;"	d
late_initcall_sync	module.h	124;"	d
layer	dvb_frontend.h	/^	} layer[3];$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::__anon7
le16_add_cpu	generic.h	/^static inline void le16_add_cpu(__le16 *var, u16 val)$/;"	f
le16_to_cpu	ffs-test.c	64;"	d	file:
le16_to_cpu	generic.h	91;"	d
le16_to_cpu	relocs.c	131;"	d	file:
le16_to_cpu	relocs.c	146;"	d	file:
le16_to_cpup	generic.h	103;"	d
le16_to_cpus	generic.h	115;"	d
le32_add_cpu	generic.h	/^static inline void le32_add_cpu(__le32 *var, u32 val)$/;"	f
le32_to_cpu	ffs-test.c	63;"	d	file:
le32_to_cpu	generic.h	89;"	d
le32_to_cpu	relocs.c	132;"	d	file:
le32_to_cpu	relocs.c	147;"	d	file:
le32_to_cpu_array	generic.h	/^static inline void le32_to_cpu_array(u32 *buf, unsigned int words)$/;"	f
le32_to_cpup	generic.h	101;"	d
le32_to_cpus	generic.h	113;"	d
le64_add_cpu	generic.h	/^static inline void le64_add_cpu(__le64 *var, u64 val)$/;"	f
le64_to_cpu	generic.h	87;"	d
le64_to_cpu	relocs.c	133;"	d	file:
le64_to_cpu	relocs.c	148;"	d	file:
le64_to_cpup	generic.h	99;"	d
le64_to_cpus	generic.h	111;"	d
led_brightness_to_intensity	v4l2-flash-led-class.h	/^	s32 (*led_brightness_to_intensity)$/;"	m	struct:v4l2_flash_ops
ledbit	mod_devicetable.h	/^	kernel_ulong_t ledbit[INPUT_DEVICE_ID_LED_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
left	videodev2.h	/^	__s32   left;$/;"	m	struct:v4l2_rect
len	i2c-core-acpi.c	/^	u8	len;$/;"	m	struct:gsb_buffer	file:
len	i2c-dev.c	/^	u16 len;$/;"	m	struct:i2c_msg32	file:
len	rc-map.h	/^	unsigned int		len;$/;"	m	struct:rc_map
length	property.h	/^	size_t length;$/;"	m	struct:property_entry
length	testusb.c	/^	unsigned		length;$/;"	m	struct:usbtest_param	file:
length	v4l2-compat-ioctl32.c	/^	__u32			length;$/;"	m	struct:v4l2_buffer32	file:
length	v4l2-compat-ioctl32.c	/^	__u32			length;$/;"	m	struct:v4l2_plane32	file:
length	v4l2-subdev.h	/^	u32 length;$/;"	m	struct:v4l2_mbus_frame_desc_entry
length	videobuf2-core.h	/^	unsigned int		length;$/;"	m	struct:vb2_plane
length	videodev2.h	/^	__u32			length;$/;"	m	struct:v4l2_buffer
length	videodev2.h	/^	__u32			length;$/;"	m	struct:v4l2_plane
length	videodev2.h	/^	__u32 length;$/;"	m	struct:v4l2_enc_idx_entry
lflags	machine.h	/^	enum gpio_lookup_flags lflags;$/;"	m	struct:gpiod_hog	typeref:enum:gpiod_hog::gpio_lookup_flags
licence	module.h	/^	} licence;$/;"	m	struct:symsearch	typeref:enum:symsearch::__anon27
limit	tuner-types.h	/^	unsigned short limit;$/;"	m	struct:tuner_range
line	v4l2-subdev.h	/^	u32 line;$/;"	m	struct:v4l2_decode_vbi_line
line	videodev2.h	/^	__u32   line;           \/* 1-23 *\/$/;"	m	struct:v4l2_sliced_vbi_data
line	videodev2.h	/^	struct v4l2_mpeg_vbi_itv0_line line[35];$/;"	m	struct:v4l2_mpeg_vbi_itv0	typeref:struct:v4l2_mpeg_vbi_itv0::v4l2_mpeg_vbi_itv0_line
line	videodev2.h	/^	struct v4l2_mpeg_vbi_itv0_line line[36];$/;"	m	struct:v4l2_mpeg_vbi_ITV0	typeref:struct:v4l2_mpeg_vbi_ITV0::v4l2_mpeg_vbi_itv0_line
line_name	machine.h	/^	const char *line_name;$/;"	m	struct:gpiod_hog
linemask	videodev2.h	/^	__le32 linemask[2]; \/* Bitmasks of VBI service lines present *\/$/;"	m	struct:v4l2_mpeg_vbi_itv0
link	media-entity.h	/^		struct list_head *link;$/;"	m	struct:media_graph::__anon15	typeref:struct:media_graph::__anon15::list_head
link	relocs.c	/^	struct section *link;$/;"	m	struct:section	typeref:struct:section::section	file:
link_freq	imx258.c	/^	struct v4l2_ctrl *link_freq;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_ctrl	file:
link_freq_configs	imx258.c	/^static const struct imx258_link_freq_config link_freq_configs[] = {$/;"	v	typeref:struct:imx258_link_freq_config	file:
link_freq_index	imx258.c	/^	u32 link_freq_index;$/;"	m	struct:imx258_mode	file:
link_freq_menu_items	imx258.c	/^static const s64 link_freq_menu_items[] = {$/;"	v	file:
link_freq_to_pixel_rate	imx258.c	/^static u64 link_freq_to_pixel_rate(u64 f)$/;"	f	file:
link_frequencies	v4l2-fwnode.h	/^	u64 *link_frequencies;$/;"	m	struct:v4l2_fwnode_endpoint
link_notify	media-device.h	/^	int (*link_notify)(struct media_link *link, u32 flags,$/;"	m	struct:media_device_ops
link_setup	media-entity.h	/^	int (*link_setup)(struct media_entity *entity,$/;"	m	struct:media_entity_operations
link_validate	media-entity.h	/^	int (*link_validate)(struct media_link *link);$/;"	m	struct:media_entity_operations
link_validate	v4l2-subdev.h	/^	int (*link_validate)(struct v4l2_subdev *sd, struct media_link *link,$/;"	m	struct:v4l2_subdev_pad_ops
links	device.h	/^	struct dev_links_info	links;$/;"	m	struct:device	typeref:struct:device::dev_links_info
links	media-device.h	/^	struct list_head links;$/;"	m	struct:media_device	typeref:struct:media_device::list_head
links	media-entity.h	/^	struct list_head		links;$/;"	m	struct:media_interface	typeref:struct:media_interface::list_head
links	media-entity.h	/^	struct list_head links;$/;"	m	struct:media_entity	typeref:struct:media_entity::list_head
links	media.h	/^	__u16 links;$/;"	m	struct:media_entity_desc
links	media.h	/^	struct media_link_desc __user *links;$/;"	m	struct:media_links_enum	typeref:struct:media_links_enum::__user
links_count	pm.h	/^	unsigned int		links_count;$/;"	m	struct:dev_pm_info
lirc_cdev	rc-core.h	/^	struct cdev			lirc_cdev;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::cdev
lirc_dev	rc-core.h	/^	struct device			lirc_dev;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::device
lirc_fh	rc-core.h	/^	struct list_head		lirc_fh;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::list_head
lirc_fh	rc-core.h	/^struct lirc_fh {$/;"	s
lirc_fh_lock	rc-core.h	/^	spinlock_t			lirc_fh_lock;$/;"	m	struct:rc_dev
list	cec.h	/^	struct list_head	list;$/;"	m	struct:cec_event_entry	typeref:struct:cec_event_entry::list_head
list	cec.h	/^	struct list_head	list;$/;"	m	struct:cec_fh	typeref:struct:cec_fh::list_head
list	cec.h	/^	struct list_head	list;$/;"	m	struct:cec_msg_entry	typeref:struct:cec_msg_entry::list_head
list	cec.h	/^	struct list_head list;$/;"	m	struct:cec_data	typeref:struct:cec_data::list_head
list	device.h	/^	struct list_head	list;$/;"	m	struct:device_connection	typeref:struct:device_connection::list_head
list	dvb_vb2.h	/^	struct list_head	list;$/;"	m	struct:dvb_buffer	typeref:struct:dvb_buffer::list_head
list	i2c-core.h	/^	struct list_head	list;$/;"	m	struct:i2c_devinfo	typeref:struct:i2c_devinfo::list_head
list	i2c-dev.c	/^	struct list_head list;$/;"	m	struct:i2c_dev	typeref:struct:i2c_dev::list_head	file:
list	machine.h	/^	struct list_head list;$/;"	m	struct:gpiod_hog	typeref:struct:gpiod_hog::list_head
list	machine.h	/^	struct list_head list;$/;"	m	struct:gpiod_lookup_table	typeref:struct:gpiod_lookup_table::list_head
list	media-device.h	/^	struct list_head list;$/;"	m	struct:media_entity_notify	typeref:struct:media_entity_notify::list_head
list	media-entity.h	/^	struct list_head	list;$/;"	m	struct:media_gobj	typeref:struct:media_gobj::list_head
list	media-entity.h	/^	struct list_head list;$/;"	m	struct:media_link	typeref:struct:media_link::list_head
list	module.h	/^	struct list_head list;$/;"	m	struct:module	typeref:struct:module::list_head
list	rc-core.h	/^	struct list_head list;$/;"	m	struct:lirc_fh	typeref:struct:lirc_fh::list_head
list	rc-map.h	/^	struct list_head	 list;$/;"	m	struct:rc_map_list	typeref:struct:rc_map_list::list_head
list	soc_camera.h	/^	struct list_head list;		\/* list of all registered devices *\/$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::list_head
list	soc_camera.h	/^	struct list_head list;$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::list_head
list	tuner-core.c	/^	struct list_head    list;$/;"	m	struct:tuner	typeref:struct:tuner::list_head	file:
list	v4l2-async.h	/^	struct list_head list;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::list_head
list	v4l2-async.h	/^	struct list_head list;$/;"	m	struct:v4l2_async_subdev	typeref:struct:v4l2_async_subdev::list_head
list	v4l2-clk.h	/^	struct list_head list;$/;"	m	struct:v4l2_clk	typeref:struct:v4l2_clk::list_head
list	v4l2-event.h	/^	struct list_head	list;$/;"	m	struct:v4l2_kevent	typeref:struct:v4l2_kevent::list_head
list	v4l2-event.h	/^	struct list_head	list;$/;"	m	struct:v4l2_subscribed_event	typeref:struct:v4l2_subscribed_event::list_head
list	v4l2-fh.h	/^	struct list_head	list;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::list_head
list	v4l2-mem2mem.h	/^	struct list_head	list;$/;"	m	struct:v4l2_m2m_buffer	typeref:struct:v4l2_m2m_buffer::list_head
list	v4l2-subdev.h	/^	struct list_head list;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::list_head
list_head	dvb_demux.h	/^	struct list_head list_head;$/;"	m	struct:dvb_demux_feed	typeref:struct:dvb_demux_feed::list_head
list_head	dvbdev.h	/^	struct list_head list_head;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::list_head
list_head	dvbdev.h	/^	struct list_head list_head;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::list_head
lna	dvb_frontend.h	/^	u32			lna;$/;"	m	struct:dtv_frontend_properties
load_fw	v4l2-subdev.h	/^	int (*load_fw)(struct v4l2_subdev *sd);$/;"	m	struct:v4l2_subdev_core_ops
local_fwnode	fwnode.h	/^	const struct fwnode_handle *local_fwnode;$/;"	m	struct:fwnode_endpoint	typeref:struct:fwnode_endpoint::fwnode_handle
local_node	v4l2-fwnode.h	/^	struct fwnode_handle *local_node;$/;"	m	struct:v4l2_fwnode_link	typeref:struct:v4l2_fwnode_link::fwnode_handle
local_port	v4l2-fwnode.h	/^	unsigned int local_port;$/;"	m	struct:v4l2_fwnode_link
lock	cec.h	/^	struct mutex		lock;$/;"	m	struct:cec_fh	typeref:struct:cec_fh::mutex
lock	cec.h	/^	struct mutex lock;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::mutex
lock	cec.h	/^	struct mutex lock;$/;"	m	struct:cec_devnode	typeref:struct:cec_devnode::mutex
lock	clk-provider.h	/^	spinlock_t	*lock;$/;"	m	struct:clk_divider
lock	clk-provider.h	/^	spinlock_t	*lock;$/;"	m	struct:clk_fractional_divider
lock	clk-provider.h	/^	spinlock_t	*lock;$/;"	m	struct:clk_gate
lock	clk-provider.h	/^	spinlock_t	*lock;$/;"	m	struct:clk_multiplier
lock	clk-provider.h	/^	spinlock_t	*lock;$/;"	m	struct:clk_mux
lock	dmxdev.h	/^	spinlock_t lock;$/;"	m	struct:dmxdev
lock	dvb_demux.h	/^	spinlock_t lock;$/;"	m	struct:dvb_demux
lock	dvb_ringbuffer.h	/^	spinlock_t        lock;$/;"	m	struct:dvb_ringbuffer
lock	pm.h	/^	spinlock_t		lock;$/;"	m	struct:dev_pm_info
lock	pm.h	/^	spinlock_t lock;$/;"	m	struct:pm_subsys_data
lock	rc-core.h	/^	struct mutex			lock;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::mutex
lock	rc-map.h	/^	spinlock_t		lock;$/;"	m	struct:rc_map
lock	v4l2-clk.h	/^	struct mutex lock; \/* Protect the enable count *\/$/;"	m	struct:v4l2_clk	typeref:struct:v4l2_clk::mutex
lock	v4l2-ctrls.h	/^	struct mutex *lock;$/;"	m	struct:v4l2_ctrl_handler	typeref:struct:v4l2_ctrl_handler::mutex
lock	v4l2-dev.h	/^	struct mutex *lock;$/;"	m	struct:video_device	typeref:struct:video_device::mutex
lock	v4l2-device.h	/^	spinlock_t lock;$/;"	m	struct:v4l2_device
lock	videobuf2-core.h	/^	struct mutex			*lock;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::mutex
lock	videobuf2-dvb.h	/^	struct mutex		lock;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::mutex
lock	videobuf2-dvb.h	/^	struct mutex lock;$/;"	m	struct:vb2_dvb_frontends	typeref:struct:vb2_dvb_frontends::mutex
lock_bus	i2c.h	/^	void (*lock_bus)(struct i2c_adapter *, unsigned int flags);$/;"	m	struct:i2c_lock_operations
lock_key	device.h	/^	struct lock_class_key lock_key;$/;"	m	struct:bus_type	typeref:struct:bus_type::lock_class_key
lock_key	driver.h	/^	struct lock_class_key *lock_key;$/;"	m	struct:gpio_irq_chip	typeref:struct:gpio_irq_chip::lock_class_key
lock_ops	i2c.h	/^	const struct i2c_lock_operations *lock_ops;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::i2c_lock_operations
lockdep_ok	kernel.h	/^enum lockdep_ok {$/;"	g
log	v4l2-ctrls.h	/^	void (*log)(const struct v4l2_ctrl *ctrl);$/;"	m	struct:v4l2_ctrl_type_ops
log_addrs	cec.h	/^	struct cec_log_addrs log_addrs;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_log_addrs
log_ctrl	v4l2-ctrls.c	/^static void log_ctrl(const struct v4l2_ctrl *ctrl,$/;"	f	file:
log_devres	devres.c	/^static int log_devres = 0;$/;"	v	file:
log_status	v4l2-subdev.h	/^	int (*log_status)(struct v4l2_subdev *sd);$/;"	m	struct:v4l2_subdev_core_ops
lookup_module_symbol_attrs	module.h	/^static inline int lookup_module_symbol_attrs(unsigned long addr, unsigned long *size, unsigned long *offset, char *modname, char *name)$/;"	f
lookup_module_symbol_name	module.h	/^static inline int lookup_module_symbol_name(unsigned long addr, char *symname)$/;"	f
low	cec-pin.h	/^	void (*low)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
lower_32_bits	kernel.h	235;"	d
lsb	videodev2.h	/^	__u8	lsb;$/;"	m	struct:v4l2_rds_data
m	v4l2-compat-ioctl32.c	/^	} m;$/;"	m	struct:v4l2_buffer32	typeref:union:v4l2_buffer32::__anon39	file:
m	v4l2-compat-ioctl32.c	/^	} m;$/;"	m	struct:v4l2_plane32	typeref:union:v4l2_plane32::__anon38	file:
m	videobuf2-core.h	/^	} m;$/;"	m	struct:vb2_plane	typeref:union:vb2_plane::__anon47
m	videodev2.h	/^	} m;$/;"	m	struct:v4l2_buffer	typeref:union:v4l2_buffer::__anon52
m	videodev2.h	/^	} m;$/;"	m	struct:v4l2_plane	typeref:union:v4l2_plane::__anon51
m2m_ctx	v4l2-fh.h	/^	struct v4l2_m2m_ctx	*m2m_ctx;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::v4l2_m2m_ctx
m2m_dev	v4l2-mem2mem.h	/^	struct v4l2_m2m_dev		*m2m_dev;$/;"	m	struct:v4l2_m2m_ctx	typeref:struct:v4l2_m2m_ctx::v4l2_m2m_dev
m2m_entity_name	v4l2-mem2mem.c	/^static const char * const m2m_entity_name[] = {$/;"	v	file:
m2m_ops	v4l2-mem2mem.c	/^	const struct v4l2_m2m_ops *m2m_ops;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::v4l2_m2m_ops	file:
magic	videobuf-core.h	/^	u32                     magic;$/;"	m	struct:videobuf_buffer
magic	videobuf-core.h	/^	u32                     magic;$/;"	m	struct:videobuf_qtype_ops
magic	videobuf-dma-contig.c	/^	u32 magic;$/;"	m	struct:videobuf_dma_contig_memory	file:
magic	videobuf-dma-sg.h	/^	u32                 magic;$/;"	m	struct:videobuf_dma_sg_memory
magic	videobuf-dma-sg.h	/^	u32                 magic;$/;"	m	struct:videobuf_dmabuf
magic	videobuf-vmalloc.h	/^	u32                 magic;$/;"	m	struct:videobuf_vmalloc_memory
magic	videodev2.h	/^	__u8 magic[4];$/;"	m	struct:v4l2_mpeg_vbi_fmt_ivtv
main	ffs-test.c	/^int main(int argc, char **argv)$/;"	f
main	relocs_main.c	/^int main(int argc, char **argv)$/;"	f
main	testusb.c	/^int main (int argc, char **argv)$/;"	f
major	media-entity.h	/^			u32 major;$/;"	m	struct:media_entity::__anon18::__anon19
major	media-entity.h	/^	u32				major;$/;"	m	struct:media_intf_devnode
major	media.h	/^			__u32 major;$/;"	m	struct:media_entity_desc::__anon20::__anon21
major	media.h	/^			__u32 major;$/;"	m	struct:media_entity_desc::__anon20::__anon23
major	media.h	/^			__u32 major;$/;"	m	struct:media_entity_desc::__anon20::__anon24
major	media.h	/^	__u32 major;$/;"	m	struct:media_v2_intf_devnode
managed_alloc	rc-core.h	/^	bool				managed_alloc;$/;"	m	struct:rc_dev
manf_id	mod_devicetable.h	/^	__u16		manf_id;$/;"	m	struct:pcmcia_device_id
manf_id	mod_devicetable.h	/^	__u16 manf_id, prod_code;$/;"	m	struct:slim_device_id
manual_mode_value	v4l2-ctrls.h	/^	unsigned int manual_mode_value:8;$/;"	m	struct:v4l2_ctrl
manuf	mod_devicetable.h	/^	__u16	manuf;$/;"	m	struct:bcma_device_id
manufacturer_id	i2c.h	/^	u16 manufacturer_id;$/;"	m	struct:i2c_device_identity
map	driver.h	/^	unsigned int *map;$/;"	m	struct:gpio_irq_chip
map	rc-map.h	/^	struct rc_map map;$/;"	m	struct:rc_map_list	typeref:struct:rc_map_list::rc_map
map	videobuf-core.h	/^	struct videobuf_mapping *map;$/;"	m	struct:videobuf_buffer	typeref:struct:videobuf_buffer::videobuf_mapping
map_dmabuf	videobuf2-core.h	/^	int		(*map_dmabuf)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
map_name	rc-core.h	/^	const char			*map_name;$/;"	m	struct:rc_dev
mask	clk-provider.h	/^	u32		mask;$/;"	m	struct:clk_mux
mask	mod_devicetable.h	/^	unsigned int		mask;$/;"	m	struct:amba_id
mask	rc-core.h	/^	u32 mask;$/;"	m	struct:rc_scancode_filter
maskandmode	dvb_demux.h	/^	u8 maskandmode[DMX_MAX_FILTER_SIZE];$/;"	m	struct:dvb_demux_filter
maskandnotmode	dvb_demux.h	/^	u8 maskandnotmode[DMX_MAX_FILTER_SIZE];$/;"	m	struct:dvb_demux_filter
master_clock	soc_camera.h	/^	unsigned long master_clock;$/;"	m	struct:soc_camera_sense
master_xfer	i2c.h	/^	int (*master_xfer)(struct i2c_adapter *adap, struct i2c_msg *msgs,$/;"	m	struct:i2c_algorithm
match	device.h	/^	int (*match)(struct device *dev, struct device_driver *drv);$/;"	m	struct:bus_type
match	v4l2-async.h	/^			bool (*match)(struct device *,$/;"	m	struct:v4l2_async_subdev::__anon34::__anon36
match	v4l2-async.h	/^	} match;$/;"	m	struct:v4l2_async_subdev	typeref:union:v4l2_async_subdev::__anon34
match	videodev2.h	/^	struct v4l2_dbg_match match;$/;"	m	struct:v4l2_dbg_chip_info	typeref:struct:v4l2_dbg_chip_info::v4l2_dbg_match
match	videodev2.h	/^	struct v4l2_dbg_match match;$/;"	m	struct:v4l2_dbg_register	typeref:struct:v4l2_dbg_register::v4l2_dbg_match
match_custom	v4l2-async.c	/^static bool match_custom(struct v4l2_subdev *sd, struct v4l2_async_subdev *asd)$/;"	f	file:
match_devname	v4l2-async.c	/^static bool match_devname(struct v4l2_subdev *sd,$/;"	f	file:
match_flags	mod_devicetable.h	/^	__u16		match_flags;$/;"	m	struct:pcmcia_device_id
match_flags	mod_devicetable.h	/^	__u16		match_flags;$/;"	m	struct:usb_device_id
match_flags	mod_devicetable.h	/^	__u16	match_flags;	\/* which fields to match against *\/$/;"	m	struct:ccw_device_id
match_flags	mod_devicetable.h	/^	__u16 match_flags;	\/* which fields to match against *\/$/;"	m	struct:ap_device_id
match_flags	mod_devicetable.h	/^	__u32 match_flags;$/;"	m	struct:ieee1394_device_id
match_flags	mod_devicetable.h	/^	__u32 match_flags;$/;"	m	struct:tb_service_id
match_flags	mod_devicetable.h	/^	__u8 match_flags;$/;"	m	struct:css_device_id
match_fwnode	v4l2-async.c	/^static bool match_fwnode(struct v4l2_subdev *sd, struct v4l2_async_subdev *asd)$/;"	f	file:
match_i2c	v4l2-async.c	/^static bool match_i2c(struct v4l2_subdev *sd, struct v4l2_async_subdev *asd)$/;"	f	file:
match_name	bus.c	/^static int match_name(struct device *dev, void *data)$/;"	f	file:
match_type	v4l2-async.h	/^	enum v4l2_async_match_type match_type;$/;"	m	struct:v4l2_async_subdev	typeref:enum:v4l2_async_subdev::v4l2_async_match_type
matches	mod_devicetable.h	/^	struct dmi_strmatch matches[4];$/;"	m	struct:dmi_system_id	typeref:struct:dmi_system_id::dmi_strmatch
mattr	module.h	/^	struct module_attribute mattr;$/;"	m	struct:module_version_attribute	typeref:struct:module_version_attribute::module_attribute
max	kernel.h	886;"	d
max	tuner-types.h	/^	u16 max;$/;"	m	struct:tunertype
max	v4l2-ctrls.h	/^	s64 max;$/;"	m	struct:v4l2_ctrl_config
max	videodev2.h	/^	struct v4l2_fract	max;		\/* Maximum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
max3	kernel.h	902;"	d
max_adapters	i2c-mux.h	/^	int max_adapters;$/;"	m	struct:i2c_mux_core
max_comb_1st_msg_len	i2c.h	/^	u16 max_comb_1st_msg_len;$/;"	m	struct:i2c_adapter_quirks
max_comb_2nd_msg_len	i2c.h	/^	u16 max_comb_2nd_msg_len;$/;"	m	struct:i2c_adapter_quirks
max_drift	dvb_frontend.h	/^	int max_drift;$/;"	m	struct:dvb_frontend_tune_settings
max_height	videodev2.h	/^	__u32			max_height;	\/* Maximum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
max_height	videodev2.h	/^	__u32	max_height;$/;"	m	struct:v4l2_bt_timings_cap
max_num_msgs	i2c.h	/^	int max_num_msgs;$/;"	m	struct:i2c_adapter_quirks
max_pixelclock	videodev2.h	/^	__u64	max_pixelclock;$/;"	m	struct:v4l2_bt_timings_cap
max_pulse_width	v4l2-subdev.h	/^	u32 max_pulse_width;$/;"	m	struct:v4l2_subdev_ir_parameters
max_rate	clk-provider.h	/^	unsigned long max_rate;$/;"	m	struct:clk_rate_request
max_read_len	i2c.h	/^	u16 max_read_len;$/;"	m	struct:i2c_adapter_quirks
max_segment_size	device.h	/^	unsigned int max_segment_size;$/;"	m	struct:device_dma_parameters
max_subdevs	v4l2-async.h	/^	unsigned int max_subdevs;$/;"	m	struct:v4l2_async_notifier
max_t	kernel.h	946;"	d
max_timeout	rc-core.h	/^	u32				max_timeout;$/;"	m	struct:rc_dev
max_uV	consumer1.h	/^	unsigned long max_uV;$/;"	m	struct:pre_voltage_change_data
max_width	videodev2.h	/^	__u32			max_width;	\/* Maximum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
max_width	videodev2.h	/^	__u32	max_width;$/;"	m	struct:v4l2_bt_timings_cap
max_write_len	i2c.h	/^	u16 max_write_len;$/;"	m	struct:i2c_adapter_quirks
maximum	v4l2-ctrls.h	/^	s64 minimum, maximum, default_value;$/;"	m	struct:v4l2_ctrl
maximum	videodev2.h	/^	__s32		     maximum;$/;"	m	struct:v4l2_queryctrl
maximum	videodev2.h	/^	__s32 maximum;$/;"	m	struct:v4l2_event_ctrl
maximum	videodev2.h	/^	__s64		     maximum;$/;"	m	struct:v4l2_query_ext_ctrl
may_do_mmap	dmxdev.h	/^	unsigned int may_do_mmap:1;$/;"	m	struct:dmxdev
may_skip_resume	pm.h	/^	unsigned int		may_skip_resume:1;	\/* Set by subsystems *\/$/;"	m	struct:dev_pm_info
mcb_device_id	mod_devicetable.h	/^struct mcb_device_id {$/;"	s
mdelay	delay.h	43;"	d
mdev	dvbdev.h	/^	struct media_device *mdev;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::media_device
mdev	media-entity.h	/^	struct media_device	*mdev;$/;"	m	struct:media_gobj	typeref:struct:media_gobj::media_device
mdev	v4l2-device.h	/^	struct media_device *mdev;$/;"	m	struct:v4l2_device	typeref:struct:v4l2_device::media_device
mdev_lock	dvbdev.h	/^	struct mutex mdev_lock;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::mutex
mdio_device_id	mod_devicetable.h	/^struct mdio_device_id {$/;"	s
media_dev	media-devnode.h	/^	struct media_device *media_dev;$/;"	m	struct:media_devnode	typeref:struct:media_devnode::media_device
media_device	media-device.h	/^struct media_device {$/;"	s
media_device_for_each_entity	media-device.h	370;"	d
media_device_for_each_intf	media-device.h	374;"	d
media_device_for_each_link	media-device.h	382;"	d
media_device_for_each_pad	media-device.h	378;"	d
media_device_info	media.h	/^struct media_device_info {$/;"	s
media_device_ops	media-device.h	/^struct media_device_ops {$/;"	s
media_device_pci_init	media-device.h	/^static inline void media_device_pci_init(struct media_device *mdev,$/;"	f
media_device_register	media-device.h	/^static inline int media_device_register(struct media_device *mdev)$/;"	f
media_device_register	media-device.h	270;"	d
media_device_register_entity	media-device.h	/^static inline int media_device_register_entity(struct media_device *mdev,$/;"	f
media_device_register_entity_notify	media-device.h	/^static inline int media_device_register_entity_notify($/;"	f
media_device_unregister	media-device.h	/^static inline void media_device_unregister(struct media_device *mdev)$/;"	f
media_device_unregister_entity	media-device.h	/^static inline void media_device_unregister_entity(struct media_entity *entity)$/;"	f
media_device_unregister_entity_notify	media-device.h	/^static inline void media_device_unregister_entity_notify($/;"	f
media_device_usb_init	media-device.h	475;"	d
media_devnode	media-devnode.h	/^struct media_devnode {$/;"	s
media_devnode_data	media-devnode.h	/^static inline struct media_devnode *media_devnode_data(struct file *filp)$/;"	f
media_devnode_is_registered	media-devnode.h	/^static inline int media_devnode_is_registered(struct media_devnode *devnode)$/;"	f
media_entity	media-entity.h	/^struct media_entity {$/;"	s
media_entity_call	media-entity.h	1084;"	d
media_entity_cleanup	media-entity.h	/^static inline void media_entity_cleanup(struct media_entity *entity) {}$/;"	f
media_entity_cleanup	media-entity.h	640;"	d
media_entity_desc	media.h	/^struct media_entity_desc {$/;"	s
media_entity_enum	media-entity.h	/^struct media_entity_enum {$/;"	s
media_entity_enum_clear	media-entity.h	/^static inline void media_entity_enum_clear(struct media_entity_enum *ent_enum,$/;"	f
media_entity_enum_empty	media-entity.h	/^static inline bool media_entity_enum_empty(struct media_entity_enum *ent_enum)$/;"	f
media_entity_enum_init	media-device.h	/^static inline __must_check int media_entity_enum_init($/;"	f
media_entity_enum_intersects	media-entity.h	/^static inline bool media_entity_enum_intersects($/;"	f
media_entity_enum_set	media-entity.h	/^static inline void media_entity_enum_set(struct media_entity_enum *ent_enum,$/;"	f
media_entity_enum_test	media-entity.h	/^static inline bool media_entity_enum_test(struct media_entity_enum *ent_enum,$/;"	f
media_entity_enum_test_and_set	media-entity.h	/^media_entity_enum_test_and_set(struct media_entity_enum *ent_enum,$/;"	f
media_entity_enum_zero	media-entity.h	/^static inline void media_entity_enum_zero(struct media_entity_enum *ent_enum)$/;"	f
media_entity_id	media-entity.h	/^static inline u32 media_entity_id(struct media_entity *entity)$/;"	f
media_entity_notify	media-device.h	/^struct media_entity_notify {$/;"	s
media_entity_operations	media-entity.h	/^struct media_entity_operations {$/;"	s
media_entity_to_v4l2_subdev	v4l2-subdev.h	875;"	d
media_entity_to_video_device	v4l2-dev.h	302;"	d
media_entity_type	media-entity.h	/^enum media_entity_type {$/;"	g
media_file_operations	media-devnode.h	/^struct media_file_operations {$/;"	s
media_gobj	media-entity.h	/^struct media_gobj {$/;"	s
media_gobj_gen_id	media-entity.h	/^static inline u32 media_gobj_gen_id(enum media_gobj_type type, u64 local_id)$/;"	f
media_gobj_type	media-entity.h	/^enum media_gobj_type {$/;"	g
media_graph	media-entity.h	/^struct media_graph {$/;"	s
media_id	media-entity.h	/^static inline u32 media_id(struct media_gobj *gobj)$/;"	f
media_interface	media-entity.h	/^struct media_interface {$/;"	s
media_intf_devnode	media-entity.h	/^struct media_intf_devnode {$/;"	s
media_link	media-entity.h	/^struct media_link {$/;"	s
media_link_desc	media.h	/^struct media_link_desc {$/;"	s
media_links_enum	media.h	/^struct media_links_enum {$/;"	s
media_pad	media-entity.h	/^struct media_pad {$/;"	s
media_pad_desc	media.h	/^struct media_pad_desc {$/;"	s
media_pipeline	media-entity.h	/^struct media_pipeline {$/;"	s
media_type	media-entity.h	/^static inline enum media_gobj_type media_type(struct media_gobj *gobj)$/;"	f
media_v2_entity	media.h	/^struct media_v2_entity {$/;"	s
media_v2_interface	media.h	/^struct media_v2_interface {$/;"	s
media_v2_intf_devnode	media.h	/^struct media_v2_intf_devnode {$/;"	s
media_v2_link	media.h	/^struct media_v2_link {$/;"	s
media_v2_pad	media.h	/^struct media_v2_pad {$/;"	s
media_v2_topology	media.h	/^struct media_v2_topology {$/;"	s
media_version	media.h	/^	__u32 media_version;$/;"	m	struct:media_device_info
mei_cl_device_id	mod_devicetable.h	/^struct mei_cl_device_id {$/;"	s
mem	vsp1.h	/^	dma_addr_t mem[3];$/;"	m	struct:vsp1_du_atomic_config
mem_offset	v4l2-compat-ioctl32.c	/^		__u32		mem_offset;$/;"	m	union:v4l2_plane32::__anon38	file:
mem_offset	videodev2.h	/^		__u32		mem_offset;$/;"	m	union:v4l2_plane::__anon51
mem_ops	videobuf2-core.h	/^	const struct vb2_mem_ops	*mem_ops;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::vb2_mem_ops
mem_priv	videobuf2-core.h	/^	void			*mem_priv;$/;"	m	struct:vb2_plane
memalloc_noio	pm.h	/^	unsigned int		memalloc_noio:1;$/;"	m	struct:dev_pm_info
memcopy	dvb_demux.h	/^	void (*memcopy)(struct dvb_demux_feed *feed, u8 *dst,$/;"	m	struct:dvb_demux
memory	v4l2-compat-ioctl32.c	/^	__u32			memory;	\/* enum v4l2_memory *\/$/;"	m	struct:v4l2_buffer32	file:
memory	v4l2-compat-ioctl32.c	/^	__u32			memory;	\/* enum v4l2_memory *\/$/;"	m	struct:v4l2_create_buffers32	file:
memory	videobuf-core.h	/^	enum v4l2_memory        memory;$/;"	m	struct:videobuf_buffer	typeref:enum:videobuf_buffer::v4l2_memory
memory	videobuf2-core.h	/^	unsigned int			memory;$/;"	m	struct:vb2_queue
memory	videobuf2-core.h	/^	unsigned int		memory;$/;"	m	struct:vb2_buffer
memory	videodev2.h	/^	__u32			memory;		\/* enum v4l2_memory *\/$/;"	m	struct:v4l2_requestbuffers
memory	videodev2.h	/^	__u32			memory;$/;"	m	struct:v4l2_buffer
memory	videodev2.h	/^	__u32			memory;$/;"	m	struct:v4l2_create_buffers
menu_skip_mask	v4l2-ctrls.h	/^		u64 menu_skip_mask;$/;"	m	union:v4l2_ctrl::__anon43
menu_skip_mask	v4l2-ctrls.h	/^	u64 menu_skip_mask;$/;"	m	struct:v4l2_ctrl_config
merge	v4l2-event.h	/^	void (*merge)(const struct v4l2_event *old, struct v4l2_event *new);$/;"	m	struct:v4l2_subscribed_event_ops
meta	v4l2-compat-ioctl32.c	/^		struct v4l2_meta_format	meta;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_meta_format	file:
meta	videodev2.h	/^		struct v4l2_meta_format		meta;    \/* V4L2_BUF_TYPE_META_CAPTURE *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_meta_format
mfe_dvbdev	dvbdev.h	/^	struct dvb_device *mfe_dvbdev;	\/* frontend device in use *\/$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::dvb_device
mfe_lock	dvbdev.h	/^	struct mutex mfe_lock;		\/* access lock for thread creation *\/$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::mutex
mfe_shared	dvbdev.h	/^	int mfe_shared;			\/* indicates mutually exclusive frontends *\/$/;"	m	struct:dvb_adapter
mfg_id	mod_devicetable.h	/^	__u16 mfg_id;$/;"	m	struct:sdw_device_id
might_fault	kernel.h	/^static inline void might_fault(void) { }$/;"	f
might_fault	kernel.h	319;"	d
might_resched	kernel.h	243;"	d
might_resched	kernel.h	245;"	d
might_sleep	kernel.h	261;"	d
might_sleep	kernel.h	269;"	d
might_sleep_if	kernel.h	273;"	d
min	kernel.h	879;"	d
min	tuner-types.h	/^	u16 min;$/;"	m	struct:tunertype
min	v4l2-ctrls.h	/^	s64 min;$/;"	m	struct:v4l2_ctrl_config
min	videodev2.h	/^	struct v4l2_fract	min;		\/* Minimum frame interval [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
min3	kernel.h	894;"	d
min_buffers_needed	videobuf2-core.h	/^	u32				min_buffers_needed;$/;"	m	struct:vb2_queue
min_delay_ms	dvb_frontend.h	/^	int min_delay_ms;$/;"	m	struct:dvb_frontend_tune_settings
min_height	videodev2.h	/^	__u32			min_height;	\/* Minimum frame height [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
min_height	videodev2.h	/^	__u32	min_height;$/;"	m	struct:v4l2_bt_timings_cap
min_length	videobuf2-core.h	/^	unsigned int		min_length;$/;"	m	struct:vb2_plane
min_not_zero	kernel.h	909;"	d
min_pixelclock	videodev2.h	/^	__u64	min_pixelclock;$/;"	m	struct:v4l2_bt_timings_cap
min_rate	clk-provider.h	/^	unsigned long min_rate;$/;"	m	struct:clk_rate_request
min_speed	i2c-core-acpi.c	/^	u32 min_speed;$/;"	m	struct:i2c_acpi_lookup	file:
min_t	kernel.h	938;"	d
min_timeout	rc-core.h	/^	u32				min_timeout;$/;"	m	struct:rc_dev
min_uV	consumer1.h	/^	unsigned long min_uV;$/;"	m	struct:pre_voltage_change_data
min_width	videodev2.h	/^	__u32			min_width;	\/* Minimum frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
min_width	videodev2.h	/^	__u32	min_width;$/;"	m	struct:v4l2_bt_timings_cap
minimum	v4l2-ctrls.h	/^	s64 minimum, maximum, default_value;$/;"	m	struct:v4l2_ctrl
minimum	videodev2.h	/^	__s32		     minimum;	\/* Note signedness *\/$/;"	m	struct:v4l2_queryctrl
minimum	videodev2.h	/^	__s32 minimum;$/;"	m	struct:v4l2_event_ctrl
minimum	videodev2.h	/^	__s64		     minimum;$/;"	m	struct:v4l2_query_ext_ctrl
minor	cec.h	/^	int minor;$/;"	m	struct:cec_devnode
minor	dvbdev.h	/^	int minor;$/;"	m	struct:dvb_device
minor	media-devnode.h	/^	int minor;$/;"	m	struct:media_devnode
minor	media-entity.h	/^			u32 minor;$/;"	m	struct:media_entity::__anon18::__anon19
minor	media-entity.h	/^	u32				minor;$/;"	m	struct:media_intf_devnode
minor	media.h	/^			__u32 minor;$/;"	m	struct:media_entity_desc::__anon20::__anon21
minor	media.h	/^			__u32 minor;$/;"	m	struct:media_entity_desc::__anon20::__anon23
minor	media.h	/^			__u32 minor;$/;"	m	struct:media_entity_desc::__anon20::__anon24
minor	media.h	/^	__u32 minor;$/;"	m	struct:media_v2_intf_devnode
minor	rc-core.h	/^	unsigned int			minor;$/;"	m	struct:rc_dev
minor	v4l2-dev.h	/^	int minor;$/;"	m	struct:video_device
minutes	videodev2.h	/^	__u8	minutes;$/;"	m	struct:v4l2_timecode
mipi_csi1	v4l2-fwnode.h	/^		struct v4l2_fwnode_bus_mipi_csi1 mipi_csi1;$/;"	m	union:v4l2_fwnode_endpoint::__anon46	typeref:struct:v4l2_fwnode_endpoint::__anon46::v4l2_fwnode_bus_mipi_csi1
mipi_csi2	v4l2-fwnode.h	/^		struct v4l2_fwnode_bus_mipi_csi2 mipi_csi2;$/;"	m	union:v4l2_fwnode_endpoint::__anon46	typeref:struct:v4l2_fwnode_endpoint::__anon46::v4l2_fwnode_bus_mipi_csi2
mipi_data_rate_1267mbps	imx258.c	/^static const struct imx258_reg mipi_data_rate_1267mbps[] = {$/;"	v	typeref:struct:imx258_reg	file:
mipi_data_rate_640mbps	imx258.c	/^static const struct imx258_reg mipi_data_rate_640mbps[] = {$/;"	v	typeref:struct:imx258_reg	file:
mips_cdmm_device_id	mod_devicetable.h	/^struct mips_cdmm_device_id {$/;"	s
mkobj	base.h	/^	struct module_kobject *mkobj;$/;"	m	struct:driver_private	typeref:struct:driver_private::module_kobject
mkobj	module.h	/^	struct module_kobject mkobj;$/;"	m	struct:module	typeref:struct:module::module_kobject
mmap	sysfs1.h	/^	int (*mmap)(struct file *, struct kobject *, struct bin_attribute *attr,$/;"	m	struct:bin_attribute
mmap	v4l2-dev.h	/^	int (*mmap) (struct file *, struct vm_area_struct *);$/;"	m	struct:v4l2_file_operations
mmap	videobuf2-core.h	/^	int		(*mmap)(void *buf_priv, struct vm_area_struct *vma);$/;"	m	struct:vb2_mem_ops
mmap_lock	videobuf2-core.h	/^	struct mutex			mmap_lock;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::mutex
mmap_mapper	videobuf-core.h	/^	int (*mmap_mapper)	(struct videobuf_queue *q,$/;"	m	struct:videobuf_qtype_ops
mmask	clk-provider.h	/^	u32		mmask;$/;"	m	struct:clk_fractional_divider
mod	module.h	/^	struct module *mod;$/;"	m	struct:mod_tree_node	typeref:struct:mod_tree_node::module
mod	module.h	/^	struct module *mod;$/;"	m	struct:module_kobject	typeref:struct:module_kobject::module
mod_kallsyms	module.h	/^struct mod_kallsyms {$/;"	s
mod_name	device.h	/^	const char		*mod_name;	\/* used for built-in modules *\/$/;"	m	struct:device_driver
mod_tree_node	module.h	/^struct mod_tree_node {$/;"	s
mode	dvb_frontend.h	/^	unsigned int mode;$/;"	m	struct:analog_parameters
mode	imx219.c	/^	const struct imx219_mode *mode;$/;"	m	struct:imx219	typeref:struct:imx219::imx219_mode	file:
mode	mod_devicetable.h	/^	__u8 mode;$/;"	m	struct:typec_device_id
mode	sysfs1.h	/^	umode_t			mode;$/;"	m	struct:attribute
mode	tuner-core.c	/^	enum v4l2_tuner_type mode;$/;"	m	struct:tuner	typeref:enum:tuner::v4l2_tuner_type	file:
mode	v4l2-subdev.h	/^	enum v4l2_subdev_ir_mode mode;$/;"	m	struct:v4l2_subdev_ir_parameters	typeref:enum:v4l2_subdev_ir_parameters::v4l2_subdev_ir_mode
mode	videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audio
mode	videodev2.h	/^	__u32	mode;$/;"	m	struct:v4l2_audioout
mode_1048_780_regs	imx258.c	/^static const struct imx258_reg mode_1048_780_regs[] = {$/;"	v	typeref:struct:imx258_reg	file:
mode_1640_1232_regs	imx219.c	/^static const struct imx219_reg mode_1640_1232_regs[] = {$/;"	v	typeref:struct:imx219_reg	file:
mode_1920_1080_regs	imx219.c	/^static const struct imx219_reg mode_1920_1080_regs[] = {$/;"	v	typeref:struct:imx219_reg	file:
mode_2104_1560_regs	imx258.c	/^static const struct imx258_reg mode_2104_1560_regs[] = {$/;"	v	typeref:struct:imx258_reg	file:
mode_3280x2464_regs	imx219.c	/^static const struct imx219_reg mode_3280x2464_regs[] = {$/;"	v	typeref:struct:imx219_reg	file:
mode_4208x3118_regs	imx258.c	/^static const struct imx258_reg mode_4208x3118_regs[] = {$/;"	v	typeref:struct:imx258_reg	file:
mode_follower	cec.h	/^	u8			mode_follower;$/;"	m	struct:cec_fh
mode_initiator	cec.h	/^	u8			mode_initiator;$/;"	m	struct:cec_fh
mode_mask	tuner-core.c	/^	unsigned int        mode_mask; \/* Combination of allowable modes *\/$/;"	m	struct:tuner	file:
mode_mask	tuner.h	/^	unsigned int	mode_mask;$/;"	m	struct:tuner_setup
model	media-device.h	/^	char model[32];$/;"	m	struct:media_device
model	media.h	/^	char model[32];$/;"	m	struct:media_device_info
model	mod_devicetable.h	/^	__u16 model;$/;"	m	struct:x86_cpu_id
model	tveeprom.h	/^	u32 model;$/;"	m	struct:tveeprom
model_id	mod_devicetable.h	/^	__u32 model_id;$/;"	m	struct:ieee1394_device_id
modinfo_attrs	module.h	/^	struct module_attribute *modinfo_attrs;$/;"	m	struct:module	typeref:struct:module::module_attribute
modulation	dvb_frontend.h	/^	    enum fe_modulation	modulation;$/;"	m	struct:dtv_frontend_properties::__anon7	typeref:enum:dtv_frontend_properties::__anon7::fe_modulation
modulation	dvb_frontend.h	/^	enum fe_modulation	modulation;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_modulation
modulation	v4l2-subdev.h	/^	bool modulation;$/;"	m	struct:v4l2_subdev_ir_parameters
modulation	videodev2.h	/^	__u32	modulation;$/;"	m	struct:v4l2_frequency_band
modulator	videodev2.h	/^	__u32	     modulator;         \/*  Associated modulator *\/$/;"	m	struct:v4l2_output
module	dvbdev.h	/^	struct module *module;$/;"	m	struct:dvb_adapter	typeref:struct:dvb_adapter::module
module	kernel.h	/^	bool module;	\/* also show as a per-module taint flag *\/$/;"	m	struct:taint_flag
module	module.h	/^struct module {$/;"	s
module_add_driver	base.h	/^static inline void module_add_driver(struct module *mod,$/;"	f
module_address_lookup	module.h	/^static inline const char *module_address_lookup(unsigned long addr,$/;"	f
module_attribute	module.h	/^struct module_attribute {$/;"	s
module_bug_cleanup	module.h	/^static inline void module_bug_cleanup(struct module *mod) {}$/;"	f
module_bug_finalize	module.h	/^static inline void module_bug_finalize(const Elf_Ehdr *hdr,$/;"	f
module_disable_ro	module.h	/^static inline void module_disable_ro(const struct module *mod) { }$/;"	f
module_driver	device.h	1600;"	d
module_enable_ro	module.h	/^static inline void module_enable_ro(const struct module *mod, bool after_init) { }$/;"	f
module_exit	module.h	136;"	d
module_exit	module.h	99;"	d
module_get_kallsym	module.h	/^static inline int module_get_kallsym(unsigned int symnum, unsigned long *value,$/;"	f
module_i2c_driver	i2c.h	870;"	d
module_init	module.h	130;"	d
module_init	module.h	87;"	d
module_is_live	module.h	/^static inline bool module_is_live(struct module *mod)$/;"	f
module_kallsyms_lookup_name	module.h	/^static inline unsigned long module_kallsyms_lookup_name(const char *name)$/;"	f
module_kallsyms_on_each_symbol	module.h	/^static inline int module_kallsyms_on_each_symbol(int (*fn)(void *, const char *,$/;"	f
module_kobject	module.h	/^struct module_kobject {$/;"	s
module_layout	module.h	/^struct module_layout {$/;"	s
module_name	module.h	/^	const char *module_name;$/;"	m	struct:module_version_attribute
module_name	module.h	610;"	d
module_name	module.h	704;"	d
module_name	soc_camera.h	/^	const char *module_name;$/;"	m	struct:soc_camera_host_desc
module_name	soc_camera.h	/^	const char *module_name;$/;"	m	struct:soc_camera_link
module_put	module.h	/^static inline void module_put(struct module *module)$/;"	f
module_put_and_exit	module.h	574;"	d
module_put_and_exit	module.h	757;"	d
module_remove_driver	base.h	/^static inline void module_remove_driver(struct device_driver *drv) { }$/;"	f
module_requested_async_probing	module.h	/^static inline bool module_requested_async_probing(struct module *module)$/;"	f
module_sig_ok	module.h	/^static inline bool module_sig_ok(struct module *module)$/;"	f
module_state	module.h	/^enum module_state {$/;"	g
module_use	module.h	/^struct module_use {$/;"	s
module_version_attribute	module.h	/^struct module_version_attribute {$/;"	s
modversion_info	module.h	/^struct modversion_info {$/;"	s
monitor_all_cnt	cec.h	/^	u32 monitor_all_cnt;$/;"	m	struct:cec_adapter
monitor_pin_cnt	cec.h	/^	u32 monitor_pin_cnt;$/;"	m	struct:cec_adapter
motion_det	videodev2.h	/^		struct v4l2_event_motion_det	motion_det;$/;"	m	union:v4l2_event::__anon70	typeref:struct:v4l2_event::__anon70::v4l2_event_motion_det
mp	module.h	/^	struct module_param_attrs *mp;$/;"	m	struct:module_kobject	typeref:struct:module_kobject::module_param_attrs
mref	v4l2-ctrls.c	/^	struct v4l2_ctrl_ref *mref;$/;"	m	struct:v4l2_ctrl_helper	typeref:struct:v4l2_ctrl_helper::v4l2_ctrl_ref	file:
msb	videodev2.h	/^	__u8	msb;$/;"	m	struct:v4l2_rds_data
mscbit	mod_devicetable.h	/^	kernel_ulong_t mscbit[INPUT_DEVICE_ID_MSC_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
msg	cec.h	/^	struct cec_msg		msg;$/;"	m	struct:cec_msg_entry	typeref:struct:cec_msg_entry::cec_msg
msg	cec.h	/^	struct cec_msg msg;$/;"	m	struct:cec_data	typeref:struct:cec_data::cec_msg
msgs	cec.h	/^	struct list_head	msgs; \/* queued messages *\/$/;"	m	struct:cec_fh	typeref:struct:cec_fh::list_head
msgs	i2c-dev.c	/^	compat_caddr_t msgs; \/* struct i2c_msg __user *msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data32	file:
mshift	clk-provider.h	/^	u8		mshift;$/;"	m	struct:clk_fractional_divider
msi_domain	device.h	/^	struct irq_domain	*msi_domain;$/;"	m	struct:device	typeref:struct:device::irq_domain
msi_list	device.h	/^	struct list_head	msi_list;$/;"	m	struct:device	typeref:struct:device::list_head
msize	videobuf-core.h	/^	unsigned int               msize;$/;"	m	struct:videobuf_queue
mtn	module.h	/^	struct mod_tree_node mtn;$/;"	m	struct:module_layout	typeref:struct:module_layout::mod_tree_node
mtx	dvb_frontend.h	/^	struct mutex		  mtx;$/;"	m	struct:dvb_fe_events	typeref:struct:dvb_fe_events::mutex
mult	clk-provider.h	/^	unsigned int	mult;$/;"	m	struct:clk_fixed_factor
mult_frac	kernel.h	195;"	d
must_resume	pm.h	/^	unsigned int		must_resume:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info
mutex	base.h	/^	struct mutex mutex;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::mutex
mutex	device.h	/^	struct mutex		mutex;	\/* mutex to synchronize calls to$/;"	m	struct:device	typeref:struct:device::mutex
mutex	dmxdev.h	/^	struct mutex mutex;$/;"	m	struct:dmxdev	typeref:struct:dmxdev::mutex
mutex	dmxdev.h	/^	struct mutex mutex;$/;"	m	struct:dmxdev_filter	typeref:struct:dmxdev_filter::mutex
mutex	dvb_demux.h	/^	struct mutex mutex;$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::mutex
mutex	dvb_vb2.h	/^	struct mutex		mutex;$/;"	m	struct:dvb_vb2_ctx	typeref:struct:dvb_vb2_ctx::mutex
mutex	imx219.c	/^	struct mutex mutex;$/;"	m	struct:imx219	typeref:struct:imx219::mutex	file:
mutex	imx258.c	/^	struct mutex mutex;$/;"	m	struct:imx258	typeref:struct:imx258::mutex	file:
mux_hw	clk-provider.h	/^	struct clk_hw	*mux_hw;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_hw
mux_lock	i2c.h	/^	struct rt_mutex mux_lock;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::rt_mutex
mux_locked	i2c-mux.h	/^	unsigned int mux_locked:1;$/;"	m	struct:i2c_mux_core
mux_ops	clk-provider.h	/^	const struct clk_ops	*mux_ops;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_ops
muxc	i2c-mux.c	/^	struct i2c_mux_core *muxc;$/;"	m	struct:i2c_mux_priv	typeref:struct:i2c_mux_priv::i2c_mux_core	file:
mwidth	clk-provider.h	/^	u8		mwidth;$/;"	m	struct:clk_fractional_divider
n	i2c-core-acpi.c	/^	int n;$/;"	m	struct:i2c_acpi_lookup	file:
name	cec.h	/^	char name[32];$/;"	m	struct:cec_adapter
name	clk-provider.h	/^	const char		*name;$/;"	m	struct:clk_init_data
name	device.h	/^	const char		*name;$/;"	m	class:__anon1
name	device.h	/^	const char		*name;$/;"	m	struct:bus_type
name	device.h	/^	const char		*name;$/;"	m	struct:device_driver
name	device.h	/^	const char *name;$/;"	m	struct:device_type
name	device.h	/^	const char *name;$/;"	m	struct:subsys_interface
name	devres.c	/^	const char			*name;$/;"	m	struct:devres_node	file:
name	dvb_frontend.h	/^	char	name[128];$/;"	m	struct:dvb_frontend_internal_info
name	dvb_frontend.h	/^	char *name;$/;"	m	struct:analog_demod_info
name	dvb_frontend.h	/^	char name[128];$/;"	m	struct:dvb_tuner_info
name	dvb_vb2.h	/^	char	name[DVB_VB2_NAME_MAX + 1];$/;"	m	struct:dvb_vb2_ctx
name	dvbdev.h	/^	const char *name;$/;"	m	struct:dvb_adapter
name	dvbdev.h	/^	const char *name;$/;"	m	struct:dvb_device
name	gpio_keys.h	/^	const char *name;$/;"	m	struct:gpio_keys_platform_data
name	i2c.h	/^	char name[48];$/;"	m	struct:i2c_adapter
name	i2c.h	/^	char name[I2C_NAME_SIZE];$/;"	m	struct:i2c_client
name	media-entity.h	/^	const char *name;$/;"	m	struct:media_entity
name	media.h	/^	char name[32];$/;"	m	struct:media_entity_desc
name	media.h	/^	char name[64];$/;"	m	struct:media_v2_entity
name	mod_devicetable.h	/^	char	name[32];$/;"	m	struct:of_device_id
name	mod_devicetable.h	/^	char name[APR_NAME_SIZE];$/;"	m	struct:apr_device_id
name	mod_devicetable.h	/^	char name[I2C_NAME_SIZE];$/;"	m	struct:i2c_device_id
name	mod_devicetable.h	/^	char name[MEI_CL_NAME_SIZE];$/;"	m	struct:mei_cl_device_id
name	mod_devicetable.h	/^	char name[PCI_EPF_NAME_SIZE];$/;"	m	struct:pci_epf_device_id
name	mod_devicetable.h	/^	char name[PLATFORM_NAME_SIZE];$/;"	m	struct:platform_device_id
name	mod_devicetable.h	/^	char name[RPMSG_NAME_SIZE];$/;"	m	struct:rpmsg_device_id
name	mod_devicetable.h	/^	char name[SPI_NAME_SIZE];$/;"	m	struct:spi_device_id
name	mod_devicetable.h	/^	char name[SPMI_NAME_SIZE];$/;"	m	struct:spmi_device_id
name	mod_devicetable.h	/^	const char *name;$/;"	m	struct:hda_device_id
name	module.h	/^	char name[MODULE_NAME_LEN];$/;"	m	struct:module
name	module.h	/^	char name[MODULE_NAME_LEN];$/;"	m	struct:modversion_info
name	property.h	/^	const char *name;$/;"	m	struct:property_entry
name	rc-map.h	/^	const char		*name;$/;"	m	struct:rc_map
name	sysfs1.h	/^	const char		*name;$/;"	m	struct:attribute
name	sysfs1.h	/^	const char		*name;$/;"	m	struct:attribute_group
name	testusb.c	/^	char			*name;$/;"	m	struct:testdev	file:
name	tuner-core.c	/^	const char          *name;$/;"	m	struct:tuner	file:
name	tuner-types.h	/^	char *name;$/;"	m	struct:tunertype
name	v4l2-compat-ioctl32.c	/^	__u8		     name[24];$/;"	m	struct:v4l2_standard32	file:
name	v4l2-compat-ioctl32.c	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_input32	file:
name	v4l2-ctrls.h	/^	const char *name;$/;"	m	struct:v4l2_ctrl
name	v4l2-ctrls.h	/^	const char *name;$/;"	m	struct:v4l2_ctrl_config
name	v4l2-dev.h	/^	char name[32];$/;"	m	struct:video_device
name	v4l2-device.h	/^	char name[V4L2_DEVICE_NAME_SIZE];$/;"	m	struct:v4l2_device
name	v4l2-ioctl.c	/^	const char * const name;$/;"	m	struct:v4l2_ioctl_info	file:
name	v4l2-subdev.h	/^	char name[V4L2_SUBDEV_NAME_SIZE];$/;"	m	struct:v4l2_subdev
name	videobuf2-dvb.h	/^	char			*name;$/;"	m	struct:vb2_dvb
name	videodev2.h	/^		__u8	name[32];	\/* Whatever *\/$/;"	m	union:v4l2_querymenu::__anon58
name	videodev2.h	/^		char name[32];$/;"	m	union:v4l2_dbg_match::__anon71
name	videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_modulator
name	videodev2.h	/^	__u8			name[32];$/;"	m	struct:v4l2_tuner
name	videodev2.h	/^	__u8		     name[24];$/;"	m	struct:v4l2_standard
name	videodev2.h	/^	__u8		     name[32];	\/* Whatever *\/$/;"	m	struct:v4l2_queryctrl
name	videodev2.h	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_input
name	videodev2.h	/^	__u8	     name[32];		\/*  Label *\/$/;"	m	struct:v4l2_output
name	videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audio
name	videodev2.h	/^	__u8	name[32];$/;"	m	struct:v4l2_audioout
name	videodev2.h	/^	char		     name[32];$/;"	m	struct:v4l2_query_ext_ctrl
name	videodev2.h	/^	char name[32];$/;"	m	struct:v4l2_dbg_chip_info
name_show	i2c-dev.c	/^static ssize_t name_show(struct device *dev,$/;"	f	file:
name_show	v4l2-dev.c	/^static ssize_t name_show(struct device *cd,$/;"	f	file:
names	driver.h	/^	const char		*const *names;$/;"	m	struct:gpio_chip
nargs	fwnode.h	/^	unsigned int nargs;$/;"	m	struct:fwnode_reference_args
native_ioctl	v4l2-compat-ioctl32.c	/^static long native_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
navailable	v4l2-fh.h	/^	unsigned int		navailable;$/;"	m	struct:v4l2_fh
nbuttons	gpio_keys.h	/^	int nbuttons;$/;"	m	struct:gpio_keys_platform_data
ncontrols	v4l2-ctrls.h	/^	unsigned int ncontrols;$/;"	m	struct:v4l2_ctrl
ndelay	delay.h	/^static inline void ndelay(unsigned long x)$/;"	f
ndelay	delay.h	53;"	d
ndescs	consumer.h	/^	unsigned int ndescs;$/;"	m	struct:gpio_descs
need_parent_lock	device.h	/^	bool need_parent_lock;$/;"	m	struct:bus_type
need_valid_mask	driver.h	/^	bool need_valid_mask;$/;"	m	struct:gpio_chip
need_valid_mask	driver.h	/^	bool need_valid_mask;$/;"	m	struct:gpio_irq_chip
needs_hpd	cec.h	/^	bool needs_hpd;$/;"	m	struct:cec_adapter
net	videobuf2-dvb.h	/^	struct dvb_net		net;$/;"	m	struct:vb2_dvb	typeref:struct:vb2_dvb::dvb_net
new_rate	clk.h	/^	unsigned long		new_rate;$/;"	m	struct:clk_notifier_data
new_to_cur	v4l2-ctrls.c	/^static void new_to_cur(struct v4l2_fh *fh, struct v4l2_ctrl *ctrl, u32 ch_flags)$/;"	f	file:
new_to_user	v4l2-ctrls.c	/^static int new_to_user(struct v4l2_ext_control *c,$/;"	f	file:
next	dmxdev.h	/^	struct list_head next;$/;"	m	struct:dmxdev_feed	typeref:struct:dmxdev_feed::list_head
next	dvb_demux.h	/^	struct dvb_demux_filter *next;$/;"	m	struct:dvb_demux_filter	typeref:struct:dvb_demux_filter::dvb_demux_filter
next	testusb.c	/^	struct testdev		*next;$/;"	m	struct:testdev	typeref:struct:testdev::testdev	file:
next	v4l2-compat-ioctl32.c	/^	compat_caddr_t		next;$/;"	m	struct:v4l2_clip32	file:
next	v4l2-ctrls.c	/^	u32 next;$/;"	m	struct:v4l2_ctrl_helper	file:
next	v4l2-ctrls.h	/^	struct v4l2_ctrl_ref *next;$/;"	m	struct:v4l2_ctrl_ref	typeref:struct:v4l2_ctrl_ref::v4l2_ctrl_ref
next	videodev2.h	/^	struct v4l2_clip	__user *next;$/;"	m	struct:v4l2_clip	typeref:struct:v4l2_clip::__user
next_device	bus.c	/^static struct device *next_device(struct klist_iter *i)$/;"	f	file:
next_device	driver.c	/^static struct device *next_device(struct klist_iter *i)$/;"	f	file:
next_driver	bus.c	/^static struct device_driver *next_driver(struct klist_iter *i)$/;"	f	file:
nfeeds	videobuf2-dvb.h	/^	int			nfeeds;$/;"	m	struct:vb2_dvb
ngpio	driver.h	/^	int ngpio;$/;"	m	struct:bgpio_pdata
ngpio	driver.h	/^	u16			ngpio;$/;"	m	struct:gpio_chip
nmask	clk-provider.h	/^	u32		nmask;$/;"	m	struct:clk_fractional_divider
nmsgs	i2c-dev.c	/^	u32 nmsgs;$/;"	m	struct:i2c_rdwr_ioctl_data32	file:
no_autodetect	tuner-core.c	/^static unsigned int no_autodetect;$/;"	v	file:
no_callbacks	pm.h	/^	unsigned int		no_callbacks:1;$/;"	m	struct:dev_pm_info
no_pm_callbacks	pm.h	/^	bool			no_pm_callbacks:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info
node	clk.h	/^	struct list_head		node;$/;"	m	struct:clk_notifier	typeref:struct:clk_notifier::list_head
node	clkdev.h	/^	struct list_head	node;$/;"	m	struct:clk_lookup	typeref:struct:clk_lookup::list_head
node	device.h	/^	struct list_head	node;$/;"	m	struct:class_interface	typeref:struct:class_interface::list_head
node	device.h	/^	struct list_head node;$/;"	m	struct:subsys_interface	typeref:struct:subsys_interface::list_head
node	devres.c	/^	struct devres_node		node;$/;"	m	struct:devres	typeref:struct:devres::devres_node	file:
node	devres.c	/^	struct devres_node		node[2];$/;"	m	struct:devres_group	typeref:struct:devres_group::devres_node	file:
node	driver.h	/^	struct list_head node;$/;"	m	struct:gpio_pin_range	typeref:struct:gpio_pin_range::list_head
node	module.h	/^	struct latch_tree_node node;$/;"	m	struct:mod_tree_node	typeref:struct:mod_tree_node::latch_tree_node
node	v4l2-ctrls.h	/^	struct list_head node;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::list_head
node	v4l2-ctrls.h	/^	struct list_head node;$/;"	m	struct:v4l2_ctrl_ref	typeref:struct:v4l2_ctrl_ref::list_head
node	v4l2-event.h	/^	struct list_head	node;$/;"	m	struct:v4l2_subscribed_event	typeref:struct:v4l2_subscribed_event::list_head
node2id	v4l2-ctrls.c	/^static inline u32 node2id(struct list_head *node)$/;"	f	file:
node_to_group	devres.c	/^static struct devres_group * node_to_group(struct devres_node *node)$/;"	f	file:
noise_filter_min_width	v4l2-subdev.h	/^	u32 noise_filter_min_width;$/;"	m	struct:v4l2_subdev_ir_parameters
nonblocking	dvb_vb2.h	/^	int	nonblocking;$/;"	m	struct:dvb_vb2_ctx
note	ffs-test.c	110;"	d	file:
notes_attrs	module.h	/^	struct module_notes_attrs *notes_attrs;$/;"	m	struct:module	typeref:struct:module::module_notes_attrs
notifier	cec.h	/^	struct cec_notifier *notifier;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_notifier
notifier	v4l2-subdev.h	/^	struct v4l2_async_notifier *notifier;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_async_notifier
notifier_head	clk.h	/^	struct srcu_notifier_head	notifier_head;$/;"	m	struct:clk_notifier	typeref:struct:clk_notifier::srcu_notifier_head
notify	media-device.h	/^	void (*notify)(struct media_entity *entity, void *notify_data);$/;"	m	struct:media_entity_notify
notify	v4l2-ctrls.h	/^	v4l2_ctrl_notify_fnc notify;$/;"	m	struct:v4l2_ctrl_handler
notify	v4l2-device.h	/^	void (*notify)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_device
notify_data	media-device.h	/^	void *notify_data;$/;"	m	struct:media_entity_notify
notify_priv	v4l2-ctrls.h	/^	void *notify_priv;$/;"	m	struct:v4l2_ctrl_handler
nr	i2c.h	/^	int nr;$/;"	m	struct:i2c_adapter
nr	soc_camera.h	/^	unsigned char nr;		\/* Host number *\/$/;"	m	struct:soc_camera_host
nr_of_buckets	v4l2-ctrls.h	/^	u16 nr_of_buckets;$/;"	m	struct:v4l2_ctrl_handler
nr_of_dims	v4l2-ctrls.h	/^	u32 nr_of_dims;$/;"	m	struct:v4l2_ctrl
nr_of_dims	videodev2.h	/^	__u32                nr_of_dims;$/;"	m	struct:v4l2_query_ext_ctrl
nr_of_link_frequencies	v4l2-fwnode.h	/^	unsigned int nr_of_link_frequencies;$/;"	m	struct:v4l2_fwnode_endpoint
nr_pages	videobuf-dma-sg.h	/^	int                 nr_pages;$/;"	m	struct:videobuf_dmabuf
ns_type	device.h	/^	const struct kobj_ns_type_operations *ns_type;$/;"	m	class:__anon1	typeref:struct:__anon1::kobj_ns_type_operations
nshift	clk-provider.h	/^	u8		nshift;$/;"	m	struct:clk_fractional_divider
ntohl	generic.h	129;"	d
ntohl	generic.h	140;"	d
ntohs	generic.h	130;"	d
ntohs	generic.h	142;"	d
ntsc	tuner-core.c	/^static char ntsc[] = "-";$/;"	v	file:
num	clk-provider.h	/^	unsigned int num;$/;"	m	struct:clk_duty
num	clk-provider.h	/^	unsigned int num;$/;"	m	struct:clk_hw_onecell_data
num	dvbdev.h	/^	int num;$/;"	m	struct:dvb_adapter
num	v4l2-dev.h	/^	u16 num;$/;"	m	struct:video_device
num_adapters	i2c-mux.h	/^	int num_adapters;$/;"	m	struct:i2c_mux_core
num_backlinks	media-entity.h	/^	u16 num_backlinks;$/;"	m	struct:media_entity
num_buffers	videobuf2-core.h	/^	unsigned int			num_buffers;$/;"	m	struct:vb2_queue
num_bugs	module.h	/^	unsigned num_bugs;$/;"	m	struct:module
num_ctors	module.h	/^	unsigned int num_ctors;$/;"	m	struct:module
num_data_lanes	v4l2-fwnode.h	/^	unsigned short num_data_lanes;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi2
num_ei_funcs	module.h	/^	unsigned int num_ei_funcs;$/;"	m	struct:module
num_entities	media.h	/^	__u32 num_entities;$/;"	m	struct:media_v2_topology
num_entries	v4l2-subdev.h	/^	unsigned short num_entries;$/;"	m	struct:v4l2_mbus_frame_desc
num_exentries	module.h	/^	unsigned int num_exentries;$/;"	m	struct:module
num_ftrace_callsites	module.h	/^	unsigned int num_ftrace_callsites;$/;"	m	struct:module
num_gpl_future_syms	module.h	/^	unsigned int num_gpl_future_syms;$/;"	m	struct:module
num_gpl_syms	module.h	/^	unsigned int num_gpl_syms;$/;"	m	struct:module
num_interfaces	media.h	/^	__u32 num_interfaces;$/;"	m	struct:media_v2_topology
num_jump_entries	module.h	/^	unsigned int num_jump_entries;$/;"	m	struct:module
num_kp	module.h	/^	unsigned int num_kp;$/;"	m	struct:module
num_links	media-entity.h	/^	u16 num_links;$/;"	m	struct:media_entity
num_links	media.h	/^	__u32 num_links;$/;"	m	struct:media_v2_topology
num_of_regs	imx219.c	/^	u32 num_of_regs;$/;"	m	struct:imx219_reg_list	file:
num_of_regs	imx258.c	/^	u32 num_of_regs;$/;"	m	struct:imx258_reg_list	file:
num_pads	media-entity.h	/^	u16 num_pads;$/;"	m	struct:media_entity
num_pads	media.h	/^	__u32 num_pads;$/;"	m	struct:media_v2_topology
num_parents	clk-provider.h	/^	u8			num_parents;$/;"	m	struct:clk_init_data
num_parents	driver.h	/^	unsigned int num_parents;$/;"	m	struct:gpio_irq_chip
num_planes	videobuf2-core.h	/^	unsigned int		num_planes;$/;"	m	struct:vb2_buffer
num_planes	videodev2.h	/^	__u8				num_planes;$/;"	m	struct:v4l2_pix_format_mplane
num_rdy	v4l2-mem2mem.h	/^	u8			num_rdy;$/;"	m	struct:v4l2_m2m_queue_ctx
num_regulators	soc_camera.h	/^	int num_regulators;$/;"	m	struct:soc_camera_link
num_regulators	v4l2-subdev.h	/^	int num_regulators;$/;"	m	struct:v4l2_subdev_platform_data
num_resources	i2c.h	/^	unsigned int	num_resources;$/;"	m	struct:i2c_board_info
num_subdevs	v4l2-async.h	/^	unsigned int num_subdevs;$/;"	m	struct:v4l2_async_notifier
num_syms	module.h	/^	unsigned int num_syms;$/;"	m	struct:module
num_symtab	module.h	/^	unsigned int num_symtab;$/;"	m	struct:mod_kallsyms
num_trace_bprintk_fmt	module.h	/^	unsigned int num_trace_bprintk_fmt;$/;"	m	struct:module
num_trace_evals	module.h	/^	unsigned int num_trace_evals;$/;"	m	struct:module
num_trace_events	module.h	/^	unsigned int num_trace_events;$/;"	m	struct:module
num_tracepoints	module.h	/^	unsigned int num_tracepoints;$/;"	m	struct:module
num_unused_gpl_syms	module.h	/^	unsigned int num_unused_gpl_syms;$/;"	m	struct:module
num_unused_syms	module.h	/^	unsigned int num_unused_syms;$/;"	m	struct:module
num_user_formats	soc_camera.h	/^	int num_user_formats;$/;"	m	struct:soc_camera_device
num_users	videobuf2-core.h	/^	unsigned int	(*num_users)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
num_vf	device.h	/^	int (*num_vf)(struct device *dev);$/;"	m	struct:bus_type
numa_node	device.h	/^	int		numa_node;	\/* NUMA node this device is close to *\/$/;"	m	struct:device
numerator	videodev2.h	/^	__u32   numerator;$/;"	m	struct:v4l2_fract
nwidth	clk-provider.h	/^	u8		nwidth;$/;"	m	struct:clk_fractional_divider
obj_type	media-entity.h	/^	enum media_entity_type obj_type;$/;"	m	struct:media_entity	typeref:enum:media_entity::media_entity_type
obj_type	mod_devicetable.h	/^	const char obj_type[16];$/;"	m	struct:fsl_mc_device_id
of_clk_add_hw_provider	clk-provider.h	/^static inline int of_clk_add_hw_provider(struct device_node *np,$/;"	f
of_clk_add_provider	clk-provider.h	/^static inline int of_clk_add_provider(struct device_node *np,$/;"	f
of_clk_del_provider	clk-provider.h	/^static inline void of_clk_del_provider(struct device_node *np) {}$/;"	f
of_clk_detect_critical	clk-provider.h	/^static inline int of_clk_detect_critical(struct device_node *np, int index,$/;"	f
of_clk_get	clk.h	/^static inline struct clk *of_clk_get(struct device_node *np, int index)$/;"	f
of_clk_get_by_name	clk.h	/^static inline struct clk *of_clk_get_by_name(struct device_node *np,$/;"	f
of_clk_get_from_provider	clk.h	/^static inline struct clk *of_clk_get_from_provider(struct of_phandle_args *clkspec)$/;"	f
of_clk_hw_onecell_get	clk-provider.h	/^of_clk_hw_onecell_get(struct of_phandle_args *clkspec, void *data)$/;"	f
of_clk_hw_simple_get	clk-provider.h	/^of_clk_hw_simple_get(struct of_phandle_args *clkspec, void *data)$/;"	f
of_clk_parent_fill	clk-provider.h	/^static inline int of_clk_parent_fill(struct device_node *np,$/;"	f
of_clk_src_onecell_get	clk-provider.h	/^static inline struct clk *of_clk_src_onecell_get($/;"	f
of_clk_src_simple_get	clk-provider.h	/^static inline struct clk *of_clk_src_simple_get($/;"	f
of_dev_node_match	i2c-core-of.c	/^static int of_dev_node_match(struct device *dev, void *data)$/;"	f	file:
of_dev_or_parent_node_match	i2c-core-of.c	/^static int of_dev_or_parent_node_match(struct device *dev, void *data)$/;"	f	file:
of_device_id	mod_devicetable.h	/^struct of_device_id {$/;"	s
of_find_i2c_adapter_by_node	i2c-core-of.c	/^EXPORT_SYMBOL(of_find_i2c_adapter_by_node);$/;"	v
of_find_i2c_adapter_by_node	i2c-core-of.c	/^struct i2c_adapter *of_find_i2c_adapter_by_node(struct device_node *node)$/;"	f
of_find_i2c_adapter_by_node	i2c.h	/^static inline struct i2c_adapter *of_find_i2c_adapter_by_node(struct device_node *node)$/;"	f
of_find_i2c_device_by_node	i2c-core-of.c	/^EXPORT_SYMBOL(of_find_i2c_device_by_node);$/;"	v
of_find_i2c_device_by_node	i2c-core-of.c	/^struct i2c_client *of_find_i2c_device_by_node(struct device_node *node)$/;"	f
of_find_i2c_device_by_node	i2c.h	/^static inline struct i2c_client *of_find_i2c_device_by_node(struct device_node *node)$/;"	f
of_get_i2c_adapter_by_node	i2c-core-of.c	/^EXPORT_SYMBOL(of_get_i2c_adapter_by_node);$/;"	v
of_get_i2c_adapter_by_node	i2c-core-of.c	/^struct i2c_adapter *of_get_i2c_adapter_by_node(struct device_node *node)$/;"	f
of_get_i2c_adapter_by_node	i2c.h	/^static inline struct i2c_adapter *of_get_i2c_adapter_by_node(struct device_node *node)$/;"	f
of_gpio_n_cells	driver.h	/^	unsigned int of_gpio_n_cells;$/;"	m	struct:gpio_chip
of_i2c_get_board_info	i2c-core-of.c	/^EXPORT_SYMBOL_GPL(of_i2c_get_board_info);$/;"	v
of_i2c_get_board_info	i2c-core-of.c	/^int of_i2c_get_board_info(struct device *dev, struct device_node *node,$/;"	f
of_i2c_get_board_info	i2c.h	/^static inline int of_i2c_get_board_info(struct device *dev,$/;"	f
of_i2c_notify	i2c-core-of.c	/^static int of_i2c_notify(struct notifier_block *nb, unsigned long action,$/;"	f	file:
of_i2c_register_device	i2c-core-of.c	/^static struct i2c_client *of_i2c_register_device(struct i2c_adapter *adap,$/;"	f	file:
of_i2c_register_devices	i2c-core-of.c	/^void of_i2c_register_devices(struct i2c_adapter *adap)$/;"	f
of_i2c_register_devices	i2c-core.h	/^static inline void of_i2c_register_devices(struct i2c_adapter *adap) { }$/;"	f
of_i2c_setup_smbus_alert	i2c-core-smbus.c	/^EXPORT_SYMBOL_GPL(of_i2c_setup_smbus_alert);$/;"	v
of_i2c_setup_smbus_alert	i2c-core-smbus.c	/^int of_i2c_setup_smbus_alert(struct i2c_adapter *adapter)$/;"	f
of_i2c_setup_smbus_alert	i2c-smbus.h	/^static inline int of_i2c_setup_smbus_alert(struct i2c_adapter *adap)$/;"	f
of_match_table	device.h	/^	const struct of_device_id	*of_match_table;$/;"	m	struct:device_driver	typeref:struct:device_driver::of_device_id
of_node	device.h	/^	struct device_node	*of_node; \/* associated device tree node *\/$/;"	m	struct:device	typeref:struct:device::device_node
of_node	driver.h	/^	struct device_node *of_node;$/;"	m	struct:gpio_chip	typeref:struct:gpio_chip::device_node
of_node	i2c.h	/^	struct device_node *of_node;$/;"	m	struct:i2c_board_info	typeref:struct:i2c_board_info::device_node
of_node_reused	device.h	/^	bool			of_node_reused:1;$/;"	m	struct:device
of_xlate	driver.h	/^	int (*of_xlate)(struct gpio_chip *gc,$/;"	m	struct:gpio_chip
offline	device.h	/^	bool			offline:1;$/;"	m	struct:device
offline	device.h	/^	int (*offline)(struct device *dev);$/;"	m	struct:bus_type
offline_disabled	device.h	/^	bool			offline_disabled:1;$/;"	m	struct:device
offset	dvb_vb2.h	/^	int	offset;$/;"	m	struct:dvb_vb2_ctx
offset	relocs.c	/^	uint32_t	*offset;$/;"	m	struct:relocs	file:
offset	v4l2-compat-ioctl32.c	/^		__u32           offset;$/;"	m	union:v4l2_buffer32::__anon39	file:
offset	videobuf-dma-sg.h	/^	int                 offset;$/;"	m	struct:videobuf_dmabuf
offset	videobuf2-core.h	/^		unsigned int	offset;$/;"	m	union:vb2_plane::__anon47
offset	videodev2.h	/^		__u32           offset;$/;"	m	union:v4l2_buffer::__anon52
offset	videodev2.h	/^	__u32	offset;$/;"	m	struct:v4l2_vbi_format
offset	videodev2.h	/^	__u64 offset;$/;"	m	struct:v4l2_enc_idx_entry
old_rate	clk.h	/^	unsigned long		old_rate;$/;"	m	struct:clk_notifier_data
old_uV	consumer1.h	/^	unsigned long old_uV;$/;"	m	struct:pre_voltage_change_data
online	device.h	/^	int (*online)(struct device *dev);$/;"	m	struct:bus_type
open	demux.h	/^	int (*open)(struct dmx_demux *demux);$/;"	m	struct:dmx_demux
open	media-devnode.h	/^	int (*open) (struct file *);$/;"	m	struct:media_file_operations
open	rc-core.h	/^	int				(*open)(struct rc_dev *dev);$/;"	m	struct:rc_dev
open	v4l2-dev.h	/^	int (*open) (struct file *);$/;"	m	struct:v4l2_file_operations
open	v4l2-subdev.h	/^	int (*open)(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh);$/;"	m	struct:v4l2_subdev_internal_ops
ops	cec.h	/^	const struct cec_adap_ops *ops;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_adap_ops
ops	clk-provider.h	/^	const struct clk_ops	*ops;$/;"	m	struct:clk_init_data	typeref:struct:clk_init_data::clk_ops
ops	clk-provider.h	/^	struct clk_ops	ops;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_ops
ops	dvb_frontend.h	/^	struct dvb_frontend_ops ops;$/;"	m	struct:dvb_frontend	typeref:struct:dvb_frontend::dvb_frontend_ops
ops	fwnode.h	/^	const struct fwnode_operations *ops;$/;"	m	struct:fwnode_handle	typeref:struct:fwnode_handle::fwnode_operations
ops	media-device.h	/^	const struct media_device_ops *ops;$/;"	m	struct:media_device	typeref:struct:media_device::media_device_ops
ops	media-entity.h	/^	const struct media_entity_operations *ops;$/;"	m	struct:media_entity	typeref:struct:media_entity::media_entity_operations
ops	pm.h	/^	struct dev_pm_ops	ops;$/;"	m	struct:dev_pm_domain	typeref:struct:dev_pm_domain::dev_pm_ops
ops	soc_camera.h	/^	struct soc_camera_host_ops *ops;$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::soc_camera_host_ops
ops	v4l2-async.h	/^	const struct v4l2_async_notifier_operations *ops;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::v4l2_async_notifier_operations
ops	v4l2-clk.c	/^	struct v4l2_clk_ops ops;$/;"	m	struct:v4l2_clk_fixed	typeref:struct:v4l2_clk_fixed::v4l2_clk_ops	file:
ops	v4l2-clk.h	/^	const struct v4l2_clk_ops *ops;$/;"	m	struct:v4l2_clk	typeref:struct:v4l2_clk::v4l2_clk_ops
ops	v4l2-ctrls.h	/^	const struct v4l2_ctrl_ops *ops;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::v4l2_ctrl_ops
ops	v4l2-ctrls.h	/^	const struct v4l2_ctrl_ops *ops;$/;"	m	struct:v4l2_ctrl_config	typeref:struct:v4l2_ctrl_config::v4l2_ctrl_ops
ops	v4l2-event.h	/^	const struct v4l2_subscribed_event_ops *ops;$/;"	m	struct:v4l2_subscribed_event	typeref:struct:v4l2_subscribed_event::v4l2_subscribed_event_ops
ops	v4l2-flash-led-class.h	/^	const struct v4l2_flash_ops *ops;$/;"	m	struct:v4l2_flash	typeref:struct:v4l2_flash::v4l2_flash_ops
ops	v4l2-subdev.h	/^	const struct v4l2_subdev_ops *ops;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_subdev_ops
ops	videobuf-core.h	/^	const struct videobuf_queue_ops  *ops;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::videobuf_queue_ops
ops	videobuf2-core.h	/^	const struct vb2_ops		*ops;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::vb2_ops
order	devres.c	/^	unsigned int order;$/;"	m	struct:pages_devres	file:
out	ffs-test.c	/^	ssize_t (*out)(struct thread *, const void *, size_t);$/;"	m	struct:thread	file:
out_name	ffs-test.c	/^	const char *const out_name;$/;"	m	struct:thread	file:
out_q_ctx	v4l2-mem2mem.h	/^	struct v4l2_m2m_queue_ctx	out_q_ctx;$/;"	m	struct:v4l2_m2m_ctx	typeref:struct:v4l2_m2m_ctx::v4l2_m2m_queue_ctx
output	videodev2.h	/^		struct v4l2_outputparm	output;$/;"	m	union:v4l2_streamparm::__anon68	typeref:struct:v4l2_streamparm::__anon68::v4l2_outputparm
outputmode	videodev2.h	/^	__u32		   outputmode;	 \/*  Current mode *\/$/;"	m	struct:v4l2_outputparm
overflow	dvb_frontend.h	/^	int			  overflow;$/;"	m	struct:dvb_fe_events
owned_by_drv_count	videobuf2-core.h	/^	atomic_t			owned_by_drv_count;$/;"	m	struct:vb2_queue
owner	cec.h	/^	struct module *owner;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::module
owner	device.h	/^	struct module		*owner;$/;"	m	class:__anon1	typeref:struct:__anon1::module
owner	device.h	/^	struct module		*owner;$/;"	m	struct:device_driver	typeref:struct:device_driver::module
owner	driver.h	/^	struct module		*owner;$/;"	m	struct:gpio_chip	typeref:struct:gpio_chip::module
owner	dvb_ca_en50221.h	/^	struct module *owner;$/;"	m	struct:dvb_ca_en50221	typeref:struct:dvb_ca_en50221::module
owner	i2c.h	/^	struct module *owner;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::module
owner	media-devnode.h	/^	struct module *owner;$/;"	m	struct:media_file_operations	typeref:struct:media_file_operations::module
owner	soc_camera.h	/^	struct module *owner;$/;"	m	struct:soc_camera_host_ops	typeref:struct:soc_camera_host_ops::module
owner	v4l2-clk.h	/^	struct module	*owner;$/;"	m	struct:v4l2_clk_ops	typeref:struct:v4l2_clk_ops::module
owner	v4l2-dev.h	/^	struct module *owner;$/;"	m	struct:v4l2_file_operations	typeref:struct:v4l2_file_operations::module
owner	v4l2-subdev.h	/^	struct module *owner;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::module
owner	videobuf2-core.h	/^	void				*owner;$/;"	m	struct:vb2_queue
owner_v4l2_dev	v4l2-subdev.h	/^	bool owner_v4l2_dev;$/;"	m	struct:v4l2_subdev
p	device.h	/^	struct device_private	*p;$/;"	m	struct:device	typeref:struct:device::device_private
p	device.h	/^	struct driver_private *p;$/;"	m	struct:device_driver	typeref:struct:device_driver::driver_private
p	device.h	/^	struct subsys_private *p;$/;"	m	class:__anon1	typeref:struct:__anon1::subsys_private
p	device.h	/^	struct subsys_private *p;$/;"	m	struct:bus_type	typeref:struct:bus_type::subsys_private
p	v4l2-ctrls.h	/^	void *p;$/;"	m	union:v4l2_ctrl_ptr
p	v4l2-subdev.h	/^	u8 *p;$/;"	m	struct:v4l2_decode_vbi_line
p_char	v4l2-ctrls.h	/^	char *p_char;$/;"	m	union:v4l2_ctrl_ptr
p_cur	v4l2-ctrls.h	/^	union v4l2_ctrl_ptr p_cur;$/;"	m	struct:v4l2_ctrl	typeref:union:v4l2_ctrl::v4l2_ctrl_ptr
p_new	v4l2-ctrls.h	/^	union v4l2_ctrl_ptr p_new;$/;"	m	struct:v4l2_ctrl	typeref:union:v4l2_ctrl::v4l2_ctrl_ptr
p_s32	v4l2-ctrls.h	/^	s32 *p_s32;$/;"	m	union:v4l2_ctrl_ptr
p_s64	v4l2-ctrls.h	/^	s64 *p_s64;$/;"	m	union:v4l2_ctrl_ptr
p_u16	v4l2-ctrls.h	/^	u16 *p_u16;$/;"	m	union:v4l2_ctrl_ptr
p_u16	videodev2.h	/^		__u16 __user *p_u16;$/;"	m	union:v4l2_ext_control::__anon56
p_u32	v4l2-ctrls.h	/^	u32 *p_u32;$/;"	m	union:v4l2_ctrl_ptr
p_u32	videodev2.h	/^		__u32 __user *p_u32;$/;"	m	union:v4l2_ext_control::__anon56
p_u8	v4l2-ctrls.h	/^	u8 *p_u8;$/;"	m	union:v4l2_ctrl_ptr
p_u8	videodev2.h	/^		__u8 __user *p_u8;$/;"	m	union:v4l2_ext_control::__anon56
pad	imx219.c	/^	struct media_pad pad;$/;"	m	struct:imx219	typeref:struct:imx219::media_pad	file:
pad	imx258.c	/^	struct media_pad pad;$/;"	m	struct:imx258	typeref:struct:imx258::media_pad	file:
pad	tuner-core.c	/^	struct media_pad	pad[TUNER_NUM_PADS];$/;"	m	struct:tuner	typeref:struct:tuner::media_pad	file:
pad	v4l2-compat-ioctl32.c	/^	__u32 pad;$/;"	m	struct:v4l2_edid32	file:
pad	v4l2-subdev.h	/^	const struct v4l2_subdev_pad_ops	*pad;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_pad_ops
pad	v4l2-subdev.h	/^	struct v4l2_subdev_pad_config *pad;$/;"	m	struct:v4l2_subdev_fh	typeref:struct:v4l2_subdev_fh::v4l2_subdev_pad_config
pad	videodev2.h	/^	__u32 pad;$/;"	m	struct:v4l2_dv_timings_cap
pad	videodev2.h	/^	__u32 pad;$/;"	m	struct:v4l2_enum_dv_timings
pads	dvbdev.h	/^	struct media_pad *pads, *tsout_pads;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::media_pad
pads	media-device.h	/^	struct list_head pads;$/;"	m	struct:media_device	typeref:struct:media_device::list_head
pads	media-entity.h	/^	struct media_pad *pads;$/;"	m	struct:media_entity	typeref:struct:media_entity::media_pad
pads	media.h	/^	__u16 pads;$/;"	m	struct:media_entity_desc
pads	media.h	/^	struct media_pad_desc __user *pads;$/;"	m	struct:media_links_enum	typeref:struct:media_links_enum::__user
pages	videobuf-dma-sg.h	/^	struct page         **pages;$/;"	m	struct:videobuf_dmabuf	typeref:struct:videobuf_dmabuf::page
pages_devres	devres.c	/^struct pages_devres {$/;"	s	file:
pal	tuner-core.c	/^static char pal[] = "--";$/;"	v	file:
parallel	v4l2-fwnode.h	/^		struct v4l2_fwnode_bus_parallel parallel;$/;"	m	union:v4l2_fwnode_endpoint::__anon46	typeref:struct:v4l2_fwnode_endpoint::__anon46::v4l2_fwnode_bus_parallel
param	testusb.c	/^	struct usbtest_param	param;$/;"	m	struct:testdev	typeref:struct:testdev::usbtest_param	file:
param_lock	module.h	/^	struct mutex param_lock;$/;"	m	struct:module	typeref:struct:module::mutex
param_type	tuner-types.h	/^enum param_type {$/;"	g
params	dmxdev.h	/^	} params;$/;"	m	struct:dmxdev_filter	typeref:union:dmxdev_filter::__anon4
params	tuner-types.h	/^	struct tuner_params *params;$/;"	m	struct:tunertype	typeref:struct:tunertype::tuner_params
parent	demux.h	/^	struct dmx_demux *parent;$/;"	m	struct:dmx_section_feed	typeref:struct:dmx_section_feed::dmx_demux
parent	demux.h	/^	struct dmx_demux *parent;$/;"	m	struct:dmx_ts_feed	typeref:struct:dmx_ts_feed::dmx_demux
parent	demux.h	/^	struct dmx_section_feed *parent;$/;"	m	struct:dmx_section_filter	typeref:struct:dmx_section_filter::dmx_section_feed
parent	device.h	/^	struct device		*parent;$/;"	m	struct:device	typeref:struct:device::device
parent	driver.h	/^	struct device		*parent;$/;"	m	struct:gpio_chip	typeref:struct:gpio_chip::device
parent	i2c-mux.h	/^	struct i2c_adapter *parent;$/;"	m	struct:i2c_mux_core	typeref:struct:i2c_mux_core::i2c_adapter
parent	media-devnode.h	/^	struct device *parent;		\/* device parent *\/$/;"	m	struct:media_devnode	typeref:struct:media_devnode::device
parent	soc_camera.h	/^	struct device *parent;		\/* Camera host device *\/$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::device
parent	v4l2-async.h	/^	struct v4l2_async_notifier *parent;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::v4l2_async_notifier
parent_handler	driver.h	/^	irq_flow_handler_t parent_handler;$/;"	m	struct:gpio_irq_chip
parent_handler_data	driver.h	/^	void *parent_handler_data;$/;"	m	struct:gpio_irq_chip
parent_irq	driver.h	/^	unsigned int parent_irq;$/;"	m	struct:gpio_irq_chip
parent_names	clk-provider.h	/^	const char		* const *parent_names;$/;"	m	struct:clk_init_data
parents	driver.h	/^	unsigned int *parents;$/;"	m	struct:gpio_irq_chip
parisc_device_id	mod_devicetable.h	/^struct parisc_device_id {$/;"	s
parm	videodev2.h	/^	} parm;$/;"	m	struct:v4l2_streamparm	typeref:union:v4l2_streamparm::__anon68
parse_endpoint_func	v4l2-fwnode.h	/^typedef int (*parse_endpoint_func)(struct device *dev,$/;"	t
parse_num	testusb.c	/^static int parse_num(unsigned *num, const char *str)$/;"	f	file:
part_id	i2c.h	/^	u16 part_id;$/;"	m	struct:i2c_device_identity
part_id	mod_devicetable.h	/^	__u16 part_id;$/;"	m	struct:sdw_device_id
passthrough	cec.h	/^	bool passthrough;$/;"	m	struct:cec_adapter
pattern	ffs-test.c	/^enum pattern { PAT_ZERO, PAT_SEQ, PAT_PIPE };$/;"	g	file:
pattern	ffs-test.c	/^static enum pattern pattern;$/;"	v	typeref:enum:pattern	file:
pci_device_id	mod_devicetable.h	/^struct pci_device_id {$/;"	s
pci_epf_device_id	mod_devicetable.h	/^struct pci_epf_device_id {$/;"	s
pcmcia_device_id	mod_devicetable.h	/^struct pcmcia_device_id {$/;"	s
pctldev	driver.h	/^	struct pinctrl_dev *pctldev;$/;"	m	struct:gpio_pin_range	typeref:struct:gpio_pin_range::pinctrl_dev
pdata	v4l2-subdev.h	/^	struct v4l2_subdev_platform_data *pdata;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_subdev_platform_data
pdev	soc_camera.h	/^	struct device *pdev;		\/* Platform device *\/$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::device
pdev_archdata	device1.h	/^struct pdev_archdata {$/;"	s
pending	v4l2-compat-ioctl32.c	/^	__u32				pending;$/;"	m	struct:v4l2_event32	file:
pending	videodev2.h	/^	__u32				pending;$/;"	m	struct:v4l2_event
percpu	module.h	/^	void __percpu *percpu;$/;"	m	struct:module
percpu_size	module.h	/^	unsigned int percpu_size;$/;"	m	struct:module
pes	dmxdev.h	/^		struct dmx_pes_filter_params pes;$/;"	m	union:dmxdev_filter::__anon4	typeref:struct:dmxdev_filter::__anon4::dmx_pes_filter_params
pes_type	dvb_demux.h	/^	enum dmx_ts_pes pes_type;$/;"	m	struct:dvb_demux_feed	typeref:enum:dvb_demux_feed::dmx_ts_pes
pesfilter	dvb_demux.h	/^	struct dvb_demux_feed *pesfilter[DMX_PES_OTHER];$/;"	m	struct:dvb_demux	typeref:struct:dvb_demux::dvb_demux_feed
peslen	dvb_demux.h	/^	u16 peslen;$/;"	m	struct:dvb_demux_feed
phy_id	mod_devicetable.h	/^	__u32 phy_id;$/;"	m	struct:mdio_device_id
phy_id_mask	mod_devicetable.h	/^	__u32 phy_id_mask;$/;"	m	struct:mdio_device_id
phys_addr	cec.h	/^	u16 phys_addr;$/;"	m	struct:cec_adapter
phys_addrs	cec.h	/^	u16 phys_addrs[15];$/;"	m	struct:cec_adapter
picture_aspect	videodev2.h	/^	struct v4l2_fract picture_aspect;$/;"	m	struct:v4l2_bt_timings	typeref:struct:v4l2_bt_timings::v4l2_fract
pid	dmxdev.h	/^	u16 pid;$/;"	m	struct:dmxdev_feed
pid	dvb_demux.h	/^	u16 pid;$/;"	m	struct:dvb_demux_feed
pids	dvb_demux.h	/^	u16 pids[DMX_PES_OTHER];$/;"	m	struct:dvb_demux
pilot	dvb_frontend.h	/^	enum fe_pilot		pilot;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_pilot
pin	cec.h	/^	struct cec_pin *pin;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_pin
pin	v4l2-subdev.h	/^	u8 pin;$/;"	m	struct:v4l2_subdev_io_pin_config
pins	device.h	/^	struct dev_pin_info	*pins;$/;"	m	struct:device	typeref:struct:device::dev_pin_info
pipe	media-entity.h	/^	struct media_pipeline *pipe;$/;"	m	struct:media_entity	typeref:struct:media_entity::media_pipeline
pipe	v4l2-dev.h	/^	struct media_pipeline pipe;$/;"	m	struct:video_device	typeref:struct:video_device::media_pipeline
pipeline_pm_power	v4l2-mc.c	/^static int pipeline_pm_power(struct media_entity *entity, int change,$/;"	f	file:
pipeline_pm_power_one	v4l2-mc.c	/^static int pipeline_pm_power_one(struct media_entity *entity, int change)$/;"	f	file:
pipeline_pm_use_count	v4l2-mc.c	/^static int pipeline_pm_use_count(struct media_entity *entity,$/;"	f	file:
pitch	vsp1.h	/^	unsigned int pitch;$/;"	m	struct:vsp1_du_atomic_config
pix	v4l2-compat-ioctl32.c	/^		struct v4l2_pix_format	pix;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_pix_format	file:
pix	videodev2.h	/^		struct v4l2_pix_format		pix;     \/* V4L2_BUF_TYPE_VIDEO_CAPTURE *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_pix_format
pix_mp	v4l2-compat-ioctl32.c	/^		struct v4l2_pix_format_mplane	pix_mp;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_pix_format_mplane	file:
pix_mp	videodev2.h	/^		struct v4l2_pix_format_mplane	pix_mp;  \/* V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_pix_format_mplane
pixel_clock	soc_camera.h	/^	unsigned long pixel_clock;$/;"	m	struct:soc_camera_sense
pixel_clock_max	soc_camera.h	/^	unsigned long pixel_clock_max;$/;"	m	struct:soc_camera_sense
pixel_format	videodev2.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmivalenum
pixel_format	videodev2.h	/^	__u32			pixel_format;	\/* Pixel format *\/$/;"	m	struct:v4l2_frmsizeenum
pixel_rate	imx219.c	/^	struct v4l2_ctrl *pixel_rate;$/;"	m	struct:imx219	typeref:struct:imx219::v4l2_ctrl	file:
pixel_rate	imx258.c	/^	struct v4l2_ctrl *pixel_rate;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_ctrl	file:
pixelaspect	videodev2.h	/^	struct v4l2_fract       pixelaspect;$/;"	m	struct:v4l2_cropcap	typeref:struct:v4l2_cropcap::v4l2_fract
pixelclock	videodev2.h	/^	__u64	pixelclock;$/;"	m	struct:v4l2_bt_timings
pixelcode	v4l2-subdev.h	/^	u32 pixelcode;$/;"	m	struct:v4l2_mbus_frame_desc_entry
pixelformat	v4l2-compat-ioctl32.c	/^		__u32		pixelformat;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
pixelformat	videodev2.h	/^		__u32		pixelformat;$/;"	m	struct:v4l2_framebuffer::__anon53
pixelformat	videodev2.h	/^	__u32				pixelformat;$/;"	m	struct:v4l2_pix_format_mplane
pixelformat	videodev2.h	/^	__u32				pixelformat;$/;"	m	struct:v4l2_sdr_format
pixelformat	videodev2.h	/^	__u32			pixelformat;$/;"	m	struct:v4l2_pix_format
pixelformat	videodev2.h	/^	__u32		    pixelformat;       \/* Format fourcc      *\/$/;"	m	struct:v4l2_fmtdesc
pixelformat	vsp1.h	/^	u32 pixelformat;$/;"	m	struct:vsp1_du_atomic_config
pixels_per_line	imx258.c	/^	u32 pixels_per_line;$/;"	m	struct:imx258_link_freq_config	file:
plane	videodev2.h	/^	__u32		plane;$/;"	m	struct:v4l2_exportbuffer
plane_fmt	videodev2.h	/^	struct v4l2_plane_pix_format	plane_fmt[VIDEO_MAX_PLANES];$/;"	m	struct:v4l2_pix_format_mplane	typeref:struct:v4l2_pix_format_mplane::v4l2_plane_pix_format
planes	v4l2-compat-ioctl32.c	/^		compat_caddr_t  planes;$/;"	m	union:v4l2_buffer32::__anon39	file:
planes	videobuf2-core.h	/^	struct vb2_plane	planes[VB2_MAX_PLANES];$/;"	m	struct:vb2_buffer	typeref:struct:vb2_buffer::vb2_plane
planes	videodev2.h	/^		struct v4l2_plane *planes;$/;"	m	union:v4l2_buffer::__anon52	typeref:struct:v4l2_buffer::__anon52::v4l2_plane
platform_data	device.h	/^	void		*platform_data;	\/* Platform specific data, device$/;"	m	struct:device
platform_data	i2c.h	/^	void		*platform_data;$/;"	m	struct:i2c_board_info
platform_device_id	mod_devicetable.h	/^struct platform_device_id {$/;"	s
playing	dvb_demux.h	/^	int playing;$/;"	m	struct:dvb_demux
pm	device.h	/^	const struct dev_pm_ops *pm;$/;"	m	class:__anon1	typeref:struct:__anon1::dev_pm_ops
pm	device.h	/^	const struct dev_pm_ops *pm;$/;"	m	struct:bus_type	typeref:struct:bus_type::dev_pm_ops
pm	device.h	/^	const struct dev_pm_ops *pm;$/;"	m	struct:device_driver	typeref:struct:device_driver::dev_pm_ops
pm	device.h	/^	const struct dev_pm_ops *pm;$/;"	m	struct:device_type	typeref:struct:device_type::dev_pm_ops
pm_count_walk	media-device.h	/^	struct media_graph pm_count_walk;$/;"	m	struct:media_device	typeref:struct:media_device::media_graph
pm_domain	device.h	/^	struct dev_pm_domain	*pm_domain;$/;"	m	struct:device	typeref:struct:device::dev_pm_domain
pm_generic_complete	pm.h	819;"	d
pm_generic_freeze	pm.h	809;"	d
pm_generic_freeze_late	pm.h	808;"	d
pm_generic_freeze_noirq	pm.h	807;"	d
pm_generic_poweroff	pm.h	818;"	d
pm_generic_poweroff_late	pm.h	817;"	d
pm_generic_poweroff_noirq	pm.h	816;"	d
pm_generic_prepare	pm.h	800;"	d
pm_generic_restore	pm.h	815;"	d
pm_generic_restore_early	pm.h	814;"	d
pm_generic_restore_noirq	pm.h	813;"	d
pm_generic_resume	pm.h	806;"	d
pm_generic_resume_early	pm.h	804;"	d
pm_generic_resume_noirq	pm.h	805;"	d
pm_generic_runtime_resume	pm_runtime.h	/^static inline int pm_generic_runtime_resume(struct device *dev) { return 0; }$/;"	f
pm_generic_runtime_suspend	pm_runtime.h	/^static inline int pm_generic_runtime_suspend(struct device *dev) { return 0; }$/;"	f
pm_generic_suspend	pm.h	803;"	d
pm_generic_suspend_late	pm.h	801;"	d
pm_generic_suspend_noirq	pm.h	802;"	d
pm_generic_thaw	pm.h	812;"	d
pm_generic_thaw_early	pm.h	811;"	d
pm_generic_thaw_noirq	pm.h	810;"	d
pm_message	pm.h	/^typedef struct pm_message {$/;"	s
pm_message_t	pm.h	/^} pm_message_t;$/;"	t	typeref:struct:pm_message
pm_request_autosuspend	pm_runtime.h	/^static inline int pm_request_autosuspend(struct device *dev)$/;"	f
pm_request_idle	pm_runtime.h	/^static inline int pm_request_idle(struct device *dev)$/;"	f
pm_request_resume	pm_runtime.h	/^static inline int pm_request_resume(struct device *dev)$/;"	f
pm_runtime_active	pm_runtime.h	/^static inline bool pm_runtime_active(struct device *dev) { return true; }$/;"	f
pm_runtime_active	pm_runtime.h	/^static inline bool pm_runtime_active(struct device *dev)$/;"	f
pm_runtime_allow	pm_runtime.h	/^static inline void pm_runtime_allow(struct device *dev) {}$/;"	f
pm_runtime_autosuspend	pm_runtime.h	/^static inline int pm_runtime_autosuspend(struct device *dev)$/;"	f
pm_runtime_autosuspend_expiration	pm_runtime.h	/^static inline unsigned long pm_runtime_autosuspend_expiration($/;"	f
pm_runtime_barrier	pm_runtime.h	/^static inline int pm_runtime_barrier(struct device *dev) { return 0; }$/;"	f
pm_runtime_callbacks_present	pm_runtime.h	/^static inline bool pm_runtime_callbacks_present(struct device *dev) { return false; }$/;"	f
pm_runtime_callbacks_present	pm_runtime.h	/^static inline bool pm_runtime_callbacks_present(struct device *dev)$/;"	f
pm_runtime_clean_up_links	pm_runtime.h	/^static inline void pm_runtime_clean_up_links(struct device *dev) {}$/;"	f
pm_runtime_disable	pm_runtime.h	/^static inline void pm_runtime_disable(struct device *dev)$/;"	f
pm_runtime_dont_use_autosuspend	pm_runtime.h	/^static inline void pm_runtime_dont_use_autosuspend(struct device *dev)$/;"	f
pm_runtime_drop_link	pm_runtime.h	/^static inline void pm_runtime_drop_link(struct device *dev) {}$/;"	f
pm_runtime_enable	pm_runtime.h	/^static inline void pm_runtime_enable(struct device *dev) {}$/;"	f
pm_runtime_enabled	pm_runtime.h	/^static inline bool pm_runtime_enabled(struct device *dev) { return false; }$/;"	f
pm_runtime_enabled	pm_runtime.h	/^static inline bool pm_runtime_enabled(struct device *dev)$/;"	f
pm_runtime_forbid	pm_runtime.h	/^static inline void pm_runtime_forbid(struct device *dev) {}$/;"	f
pm_runtime_force_resume	pm_runtime.h	/^static inline int pm_runtime_force_resume(struct device *dev) { return 0; }$/;"	f
pm_runtime_force_suspend	pm_runtime.h	/^static inline int pm_runtime_force_suspend(struct device *dev) { return 0; }$/;"	f
pm_runtime_get	pm_runtime.h	/^static inline int pm_runtime_get(struct device *dev)$/;"	f
pm_runtime_get_if_in_use	pm_runtime.h	/^static inline int pm_runtime_get_if_in_use(struct device *dev)$/;"	f
pm_runtime_get_noresume	pm_runtime.h	/^static inline void pm_runtime_get_noresume(struct device *dev) {}$/;"	f
pm_runtime_get_noresume	pm_runtime.h	/^static inline void pm_runtime_get_noresume(struct device *dev)$/;"	f
pm_runtime_get_suppliers	pm_runtime.h	/^static inline void pm_runtime_get_suppliers(struct device *dev) {}$/;"	f
pm_runtime_get_sync	pm_runtime.h	/^static inline int pm_runtime_get_sync(struct device *dev)$/;"	f
pm_runtime_idle	pm_runtime.h	/^static inline int pm_runtime_idle(struct device *dev)$/;"	f
pm_runtime_irq_safe	pm_runtime.h	/^static inline void pm_runtime_irq_safe(struct device *dev) {}$/;"	f
pm_runtime_is_irq_safe	pm_runtime.h	/^static inline bool pm_runtime_is_irq_safe(struct device *dev) { return false; }$/;"	f
pm_runtime_is_irq_safe	pm_runtime.h	/^static inline bool pm_runtime_is_irq_safe(struct device *dev)$/;"	f
pm_runtime_mark_last_busy	pm_runtime.h	/^static inline void pm_runtime_mark_last_busy(struct device *dev) {}$/;"	f
pm_runtime_mark_last_busy	pm_runtime.h	/^static inline void pm_runtime_mark_last_busy(struct device *dev)$/;"	f
pm_runtime_new_link	pm_runtime.h	/^static inline void pm_runtime_new_link(struct device *dev) {}$/;"	f
pm_runtime_no_callbacks	pm_runtime.h	/^static inline void pm_runtime_no_callbacks(struct device *dev) {}$/;"	f
pm_runtime_put	pm_runtime.h	/^static inline int pm_runtime_put(struct device *dev)$/;"	f
pm_runtime_put_autosuspend	pm_runtime.h	/^static inline int pm_runtime_put_autosuspend(struct device *dev)$/;"	f
pm_runtime_put_noidle	pm_runtime.h	/^static inline void pm_runtime_put_noidle(struct device *dev) {}$/;"	f
pm_runtime_put_noidle	pm_runtime.h	/^static inline void pm_runtime_put_noidle(struct device *dev)$/;"	f
pm_runtime_put_suppliers	pm_runtime.h	/^static inline void pm_runtime_put_suppliers(struct device *dev) {}$/;"	f
pm_runtime_put_sync	pm_runtime.h	/^static inline int pm_runtime_put_sync(struct device *dev)$/;"	f
pm_runtime_put_sync_autosuspend	pm_runtime.h	/^static inline int pm_runtime_put_sync_autosuspend(struct device *dev)$/;"	f
pm_runtime_put_sync_suspend	pm_runtime.h	/^static inline int pm_runtime_put_sync_suspend(struct device *dev)$/;"	f
pm_runtime_resume	pm_runtime.h	/^static inline int pm_runtime_resume(struct device *dev)$/;"	f
pm_runtime_set_active	pm_runtime.h	/^static inline int pm_runtime_set_active(struct device *dev)$/;"	f
pm_runtime_set_autosuspend_delay	pm_runtime.h	/^static inline void pm_runtime_set_autosuspend_delay(struct device *dev,$/;"	f
pm_runtime_set_memalloc_noio	pm_runtime.h	/^static inline void pm_runtime_set_memalloc_noio(struct device *dev,$/;"	f
pm_runtime_set_suspended	pm_runtime.h	/^static inline int pm_runtime_set_suspended(struct device *dev)$/;"	f
pm_runtime_status_suspended	pm_runtime.h	/^static inline bool pm_runtime_status_suspended(struct device *dev) { return false; }$/;"	f
pm_runtime_status_suspended	pm_runtime.h	/^static inline bool pm_runtime_status_suspended(struct device *dev)$/;"	f
pm_runtime_suspend	pm_runtime.h	/^static inline int pm_runtime_suspend(struct device *dev)$/;"	f
pm_runtime_suspended	pm_runtime.h	/^static inline bool pm_runtime_suspended(struct device *dev) { return false; }$/;"	f
pm_runtime_suspended	pm_runtime.h	/^static inline bool pm_runtime_suspended(struct device *dev)$/;"	f
pm_runtime_use_autosuspend	pm_runtime.h	/^static inline void pm_runtime_use_autosuspend(struct device *dev)$/;"	f
pm_schedule_suspend	pm_runtime.h	/^static inline int pm_schedule_suspend(struct device *dev, unsigned int delay)$/;"	f
pm_subsys_data	pm.h	/^struct pm_subsys_data {$/;"	s
pm_suspend_ignore_children	pm_runtime.h	/^static inline void pm_suspend_ignore_children(struct device *dev, bool enable) {}$/;"	f
pm_suspend_ignore_children	pm_runtime.h	/^static inline void pm_suspend_ignore_children(struct device *dev, bool enable)$/;"	f
pm_vt_switch_required	pm.h	/^static inline void pm_vt_switch_required(struct device *dev, bool required)$/;"	f
pm_vt_switch_unregister	pm.h	/^static inline void pm_vt_switch_unregister(struct device *dev)$/;"	f
pnp_card_device_id	mod_devicetable.h	/^struct pnp_card_device_id {$/;"	s
pnp_device_id	mod_devicetable.h	/^struct pnp_device_id {$/;"	s
pointer	property.h	/^		} pointer;$/;"	m	union:property_entry::__anon28	typeref:union:property_entry::__anon28::__anon29
polarities	videodev2.h	/^	__u32	polarities;$/;"	m	struct:v4l2_bt_timings
poll	media-devnode.h	/^	__poll_t (*poll) (struct file *, struct poll_table_struct *);$/;"	m	struct:media_file_operations
poll	soc_camera.h	/^	__poll_t (*poll)(struct file *, poll_table *);$/;"	m	struct:soc_camera_host_ops
poll	v4l2-dev.h	/^	__poll_t (*poll) (struct file *, struct poll_table_struct *);$/;"	m	struct:v4l2_file_operations
poll_interval	gpio_keys.h	/^	unsigned int poll_interval;$/;"	m	struct:gpio_keys_platform_data
poll_slot_status	dvb_ca_en50221.h	/^	int (*poll_slot_status)(struct dvb_ca_en50221 *ca, int slot, int open);$/;"	m	struct:dvb_ca_en50221
port	fwnode.h	/^	unsigned int port;$/;"	m	struct:fwnode_endpoint
port1_active	tuner-types.h	/^	unsigned int port1_active:1;$/;"	m	struct:tuner_params
port1_fm_high_sensitivity	tuner-types.h	/^	unsigned int port1_fm_high_sensitivity:1;$/;"	m	struct:tuner_params
port1_invert_for_secam_lc	tuner-types.h	/^	unsigned int port1_invert_for_secam_lc:1;$/;"	m	struct:tuner_params
port1_set_for_fm_mono	tuner-types.h	/^	unsigned int port1_set_for_fm_mono:1;$/;"	m	struct:tuner_params
port2_active	tuner-types.h	/^	unsigned int port2_active:1;$/;"	m	struct:tuner_params
port2_fm_high_sensitivity	tuner-types.h	/^	unsigned int port2_fm_high_sensitivity:1;$/;"	m	struct:tuner_params
port2_invert_for_secam_lc	tuner-types.h	/^	unsigned int port2_invert_for_secam_lc:1;$/;"	m	struct:tuner_params
post_bit_count	dvb_frontend.h	/^	struct dtv_fe_stats	post_bit_count;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
post_bit_error	dvb_frontend.h	/^	struct dtv_fe_stats	post_bit_error;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
post_xfer	i2c-algo-bit.h	/^	void (*post_xfer) (struct i2c_adapter *);$/;"	m	struct:i2c_algo_bit_data
postcore_initcall	module.h	113;"	d
postcore_initcall_sync	module.h	114;"	d
power	device.h	/^	struct dev_pm_info	power;$/;"	m	struct:device	typeref:struct:device::dev_pm_info
power	soc_camera.h	/^	int (*power)(struct device *, int);$/;"	m	struct:soc_camera_link
power	soc_camera.h	/^	int (*power)(struct device *, int);$/;"	m	struct:soc_camera_subdev_desc
power_count	imx219.c	/^	int power_count;$/;"	m	struct:imx219	file:
power_group_name	pm.h	59;"	d
power_state	pm.h	/^	pm_message_t		power_state;$/;"	m	struct:dev_pm_info
poweroff	pm.h	/^	int (*poweroff)(struct device *dev);$/;"	m	struct:dev_pm_ops
poweroff_late	pm.h	/^	int (*poweroff_late)(struct device *dev);$/;"	m	struct:dev_pm_ops
poweroff_noirq	pm.h	/^	int (*poweroff_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops
pr_fmt	i2c-core-base.c	21;"	d	file:
pr_fmt	tuner-core.c	85;"	d	file:
pr_fmt	tuner-core.c	87;"	d	file:
pr_fmt	v4l2-dev.c	19;"	d	file:
pre_bit_count	dvb_frontend.h	/^	struct dtv_fe_stats	pre_bit_count;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
pre_bit_error	dvb_frontend.h	/^	struct dtv_fe_stats	pre_bit_error;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
pre_voltage_change_data	consumer1.h	/^struct pre_voltage_change_data {$/;"	s
pre_xfer	i2c-algo-bit.h	/^	int  (*pre_xfer)  (struct i2c_adapter *);$/;"	m	struct:i2c_algo_bit_data
pread	dvb_ringbuffer.h	/^	ssize_t           pread;$/;"	m	struct:dvb_ringbuffer
prepare	clk-provider.h	/^	int		(*prepare)(struct clk_hw *hw);$/;"	m	struct:clk_ops
prepare	pm.h	/^	int (*prepare)(struct device *dev);$/;"	m	struct:dev_pm_ops
prepare	videobuf2-core.h	/^	void		(*prepare)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
prepare_ext_ctrls	v4l2-ctrls.c	/^static int prepare_ext_ctrls(struct v4l2_ctrl_handler *hdl,$/;"	f	file:
prepare_recovery	i2c.h	/^	void (*prepare_recovery)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info
print_modules	module.h	/^static inline void print_modules(void)$/;"	f
print_reloc_info	relocs.c	/^static void print_reloc_info(void)$/;"	f	file:
prio	v4l2-dev.h	/^	struct v4l2_prio_state *prio;$/;"	m	struct:video_device	typeref:struct:video_device::v4l2_prio_state
prio	v4l2-device.h	/^	struct v4l2_prio_state prio;$/;"	m	struct:v4l2_device	typeref:struct:v4l2_device::v4l2_prio_state
prio	v4l2-fh.h	/^	enum v4l2_priority	prio;$/;"	m	struct:v4l2_fh	typeref:enum:v4l2_fh::v4l2_priority
prio_is_valid	v4l2-dev.c	/^static inline bool prio_is_valid(enum v4l2_priority prio)$/;"	f	file:
prios	v4l2-dev.h	/^	atomic_t prios[4];$/;"	m	struct:v4l2_prio_state
priv	cec.h	/^	void *priv;$/;"	m	struct:cec_adapter
priv	demux.h	/^	void *priv;$/;"	m	struct:dmx_demux
priv	demux.h	/^	void *priv;$/;"	m	struct:dmx_section_feed
priv	demux.h	/^	void *priv;$/;"	m	struct:dmx_section_filter
priv	demux.h	/^	void *priv;$/;"	m	struct:dmx_ts_feed
priv	dvb_demux.h	/^	void *priv;$/;"	m	struct:dvb_demux
priv	dvb_demux.h	/^	void *priv;$/;"	m	struct:dvb_demux_feed
priv	dvbdev.h	/^	void *priv;$/;"	m	struct:dvb_device
priv	dvbdev.h	/^	void* priv;$/;"	m	struct:dvb_adapter
priv	i2c-mux.h	/^	void *priv;$/;"	m	struct:i2c_mux_core
priv	rc-core.h	/^	void				*priv;$/;"	m	struct:rc_dev
priv	soc_camera.h	/^	void *priv;$/;"	m	struct:soc_camera_host
priv	soc_camera.h	/^	void *priv;$/;"	m	struct:soc_camera_link
priv	v4l2-async.h	/^			void *priv;$/;"	m	struct:v4l2_async_subdev::__anon34::__anon36
priv	v4l2-clk.h	/^	void *priv;$/;"	m	struct:v4l2_clk
priv	v4l2-common.h	/^	void *priv;$/;"	m	struct:v4l2_priv_tun_config
priv	v4l2-compat-ioctl32.c	/^		__u32		priv;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
priv	v4l2-ctrls.h	/^	void *priv;$/;"	m	struct:v4l2_ctrl
priv	v4l2-mem2mem.h	/^	void				*priv;$/;"	m	struct:v4l2_m2m_ctx
priv	videobuf-core.h	/^	void                    *priv;$/;"	m	struct:videobuf_buffer
priv	videodev2.h	/^		__u32		priv;		\/* reserved field, set to 0 *\/$/;"	m	struct:v4l2_framebuffer::__anon53
priv	videodev2.h	/^	__u32			priv;		\/* private data, depends on pixelformat *\/$/;"	m	struct:v4l2_pix_format
priv_data	videobuf-core.h	/^	void                       *priv_data;$/;"	m	struct:videobuf_queue
privsize	videobuf-core.h	/^	int			privsize;$/;"	m	struct:videobuf_buffer
probe	device.h	/^	int (*probe) (struct device *dev);$/;"	m	struct:device_driver
probe	device.h	/^	int (*probe)(struct device *dev);$/;"	m	struct:bus_type
probe	i2c.h	/^	int (*probe)(struct i2c_client *, const struct i2c_device_id *);$/;"	m	struct:i2c_driver
probe_new	i2c.h	/^	int (*probe_new)(struct i2c_client *);$/;"	m	struct:i2c_driver
probe_type	device.h	/^	enum probe_type probe_type;$/;"	m	struct:device_driver	typeref:enum:device_driver::probe_type
probe_type	device.h	/^enum probe_type {$/;"	g
proc	v4l2-mem2mem.c	/^	struct media_entity	proc;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_entity	file:
proc_pads	v4l2-mem2mem.c	/^	struct media_pad	proc_pads[2];$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_pad	file:
process	relocs.c	/^void process(FILE *fp, int as_text, int as_bin,$/;"	f
process	relocs.c	660;"	d	file:
process	relocs.c	662;"	d	file:
prod_code	mod_devicetable.h	/^	__u16 manf_id, prod_code;$/;"	m	struct:slim_device_id
prod_id	mod_devicetable.h	/^	const char *	prod_id[4];$/;"	m	struct:pcmcia_device_id
prod_id_hash	mod_devicetable.h	/^	__u32 		prod_id_hash[4];$/;"	m	struct:pcmcia_device_id
product	mod_devicetable.h	/^	__u16 product;$/;"	m	struct:input_device_id
product	mod_devicetable.h	/^	__u16 product;$/;"	m	struct:ulpi_device_id
product	mod_devicetable.h	/^	__u32 product;$/;"	m	struct:hid_device_id
propbit	mod_devicetable.h	/^	kernel_ulong_t propbit[INPUT_DEVICE_ID_PROP_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
properties	i2c.h	/^	const struct property_entry *properties;$/;"	m	struct:i2c_board_info	typeref:struct:i2c_board_info::property_entry
properties	property.c	/^	const struct property_entry *properties;$/;"	m	struct:property_set	typeref:struct:property_set::property_entry	file:
property_copy_string_array	property.c	/^static int property_copy_string_array(struct property_entry *dst,$/;"	f	file:
property_entries_dup	property.c	/^EXPORT_SYMBOL_GPL(property_entries_dup);$/;"	v
property_entries_dup	property.c	/^property_entries_dup(const struct property_entry *properties)$/;"	f
property_entries_free	property.c	/^EXPORT_SYMBOL_GPL(property_entries_free);$/;"	v
property_entries_free	property.c	/^void property_entries_free(const struct property_entry *properties)$/;"	f
property_entry	property.h	/^struct property_entry {$/;"	s
property_entry_copy_data	property.c	/^static int property_entry_copy_data(struct property_entry *dst,$/;"	f	file:
property_entry_free_data	property.c	/^static void property_entry_free_data(const struct property_entry *p)$/;"	f	file:
property_get_pointer	property.c	/^static const void *property_get_pointer(const struct property_entry *prop)$/;"	f	file:
property_present	fwnode.h	/^	bool (*property_present)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations
property_read_int_array	fwnode.h	/^	int (*property_read_int_array)(const struct fwnode_handle *fwnode,$/;"	m	struct:fwnode_operations
property_read_string_array	fwnode.h	/^	(*property_read_string_array)(const struct fwnode_handle *fwnode_handle,$/;"	m	struct:fwnode_operations
property_set	property.c	/^struct property_set {$/;"	s	file:
property_set_pointer	property.c	/^static void property_set_pointer(struct property_entry *prop, const void *pointer)$/;"	f	file:
proposed_mac	dvbdev.h	/^	u8 proposed_mac [6];$/;"	m	struct:dvb_adapter
proto	mod_devicetable.h	/^	__u8 proto;$/;"	m	struct:serio_device_id
protocol_id	mod_devicetable.h	/^	__u32 protocol_id;$/;"	m	struct:tb_service_id
protocol_key	mod_devicetable.h	/^	char protocol_key[8 + 1];$/;"	m	struct:tb_service_id
protocol_revision	mod_devicetable.h	/^	__u32 protocol_revision;$/;"	m	struct:tb_service_id
protocol_version	mod_devicetable.h	/^	__u32 protocol_version;$/;"	m	struct:tb_service_id
prt_names	v4l2-ioctl.c	207;"	d	file:
pset_copy_set	property.c	/^static struct property_set *pset_copy_set(const struct property_set *pset)$/;"	f	file:
pset_free_set	property.c	/^static void pset_free_set(struct property_set *pset)$/;"	f	file:
pset_fwnode_ops	property.c	/^static const struct fwnode_operations pset_fwnode_ops = {$/;"	v	typeref:struct:fwnode_operations	file:
pset_fwnode_ops	property.c	/^static const struct fwnode_operations pset_fwnode_ops;$/;"	v	typeref:struct:fwnode_operations	file:
pset_fwnode_property_present	property.c	/^static bool pset_fwnode_property_present(const struct fwnode_handle *fwnode,$/;"	f	file:
pset_fwnode_property_read_string_array	property.c	/^pset_fwnode_property_read_string_array(const struct fwnode_handle *fwnode,$/;"	f	file:
pset_fwnode_read_int_array	property.c	/^static int pset_fwnode_read_int_array(const struct fwnode_handle *fwnode,$/;"	f	file:
pset_prop_count_elems_of_size	property.c	/^static int pset_prop_count_elems_of_size(const struct property_set *pset,$/;"	f	file:
pset_prop_find	property.c	/^static const void *pset_prop_find(const struct property_set *pset,$/;"	f	file:
pset_prop_get	property.c	/^pset_prop_get(const struct property_set *pset, const char *name)$/;"	f	file:
pset_prop_read_string_array	property.c	/^static int pset_prop_read_string_array(const struct property_set *pset,$/;"	f	file:
pset_prop_read_u16_array	property.c	/^static int pset_prop_read_u16_array(const struct property_set *pset,$/;"	f	file:
pset_prop_read_u32_array	property.c	/^static int pset_prop_read_u32_array(const struct property_set *pset,$/;"	f	file:
pset_prop_read_u64_array	property.c	/^static int pset_prop_read_u64_array(const struct property_set *pset,$/;"	f	file:
pset_prop_read_u8_array	property.c	/^static int pset_prop_read_u8_array(const struct property_set *pset,$/;"	f	file:
ptr	videodev2.h	/^		void __user *ptr;$/;"	m	union:v4l2_ext_control::__anon56
ptr_entities	media.h	/^	__u64 ptr_entities;$/;"	m	struct:media_v2_topology
ptr_interfaces	media.h	/^	__u64 ptr_interfaces;$/;"	m	struct:media_v2_topology
ptr_links	media.h	/^	__u64 ptr_links;$/;"	m	struct:media_v2_topology
ptr_pads	media.h	/^	__u64 ptr_pads;$/;"	m	struct:media_v2_topology
ptr_to_ptr	v4l2-ctrls.c	/^static void ptr_to_ptr(struct v4l2_ctrl *ctrl,$/;"	f	file:
ptr_to_user	v4l2-ctrls.c	/^static int ptr_to_user(struct v4l2_ext_control *c,$/;"	f	file:
pts	videodev2.h	/^			__u64 pts;$/;"	m	struct:v4l2_decoder_cmd::__anon61::__anon62
pts	videodev2.h	/^	__u64 pts;$/;"	m	struct:v4l2_enc_idx_entry
pulse	rc-core.h	/^	unsigned                pulse:1;$/;"	m	struct:ir_raw_event
pusi_seen	dvb_demux.h	/^	bool pusi_seen;$/;"	m	struct:dvb_demux_feed
put	fwnode.h	/^	void (*put)(struct fwnode_handle *fwnode);$/;"	m	struct:fwnode_operations
put	videobuf2-core.h	/^	void		(*put)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
put	videobuf2-memops.h	/^	void			(*put)(void *arg);$/;"	m	struct:vb2_vmarea_handler
put_formats	soc_camera.h	/^	void (*put_formats)(struct soc_camera_device *);$/;"	m	struct:soc_camera_host_ops
put_i2c_dev	i2c-dev.c	/^static void put_i2c_dev(struct i2c_dev *i2c_dev)$/;"	f	file:
put_unaligned	unaligned.h	23;"	d
put_unaligned	unaligned.h	31;"	d
put_unaligned_be16	access_ok.h	/^static __always_inline void put_unaligned_be16(u16 val, void *p)$/;"	f
put_unaligned_be16	be_byteshift.h	/^static inline void put_unaligned_be16(u16 val, void *p)$/;"	f
put_unaligned_be16	be_memmove.h	/^static inline void put_unaligned_be16(u16 val, void *p)$/;"	f
put_unaligned_be16	be_struct.h	/^static inline void put_unaligned_be16(u16 val, void *p)$/;"	f
put_unaligned_be32	access_ok.h	/^static __always_inline void put_unaligned_be32(u32 val, void *p)$/;"	f
put_unaligned_be32	be_byteshift.h	/^static inline void put_unaligned_be32(u32 val, void *p)$/;"	f
put_unaligned_be32	be_memmove.h	/^static inline void put_unaligned_be32(u32 val, void *p)$/;"	f
put_unaligned_be32	be_struct.h	/^static inline void put_unaligned_be32(u32 val, void *p)$/;"	f
put_unaligned_be64	access_ok.h	/^static __always_inline void put_unaligned_be64(u64 val, void *p)$/;"	f
put_unaligned_be64	be_byteshift.h	/^static inline void put_unaligned_be64(u64 val, void *p)$/;"	f
put_unaligned_be64	be_memmove.h	/^static inline void put_unaligned_be64(u64 val, void *p)$/;"	f
put_unaligned_be64	be_struct.h	/^static inline void put_unaligned_be64(u64 val, void *p)$/;"	f
put_unaligned_le16	access_ok.h	/^static __always_inline void put_unaligned_le16(u16 val, void *p)$/;"	f
put_unaligned_le16	le_byteshift.h	/^static inline void put_unaligned_le16(u16 val, void *p)$/;"	f
put_unaligned_le16	le_memmove.h	/^static inline void put_unaligned_le16(u16 val, void *p)$/;"	f
put_unaligned_le16	le_struct.h	/^static inline void put_unaligned_le16(u16 val, void *p)$/;"	f
put_unaligned_le32	access_ok.h	/^static __always_inline void put_unaligned_le32(u32 val, void *p)$/;"	f
put_unaligned_le32	le_byteshift.h	/^static inline void put_unaligned_le32(u32 val, void *p)$/;"	f
put_unaligned_le32	le_memmove.h	/^static inline void put_unaligned_le32(u32 val, void *p)$/;"	f
put_unaligned_le32	le_struct.h	/^static inline void put_unaligned_le32(u32 val, void *p)$/;"	f
put_unaligned_le64	access_ok.h	/^static __always_inline void put_unaligned_le64(u64 val, void *p)$/;"	f
put_unaligned_le64	le_byteshift.h	/^static inline void put_unaligned_le64(u64 val, void *p)$/;"	f
put_unaligned_le64	le_memmove.h	/^static inline void put_unaligned_le64(u64 val, void *p)$/;"	f
put_unaligned_le64	le_struct.h	/^static inline void put_unaligned_le64(u64 val, void *p)$/;"	f
put_user_force	v4l2-compat-ioctl32.c	74;"	d	file:
put_userptr	videobuf2-core.h	/^	void		(*put_userptr)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
put_v4l2_buffer32	v4l2-compat-ioctl32.c	/^static int put_v4l2_buffer32(struct v4l2_buffer __user *p64,$/;"	f	file:
put_v4l2_create32	v4l2-compat-ioctl32.c	/^static int put_v4l2_create32(struct v4l2_create_buffers __user *p64,$/;"	f	file:
put_v4l2_edid32	v4l2-compat-ioctl32.c	/^static int put_v4l2_edid32(struct v4l2_edid __user *p64,$/;"	f	file:
put_v4l2_event32	v4l2-compat-ioctl32.c	/^static int put_v4l2_event32(struct v4l2_event __user *p64,$/;"	f	file:
put_v4l2_ext_controls32	v4l2-compat-ioctl32.c	/^static int put_v4l2_ext_controls32(struct file *file,$/;"	f	file:
put_v4l2_format32	v4l2-compat-ioctl32.c	/^static int put_v4l2_format32(struct v4l2_format __user *p64,$/;"	f	file:
put_v4l2_framebuffer32	v4l2-compat-ioctl32.c	/^static int put_v4l2_framebuffer32(struct v4l2_framebuffer __user *p64,$/;"	f	file:
put_v4l2_input32	v4l2-compat-ioctl32.c	/^static inline int put_v4l2_input32(struct v4l2_input __user *p64,$/;"	f	file:
put_v4l2_plane32	v4l2-compat-ioctl32.c	/^static int put_v4l2_plane32(struct v4l2_plane __user *p64,$/;"	f	file:
put_v4l2_standard32	v4l2-compat-ioctl32.c	/^static int put_v4l2_standard32(struct v4l2_standard __user *p64,$/;"	f	file:
put_v4l2_window32	v4l2-compat-ioctl32.c	/^static int put_v4l2_window32(struct v4l2_window __user *p64,$/;"	f	file:
pwrite	dvb_ringbuffer.h	/^	ssize_t           pwrite;$/;"	m	struct:dvb_ringbuffer
q	v4l2-mem2mem.h	/^	struct vb2_queue	q;$/;"	m	struct:v4l2_m2m_queue_ctx	typeref:struct:v4l2_m2m_queue_ctx::vb2_queue
q	videobuf-core.h	/^	struct videobuf_queue *q;$/;"	m	struct:videobuf_mapping	typeref:struct:videobuf_mapping::videobuf_queue
q_lock	v4l2-mem2mem.h	/^	struct mutex			*q_lock;$/;"	m	struct:v4l2_m2m_ctx	typeref:struct:v4l2_m2m_ctx::mutex
qmenu	v4l2-ctrls.h	/^		const char * const *qmenu;$/;"	m	union:v4l2_ctrl::__anon44
qmenu	v4l2-ctrls.h	/^	const char * const *qmenu;$/;"	m	struct:v4l2_ctrl_config
qmenu_int	v4l2-ctrls.h	/^		const s64 *qmenu_int;$/;"	m	union:v4l2_ctrl::__anon44
qmenu_int	v4l2-ctrls.h	/^	const s64 *qmenu_int;$/;"	m	struct:v4l2_ctrl_config
qops	videobuf-dma-contig.c	/^static struct videobuf_qtype_ops qops = {$/;"	v	typeref:struct:videobuf_qtype_ops	file:
qops	videobuf-vmalloc.c	/^static struct videobuf_qtype_ops qops = {$/;"	v	typeref:struct:videobuf_qtype_ops	file:
qos	pm.h	/^	struct dev_pm_qos	*qos;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::dev_pm_qos
quality	videodev2.h	/^	int quality;$/;"	m	struct:v4l2_jpegcompression
quantization	v4l2-dv-timings.h	/^	enum v4l2_quantization quantization;$/;"	m	struct:v4l2_hdmi_colorimetry	typeref:enum:v4l2_hdmi_colorimetry::v4l2_quantization
quantization	videodev2.h	/^	__u32			quantization;	\/* enum v4l2_quantization *\/$/;"	m	struct:v4l2_pix_format
quantization	videodev2.h	/^	__u8				quantization;$/;"	m	struct:v4l2_pix_format_mplane
query_bus_param	soc_camera.h	/^	unsigned long (*query_bus_param)(struct soc_camera_link *);$/;"	m	struct:soc_camera_link
query_bus_param	soc_camera.h	/^	unsigned long (*query_bus_param)(struct soc_camera_subdev_desc *);$/;"	m	struct:soc_camera_subdev_desc
query_dv_timings	v4l2-subdev.h	/^	int (*query_dv_timings)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
querycap	soc_camera.h	/^	int (*querycap)(struct soc_camera_host *, struct v4l2_capability *);$/;"	m	struct:soc_camera_host_ops
querystd	v4l2-subdev.h	/^	int (*querystd)(struct v4l2_subdev *sd, v4l2_std_id *std);$/;"	m	struct:v4l2_subdev_video_ops
queue	dvb_ringbuffer.h	/^	wait_queue_head_t queue;$/;"	m	struct:dvb_ringbuffer
queue	v4l2-dev.h	/^	struct vb2_queue *queue;$/;"	m	struct:video_device	typeref:struct:video_device::vb2_queue
queue	v4l2-mem2mem.h	/^	struct list_head		queue;$/;"	m	struct:v4l2_m2m_ctx	typeref:struct:v4l2_m2m_ctx::list_head
queue	videobuf-core.h	/^	struct list_head        queue;$/;"	m	struct:videobuf_buffer	typeref:struct:videobuf_buffer::list_head
queue_pm_work	pm_runtime.h	/^static inline bool queue_pm_work(struct work_struct *work) { return false; }$/;"	f
queue_pm_work	pm_runtime.h	/^static inline bool queue_pm_work(struct work_struct *work)$/;"	f
queue_setup	videobuf2-core.h	/^	int (*queue_setup)(struct vb2_queue *q,$/;"	m	struct:vb2_ops
queued_count	videobuf2-core.h	/^	unsigned int			queued_count;$/;"	m	struct:vb2_queue
queued_entry	videobuf2-core.h	/^	struct list_head	queued_entry;$/;"	m	struct:vb2_buffer	typeref:struct:vb2_buffer::list_head
queued_events	cec.h	/^	u16			queued_events[CEC_NUM_EVENTS];$/;"	m	struct:cec_fh
queued_list	videobuf2-core.h	/^	struct list_head		queued_list;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::list_head
queued_msgs	cec.h	/^	unsigned int		queued_msgs;$/;"	m	struct:cec_fh
quirk_poll_must_check_waiting_for_buffers	videobuf2-core.h	/^	unsigned		   quirk_poll_must_check_waiting_for_buffers:1;$/;"	m	struct:vb2_queue
quirks	i2c.h	/^	const struct i2c_adapter_quirks *quirks;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::i2c_adapter_quirks
r	videodev2.h	/^	struct v4l2_rect        r;$/;"	m	struct:v4l2_selection	typeref:struct:v4l2_selection::v4l2_rect
r_ssym	relocs_64.c	/^		Elf64_Byte r_ssym;	\/* Special symbol.  *\/$/;"	m	struct:__anon32::__anon33	file:
r_sym	relocs_64.c	/^		Elf64_Word r_sym;	\/* Symbol index.  *\/$/;"	m	struct:__anon32::__anon33	file:
r_type	relocs_64.c	/^		Elf64_Byte r_type;	\/* First relocation.  *\/$/;"	m	struct:__anon32::__anon33	file:
r_type2	relocs_64.c	/^		Elf64_Byte r_type2;	\/* Second relocation.  *\/$/;"	m	struct:__anon32::__anon33	file:
r_type3	relocs_64.c	/^		Elf64_Byte r_type3;	\/* Third relocation.  *\/$/;"	m	struct:__anon32::__anon33	file:
radio_freq	tuner-core.c	/^	unsigned int        radio_freq;$/;"	m	struct:tuner	file:
radio_if	tuner-types.h	/^	unsigned int radio_if:2;$/;"	m	struct:tuner_params
radio_range	tuner-core.c	/^static unsigned int radio_range[2] = { 65, 108 };$/;"	v	file:
range	driver.h	/^	struct pinctrl_gpio_range range;$/;"	m	struct:gpio_pin_range	typeref:struct:gpio_pin_range::pinctrl_gpio_range
rangehigh	videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_modulator
rangehigh	videodev2.h	/^	__u32			rangehigh;$/;"	m	struct:v4l2_tuner
rangehigh	videodev2.h	/^	__u32	rangehigh;$/;"	m	struct:v4l2_frequency_band
rangehigh	videodev2.h	/^	__u32	rangehigh;$/;"	m	struct:v4l2_hw_freq_seek
rangelow	videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_modulator
rangelow	videodev2.h	/^	__u32			rangelow;$/;"	m	struct:v4l2_tuner
rangelow	videodev2.h	/^	__u32	rangelow;$/;"	m	struct:v4l2_frequency_band
rangelow	videodev2.h	/^	__u32	rangelow;$/;"	m	struct:v4l2_hw_freq_seek
ranges	tuner-types.h	/^	struct tuner_range *ranges;$/;"	m	struct:tuner_params	typeref:struct:tuner_params::tuner_range
rate	clk-provider.h	/^	unsigned long rate;$/;"	m	struct:clk_rate_request
rate	v4l2-clk.c	/^	unsigned long rate;$/;"	m	struct:v4l2_clk_fixed	file:
rate_hw	clk-provider.h	/^	struct clk_hw	*rate_hw;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_hw
rate_ops	clk-provider.h	/^	const struct clk_ops	*rate_ops;$/;"	m	struct:clk_composite	typeref:struct:clk_composite::clk_ops
raw	media.h	/^		__u32 raw[16];$/;"	m	union:media_v2_interface::__anon25
raw	media.h	/^		__u8 raw[184];$/;"	m	union:media_entity_desc::__anon20
raw	rc-core.h	/^	struct ir_raw_event_ctrl	*raw;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::ir_raw_event_ctrl
raw	videodev2.h	/^		} raw;$/;"	m	union:v4l2_decoder_cmd::__anon61	typeref:struct:v4l2_decoder_cmd::__anon61::__anon64
raw	videodev2.h	/^		} raw;$/;"	m	union:v4l2_encoder_cmd::__anon59	typeref:struct:v4l2_encoder_cmd::__anon59::__anon60
raw_data	v4l2-compat-ioctl32.c	/^		__u8	raw_data[200];        \/* user-defined *\/$/;"	m	union:v4l2_format32::__anon37	file:
raw_data	videodev2.h	/^		__u32 raw_data[32];$/;"	m	union:v4l2_dv_timings_cap::__anon55
raw_data	videodev2.h	/^		__u8	raw_data[200];                   \/* user-defined *\/$/;"	m	union:v4l2_format::__anon67
raw_data	videodev2.h	/^		__u8	raw_data[200];  \/* user-defined *\/$/;"	m	union:v4l2_streamparm::__anon68
rc	cec.h	/^	struct rc_dev *rc;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::rc_dev
rc	rc-core.h	/^	struct rc_dev *rc;$/;"	m	struct:lirc_fh	typeref:struct:lirc_fh::rc_dev
rc_dev	rc-core.h	/^struct rc_dev {$/;"	s
rc_driver_type	rc-core.h	/^enum rc_driver_type {$/;"	g
rc_filter_type	rc-core.h	/^enum rc_filter_type {$/;"	g
rc_map	rc-core.h	/^	struct rc_map			rc_map;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::rc_map
rc_map	rc-map.h	/^struct rc_map {$/;"	s
rc_map_list	rc-map.h	/^struct rc_map_list {$/;"	s
rc_map_table	rc-map.h	/^struct rc_map_table {$/;"	s
rc_proto	rc-map.h	/^	enum rc_proto		rc_proto;$/;"	m	struct:rc_map	typeref:enum:rc_map::rc_proto
rc_scancode_filter	rc-core.h	/^struct rc_scancode_filter {$/;"	s
rcar_fcp_disable	rcar-fcp.h	/^static inline void rcar_fcp_disable(struct rcar_fcp_device *fcp) { }$/;"	f
rcar_fcp_enable	rcar-fcp.h	/^static inline int rcar_fcp_enable(struct rcar_fcp_device *fcp)$/;"	f
rcar_fcp_get	rcar-fcp.h	/^static inline struct rcar_fcp_device *rcar_fcp_get(const struct device_node *np)$/;"	f
rcar_fcp_get_device	rcar-fcp.h	/^static inline struct device *rcar_fcp_get_device(struct rcar_fcp_device *fcp)$/;"	f
rcar_fcp_put	rcar-fcp.h	/^static inline void rcar_fcp_put(struct rcar_fcp_device *fcp) { }$/;"	f
rcu_head	device.h	/^	struct rcu_head rcu_head;$/;"	m	struct:device_link	typeref:struct:device_link::rcu_head
rdy_queue	v4l2-mem2mem.h	/^	struct list_head	rdy_queue;$/;"	m	struct:v4l2_m2m_queue_ctx	typeref:struct:v4l2_m2m_queue_ctx::list_head
rdy_spinlock	v4l2-mem2mem.h	/^	spinlock_t		rdy_spinlock;$/;"	m	struct:v4l2_m2m_queue_ctx
read	cec-pin.h	/^	bool (*read)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
read	i2c-pxa.h	/^	int  (*read) (void *ptr);$/;"	m	struct:i2c_slave_client
read	media-devnode.h	/^	ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);$/;"	m	struct:media_file_operations
read	sysfs1.h	/^	ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *,$/;"	m	struct:bin_attribute
read	v4l2-dev.h	/^	ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);$/;"	m	struct:v4l2_file_operations
read_5v	cec-pin.h	/^	int  (*read_5v)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
read_attribute_mem	dvb_ca_en50221.h	/^	int (*read_attribute_mem)(struct dvb_ca_en50221 *ca,$/;"	m	struct:dvb_ca_en50221
read_ber	dvb_frontend.h	/^	int (*read_ber)(struct dvb_frontend* fe, u32* ber);$/;"	m	struct:dvb_frontend_ops
read_buf	videobuf-core.h	/^	struct videobuf_buffer     *read_buf;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::videobuf_buffer
read_byte	i2c-algo-pca.h	/^	int  (*read_byte)		(void *data, int reg);$/;"	m	struct:i2c_algo_pca_data
read_cam_control	dvb_ca_en50221.h	/^	int (*read_cam_control)(struct dvb_ca_en50221 *ca,$/;"	m	struct:dvb_ca_en50221
read_data	dvb_ca_en50221.h	/^	int (*read_data)(struct dvb_ca_en50221 *ca,$/;"	m	struct:dvb_ca_en50221
read_ehdr	relocs.c	/^static void read_ehdr(FILE *fp)$/;"	f	file:
read_hpd	cec-pin.h	/^	int  (*read_hpd)(struct cec_adapter *adap);$/;"	m	struct:cec_pin_ops
read_off	videobuf-core.h	/^	unsigned int               read_off;$/;"	m	struct:videobuf_queue
read_reg	driver.h	/^	unsigned long (*read_reg)(void __iomem *reg);$/;"	m	struct:gpio_chip
read_relocs	relocs.c	/^static void read_relocs(FILE *fp)$/;"	f	file:
read_shdrs	relocs.c	/^static void read_shdrs(FILE *fp)$/;"	f	file:
read_signal_strength	dvb_frontend.h	/^	int (*read_signal_strength)(struct dvb_frontend* fe, u16* strength);$/;"	m	struct:dvb_frontend_ops
read_snr	dvb_frontend.h	/^	int (*read_snr)(struct dvb_frontend* fe, u16* snr);$/;"	m	struct:dvb_frontend_ops
read_status	dvb_frontend.h	/^	int (*read_status)(struct dvb_frontend *fe, enum fe_status *status);$/;"	m	struct:dvb_frontend_ops
read_strtabs	relocs.c	/^static void read_strtabs(FILE *fp)$/;"	f	file:
read_symtabs	relocs.c	/^static void read_symtabs(FILE *fp)$/;"	f	file:
read_ucblocks	dvb_frontend.h	/^	int (*read_ucblocks)(struct dvb_frontend* fe, u32* ucblocks);$/;"	m	struct:dvb_frontend_ops
read_wrap	ffs-test.c	/^static ssize_t read_wrap(struct thread *t, void *buf, size_t nbytes)$/;"	f	file:
read_write	i2c-dev.c	/^	u8 read_write;$/;"	m	struct:i2c_smbus_ioctl_data32	file:
readbuffers	videodev2.h	/^	__u32              readbuffers;   \/*  # of buffers for read *\/$/;"	m	struct:v4l2_captureparm
readers	dvbdev.h	/^	int readers;$/;"	m	struct:dvb_device
reading	videobuf-core.h	/^	unsigned int               reading:1;$/;"	m	struct:videobuf_queue
rec_mode	rc-core.h	/^	u8				rec_mode;$/;"	m	struct:lirc_fh
recalc_accuracy	clk-provider.h	/^	unsigned long	(*recalc_accuracy)(struct clk_hw *hw,$/;"	m	struct:clk_ops
recalc_rate	clk-provider.h	/^	unsigned long	(*recalc_rate)(struct clk_hw *hw,$/;"	m	struct:clk_ops
received	cec.h	/^	int (*received)(struct cec_adapter *adap, struct cec_msg *msg);$/;"	m	struct:cec_adap_ops
reciprocal_scale	kernel.h	/^static inline u32 reciprocal_scale(u32 val, u32 ep_ro)$/;"	f
recording	dvb_demux.h	/^	int recording;$/;"	m	struct:dvb_demux
recover_bus	i2c.h	/^	int (*recover_bus)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info
ref	v4l2-device.h	/^	struct kref ref;$/;"	m	struct:v4l2_device	typeref:struct:v4l2_device::kref
refcnt	module.h	/^	atomic_t refcnt;$/;"	m	struct:module
refcount	dvb_frontend.h	/^	struct kref refcount;$/;"	m	struct:dvb_frontend	typeref:struct:dvb_frontend::kref
refcount	pm.h	/^	unsigned int refcount;$/;"	m	struct:pm_subsys_data
refcount	videobuf2-memops.h	/^	refcount_t		*refcount;$/;"	m	struct:vb2_vmarea_handler
refcount_error_report	kernel.h	/^static inline void refcount_error_report(struct pt_regs *regs, const char *err)$/;"	f
reg	clk-provider.h	/^	void __iomem	*reg;$/;"	m	struct:clk_divider
reg	clk-provider.h	/^	void __iomem	*reg;$/;"	m	struct:clk_fractional_divider
reg	clk-provider.h	/^	void __iomem	*reg;$/;"	m	struct:clk_gate
reg	clk-provider.h	/^	void __iomem	*reg;$/;"	m	struct:clk_multiplier
reg	clk-provider.h	/^	void __iomem	*reg;$/;"	m	struct:clk_mux
reg	videodev2.h	/^	__u64 reg;$/;"	m	struct:v4l2_dbg_register
reg_clr	driver.h	/^	void __iomem *reg_clr;$/;"	m	struct:gpio_chip
reg_dat	driver.h	/^	void __iomem *reg_dat;$/;"	m	struct:gpio_chip
reg_dir	driver.h	/^	void __iomem *reg_dir;$/;"	m	struct:gpio_chip
reg_list	imx219.c	/^	struct imx219_reg_list reg_list;$/;"	m	struct:imx219_mode	typeref:struct:imx219_mode::imx219_reg_list	file:
reg_list	imx258.c	/^	struct imx258_reg_list reg_list;$/;"	m	struct:imx258_link_freq_config	typeref:struct:imx258_link_freq_config::imx258_reg_list	file:
reg_list	imx258.c	/^	struct imx258_reg_list reg_list;$/;"	m	struct:imx258_mode	typeref:struct:imx258_mode::imx258_reg_list	file:
reg_set	driver.h	/^	void __iomem *reg_set;$/;"	m	struct:gpio_chip
reg_slave	i2c.h	/^	int (*reg_slave)(struct i2c_client *client);$/;"	m	struct:i2c_algorithm
regex_init	relocs.c	/^static void regex_init(void)$/;"	f	file:
regex_skip_reloc	relocs.c	/^static int regex_skip_reloc(const char *sym_name)$/;"	f	file:
regex_sym_kernel	relocs.c	/^static const char * const regex_sym_kernel = {$/;"	v	file:
region_mask	videodev2.h	/^	__u32 region_mask;$/;"	m	struct:v4l2_event_motion_det
register_module_notifier	module.h	/^static inline int register_module_notifier(struct notifier_block *nb)$/;"	f
registered	cec.h	/^	bool registered;$/;"	m	struct:cec_devnode
registered	rc-core.h	/^	bool				registered;$/;"	m	struct:rc_dev
registered	v4l2-subdev.h	/^	int (*registered)(struct v4l2_subdev *sd);$/;"	m	struct:v4l2_subdev_internal_ops
regs	imx219.c	/^	const struct imx219_reg *regs;$/;"	m	struct:imx219_reg_list	typeref:struct:imx219_reg_list::imx219_reg	file:
regs	imx258.c	/^	const struct imx258_reg *regs;$/;"	m	struct:imx258_reg_list	typeref:struct:imx258_reg_list::imx258_reg	file:
regulator_allow_bypass	consumer1.h	/^static inline int regulator_allow_bypass(struct regulator *regulator,$/;"	f
regulator_bulk_data	consumer1.h	/^struct regulator_bulk_data {$/;"	s
regulator_bulk_disable	consumer1.h	/^static inline int regulator_bulk_disable(int num_consumers,$/;"	f
regulator_bulk_enable	consumer1.h	/^static inline int regulator_bulk_enable(int num_consumers,$/;"	f
regulator_bulk_force_disable	consumer1.h	/^static inline int regulator_bulk_force_disable(int num_consumers,$/;"	f
regulator_bulk_free	consumer1.h	/^static inline void regulator_bulk_free(int num_consumers,$/;"	f
regulator_bulk_get	consumer1.h	/^static inline int regulator_bulk_get(struct device *dev,$/;"	f
regulator_bulk_register_supply_alias	consumer1.h	/^static inline int regulator_bulk_register_supply_alias(struct device *dev,$/;"	f
regulator_bulk_unregister_supply_alias	consumer1.h	/^static inline void regulator_bulk_unregister_supply_alias(struct device *dev,$/;"	f
regulator_count_voltages	consumer1.h	/^static inline int regulator_count_voltages(struct regulator *regulator)$/;"	f
regulator_disable	consumer1.h	/^static inline int regulator_disable(struct regulator *regulator)$/;"	f
regulator_disable_deferred	consumer1.h	/^static inline int regulator_disable_deferred(struct regulator *regulator,$/;"	f
regulator_enable	consumer1.h	/^static inline int regulator_enable(struct regulator *regulator)$/;"	f
regulator_force_disable	consumer1.h	/^static inline int regulator_force_disable(struct regulator *regulator)$/;"	f
regulator_get	consumer1.h	/^static inline struct regulator *__must_check regulator_get(struct device *dev,$/;"	f
regulator_get_current_limit	consumer1.h	/^static inline int regulator_get_current_limit(struct regulator *regulator)$/;"	f
regulator_get_drvdata	consumer1.h	/^static inline void *regulator_get_drvdata(struct regulator *regulator)$/;"	f
regulator_get_error_flags	consumer1.h	/^static inline int regulator_get_error_flags(struct regulator *regulator,$/;"	f
regulator_get_exclusive	consumer1.h	/^regulator_get_exclusive(struct device *dev, const char *id)$/;"	f
regulator_get_hardware_vsel_register	consumer1.h	/^static inline int regulator_get_hardware_vsel_register(struct regulator *regulator,$/;"	f
regulator_get_mode	consumer1.h	/^static inline unsigned int regulator_get_mode(struct regulator *regulator)$/;"	f
regulator_get_optional	consumer1.h	/^regulator_get_optional(struct device *dev, const char *id)$/;"	f
regulator_get_regmap	consumer1.h	/^static inline struct regmap *regulator_get_regmap(struct regulator *regulator)$/;"	f
regulator_get_voltage	consumer1.h	/^static inline int regulator_get_voltage(struct regulator *regulator)$/;"	f
regulator_is_enabled	consumer1.h	/^static inline int regulator_is_enabled(struct regulator *regulator)$/;"	f
regulator_is_supported_voltage	consumer1.h	/^static inline int regulator_is_supported_voltage(struct regulator *regulator,$/;"	f
regulator_is_supported_voltage_tol	consumer1.h	/^static inline int regulator_is_supported_voltage_tol(struct regulator *regulator,$/;"	f
regulator_list_hardware_vsel	consumer1.h	/^static inline int regulator_list_hardware_vsel(struct regulator *regulator,$/;"	f
regulator_list_voltage	consumer1.h	/^static inline int regulator_list_voltage(struct regulator *regulator, unsigned selector)$/;"	f
regulator_put	consumer1.h	/^static inline void regulator_put(struct regulator *regulator)$/;"	f
regulator_register_notifier	consumer1.h	/^static inline int regulator_register_notifier(struct regulator *regulator,$/;"	f
regulator_register_supply_alias	consumer1.h	/^static inline int regulator_register_supply_alias(struct device *dev,$/;"	f
regulator_set_current_limit	consumer1.h	/^static inline int regulator_set_current_limit(struct regulator *regulator,$/;"	f
regulator_set_drvdata	consumer1.h	/^static inline void regulator_set_drvdata(struct regulator *regulator,$/;"	f
regulator_set_load	consumer1.h	/^static inline int regulator_set_load(struct regulator *regulator, int load_uA)$/;"	f
regulator_set_mode	consumer1.h	/^static inline int regulator_set_mode(struct regulator *regulator,$/;"	f
regulator_set_voltage	consumer1.h	/^static inline int regulator_set_voltage(struct regulator *regulator,$/;"	f
regulator_set_voltage_time	consumer1.h	/^static inline int regulator_set_voltage_time(struct regulator *regulator,$/;"	f
regulator_set_voltage_tol	consumer1.h	/^static inline int regulator_set_voltage_tol(struct regulator *regulator,$/;"	f
regulator_set_voltage_triplet	consumer1.h	/^static inline int regulator_set_voltage_triplet(struct regulator *regulator,$/;"	f
regulator_unregister_notifier	consumer1.h	/^static inline int regulator_unregister_notifier(struct regulator *regulator,$/;"	f
regulator_unregister_supply_alias	consumer1.h	/^static inline void regulator_unregister_supply_alias(struct device *dev,$/;"	f
regulators	soc_camera.h	/^	struct regulator_bulk_data *regulators;$/;"	m	struct:soc_camera_link	typeref:struct:soc_camera_link::regulator_bulk_data
regulators	v4l2-subdev.h	/^	struct regulator_bulk_data *regulators;$/;"	m	struct:v4l2_subdev_platform_data	typeref:struct:v4l2_subdev_platform_data::regulator_bulk_data
rel_type	relocs.c	/^static const char *rel_type(unsigned type)$/;"	f	file:
relbit	mod_devicetable.h	/^	kernel_ulong_t relbit[INPUT_DEVICE_ID_REL_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
release	device.h	/^	void	(*release)(struct device *dev);$/;"	m	struct:device
release	device.h	/^	void (*release)(struct device *dev);$/;"	m	struct:device_type
release	devres.c	/^	dr_release_t			release;$/;"	m	struct:devres_node	file:
release	dvb_frontend.h	/^	void (*release)(struct dvb_frontend *fe);$/;"	m	struct:analog_demod_ops
release	dvb_frontend.h	/^	void (*release)(struct dvb_frontend *fe);$/;"	m	struct:dvb_tuner_ops
release	dvb_frontend.h	/^	void (*release)(struct dvb_frontend* fe);$/;"	m	struct:dvb_frontend_ops
release	media-devnode.h	/^	int (*release) (struct file *);$/;"	m	struct:media_file_operations
release	media-devnode.h	/^	void (*release)(struct media_devnode *devnode);$/;"	m	struct:media_devnode
release	v4l2-dev.h	/^	int (*release) (struct file *);$/;"	m	struct:v4l2_file_operations
release	v4l2-dev.h	/^	void (*release)(struct video_device *vdev);$/;"	m	struct:video_device
release	v4l2-device.h	/^	void (*release)(struct v4l2_device *v4l2_dev);$/;"	m	struct:v4l2_device
release_access	aspeed.h	/^	int (*release_access)(void *data);$/;"	m	struct:aspeed_gpio_copro_ops
release_filter	demux.h	/^	int (*release_filter)(struct dmx_section_feed *feed,$/;"	m	struct:dmx_section_feed
release_sec	dvb_frontend.h	/^	void (*release_sec)(struct dvb_frontend* fe);$/;"	m	struct:dvb_frontend_ops
release_section_feed	demux.h	/^	int (*release_section_feed)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
release_ts_feed	demux.h	/^	int (*release_ts_feed)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
relocs	relocs.c	/^static struct relocs relocs;$/;"	v	typeref:struct:relocs	file:
relocs	relocs.c	/^struct relocs {$/;"	s	file:
reltab	relocs.c	/^	Elf_Rel        *reltab;$/;"	m	struct:section	file:
remain	dvb_vb2.h	/^	int	remain;$/;"	m	struct:dvb_vb2_ctx
remote_node	v4l2-fwnode.h	/^	struct fwnode_handle *remote_node;$/;"	m	struct:v4l2_fwnode_link	typeref:struct:v4l2_fwnode_link::fwnode_handle
remote_port	v4l2-fwnode.h	/^	unsigned int remote_port;$/;"	m	struct:v4l2_fwnode_link
remove	device.h	/^	int (*remove) (struct device *dev);$/;"	m	struct:device_driver
remove	device.h	/^	int (*remove)(struct device *dev);$/;"	m	struct:bus_type
remove	i2c.h	/^	int (*remove)(struct i2c_client *);$/;"	m	struct:i2c_driver
remove	soc_camera.h	/^	void (*remove)(struct soc_camera_device *);$/;"	m	struct:soc_camera_host_ops
remove_bind_files	bus.c	/^static void remove_bind_files(struct device_driver *drv)$/;"	f	file:
remove_dev	device.h	/^	void (*remove_dev)	(struct device *, struct class_interface *);$/;"	m	struct:class_interface
remove_dev	device.h	/^	void (*remove_dev)(struct device *dev, struct subsys_interface *sif);$/;"	m	struct:subsys_interface
remove_files	group.c	/^static void remove_files(struct kernfs_node *parent,$/;"	f	file:
remove_frontend	demux.h	/^	int (*remove_frontend)(struct dmx_demux *demux,$/;"	m	struct:dmx_demux
remove_nodes	devres.c	/^static int remove_nodes(struct device *dev,$/;"	f	file:
remove_probe_files	bus.c	/^static void remove_probe_files(struct bus_type *bus)$/;"	f	file:
remove_relocs	relocs.c	/^static void remove_relocs(FILE *fp)$/;"	f	file:
rep	gpio_keys.h	/^	unsigned int rep:1;$/;"	m	struct:gpio_keys_platform_data
replace	v4l2-event.h	/^	void (*replace)(struct v4l2_event *old, const struct v4l2_event *new);$/;"	m	struct:v4l2_subscribed_event_ops
request	driver.h	/^	int			(*request)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
request	pm.h	/^	enum rpm_request	request;$/;"	m	struct:dev_pm_info	typeref:enum:dev_pm_info::rpm_request
request_access	aspeed.h	/^	int (*request_access)(void *data);$/;"	m	struct:aspeed_gpio_copro_ops
request_key	driver.h	/^	struct lock_class_key *request_key;$/;"	m	struct:gpio_irq_chip	typeref:struct:gpio_irq_chip::lock_class_key
request_pending	pm.h	/^	unsigned int		request_pending:1;$/;"	m	struct:dev_pm_info
reserved	media.h	/^	__u32 reserved[2];$/;"	m	struct:media_link_desc
reserved	media.h	/^	__u32 reserved[2];$/;"	m	struct:media_pad_desc
reserved	media.h	/^	__u32 reserved[31];$/;"	m	struct:media_device_info
reserved	media.h	/^	__u32 reserved[4];$/;"	m	struct:media_entity_desc
reserved	media.h	/^	__u32 reserved[4];$/;"	m	struct:media_links_enum
reserved	media.h	/^	__u32 reserved[4];$/;"	m	struct:media_v2_pad
reserved	media.h	/^	__u32 reserved[5];$/;"	m	struct:media_v2_entity
reserved	media.h	/^	__u32 reserved[6];$/;"	m	struct:media_v2_link
reserved	media.h	/^	__u32 reserved[9];$/;"	m	struct:media_v2_interface
reserved	v4l2-compat-ioctl32.c	/^	__u32				reserved[8];$/;"	m	struct:v4l2_event32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32			reserved;$/;"	m	struct:v4l2_buffer32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32			reserved[11];$/;"	m	struct:v4l2_plane32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32			reserved[7];$/;"	m	struct:v4l2_create_buffers32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32		     reserved[4];$/;"	m	struct:v4l2_standard32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32	     reserved[3];$/;"	m	struct:v4l2_input32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32 reserved[2];$/;"	m	struct:v4l2_ext_controls32	file:
reserved	v4l2-compat-ioctl32.c	/^	__u32 reserved[5];$/;"	m	struct:v4l2_edid32	file:
reserved	videodev2.h	/^		__u32	reserved[32];$/;"	m	union:v4l2_dv_timings::__anon54
reserved	videodev2.h	/^	__u16		reserved[6];$/;"	m	struct:v4l2_plane_pix_format
reserved	videodev2.h	/^	__u32				reserved[5];$/;"	m	struct:v4l2_event_subscription
reserved	videodev2.h	/^	__u32				reserved[8];$/;"	m	struct:v4l2_event
reserved	videodev2.h	/^	__u32			reserved;$/;"	m	struct:v4l2_buffer
reserved	videodev2.h	/^	__u32			reserved[11];$/;"	m	struct:v4l2_plane
reserved	videodev2.h	/^	__u32			reserved[1];$/;"	m	struct:v4l2_requestbuffers
reserved	videodev2.h	/^	__u32			reserved[3];$/;"	m	struct:v4l2_modulator
reserved	videodev2.h	/^	__u32			reserved[4];$/;"	m	struct:v4l2_tuner
reserved	videodev2.h	/^	__u32			reserved[7];$/;"	m	struct:v4l2_create_buffers
reserved	videodev2.h	/^	__u32		     reserved[2];$/;"	m	struct:v4l2_queryctrl
reserved	videodev2.h	/^	__u32		     reserved[32];$/;"	m	struct:v4l2_query_ext_ctrl
reserved	videodev2.h	/^	__u32		     reserved[4];$/;"	m	struct:v4l2_standard
reserved	videodev2.h	/^	__u32		    reserved[4];$/;"	m	struct:v4l2_fmtdesc
reserved	videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_captureparm
reserved	videodev2.h	/^	__u32		   reserved[4];$/;"	m	struct:v4l2_outputparm
reserved	videodev2.h	/^	__u32		reserved;$/;"	m	struct:v4l2_querymenu
reserved	videodev2.h	/^	__u32		reserved[11];$/;"	m	struct:v4l2_exportbuffer
reserved	videodev2.h	/^	__u32	     reserved[3];$/;"	m	struct:v4l2_input
reserved	videodev2.h	/^	__u32	     reserved[3];$/;"	m	struct:v4l2_output
reserved	videodev2.h	/^	__u32	reserved[16];$/;"	m	struct:v4l2_bt_timings_cap
reserved	videodev2.h	/^	__u32	reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmivalenum
reserved	videodev2.h	/^	__u32	reserved[2];		\/* must be zero *\/$/;"	m	struct:v4l2_vbi_format
reserved	videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audio
reserved	videodev2.h	/^	__u32	reserved[2];$/;"	m	struct:v4l2_audioout
reserved	videodev2.h	/^	__u32	reserved[3];$/;"	m	struct:v4l2_capability
reserved	videodev2.h	/^	__u32	reserved[5];$/;"	m	struct:v4l2_hw_freq_seek
reserved	videodev2.h	/^	__u32	reserved[8];$/;"	m	struct:v4l2_frequency
reserved	videodev2.h	/^	__u32	reserved[9];$/;"	m	struct:v4l2_frequency_band
reserved	videodev2.h	/^	__u32                   reserved[9];$/;"	m	struct:v4l2_selection
reserved	videodev2.h	/^	__u32   reserved;       \/* must be 0 *\/$/;"	m	struct:v4l2_sliced_vbi_data
reserved	videodev2.h	/^	__u32   reserved[2];			\/* Reserved space for future use *\/$/;"	m	struct:v4l2_frmsizeenum
reserved	videodev2.h	/^	__u32   reserved[2];            \/* must be zero *\/$/;"	m	struct:v4l2_sliced_vbi_format
reserved	videodev2.h	/^	__u32   reserved[3];    \/* must be 0 *\/$/;"	m	struct:v4l2_sliced_vbi_cap
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_dv_timings_cap
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_enc_idx_entry
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_enum_dv_timings
reserved	videodev2.h	/^	__u32 reserved[2];$/;"	m	struct:v4l2_ext_controls
reserved	videodev2.h	/^	__u32 reserved[32];$/;"	m	struct:v4l2_dbg_chip_info
reserved	videodev2.h	/^	__u32 reserved[4];$/;"	m	struct:v4l2_enc_idx
reserved	videodev2.h	/^	__u8				reserved[24];$/;"	m	struct:v4l2_sdr_format
reserved	videodev2.h	/^	__u8				reserved[7];$/;"	m	struct:v4l2_pix_format_mplane
reserved	videodev2.h	/^	__u8	reserved[46];$/;"	m	struct:v4l2_bt_timings
reserved1	media.h	/^	__u32 reserved1;$/;"	m	struct:media_v2_topology
reserved2	media.h	/^	__u32 reserved2;$/;"	m	struct:media_v2_topology
reserved2	v4l2-compat-ioctl32.c	/^	__u32			reserved2;$/;"	m	struct:v4l2_buffer32	file:
reserved2	v4l2-compat-ioctl32.c	/^	__u32 reserved2[1];$/;"	m	struct:v4l2_ext_control32	file:
reserved2	videodev2.h	/^	__u32			reserved2;$/;"	m	struct:v4l2_buffer
reserved2	videodev2.h	/^	__u32 reserved2[1];$/;"	m	struct:v4l2_ext_control
reserved3	media.h	/^	__u32 reserved3;$/;"	m	struct:media_v2_topology
reserved4	media.h	/^	__u32 reserved4;$/;"	m	struct:media_v2_topology
reset	rc-core.h	/^	unsigned                reset:1;$/;"	m	struct:ir_raw_event
reset	soc_camera.h	/^	int (*reset)(struct device *);$/;"	m	struct:soc_camera_link
reset	soc_camera.h	/^	int (*reset)(struct device *);$/;"	m	struct:soc_camera_subdev_desc
reset	v4l2-subdev.h	/^	int (*reset)(struct v4l2_subdev *sd, u32 val);$/;"	m	struct:v4l2_subdev_core_ops
reset_chip	i2c-algo-pca.h	/^	void (*reset_chip)		(void *data);$/;"	m	struct:i2c_algo_pca_data
resolution	v4l2-subdev.h	/^	u32 resolution;$/;"	m	struct:v4l2_subdev_ir_parameters
resources	i2c.h	/^	const struct resource *resources;$/;"	m	struct:i2c_board_info	typeref:struct:i2c_board_info::resource
restore	pm.h	/^	int (*restore)(struct device *dev);$/;"	m	struct:dev_pm_ops
restore_early	pm.h	/^	int (*restore_early)(struct device *dev);$/;"	m	struct:dev_pm_ops
restore_noirq	pm.h	/^	int (*restore_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops
resume	device.h	/^	int (*resume) (struct device *dev);$/;"	m	struct:device_driver
resume	device.h	/^	int (*resume)(struct device *dev);$/;"	m	struct:bus_type
resume	dvb_frontend.h	/^	int (*resume)(struct dvb_frontend *fe);$/;"	m	struct:dvb_tuner_ops
resume	pm.h	/^	int (*resume)(struct device *dev);$/;"	m	struct:dev_pm_ops
resume_early	pm.h	/^	int (*resume_early)(struct device *dev);$/;"	m	struct:dev_pm_ops
resume_noirq	pm.h	/^	int (*resume_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops
ret	consumer1.h	/^	int ret;$/;"	m	struct:regulator_bulk_data
retpoline_module_ok	module.h	/^static inline bool retpoline_module_ok(bool has_retpoline)$/;"	f
retries	i2c.h	/^	int retries;$/;"	m	struct:i2c_adapter
rev	mod_devicetable.h	/^	__u8	rev;$/;"	m	struct:bcma_device_id
rev_id	mod_devicetable.h	/^	__u32 rev_id;$/;"	m	struct:hda_device_id
rev_str	tveeprom.h	/^	char rev_str[5];$/;"	m	struct:tveeprom
reverse	media-entity.h	/^	struct media_link *reverse;$/;"	m	struct:media_link	typeref:struct:media_link::media_link
revision	media.h	/^	__u32 revision;$/;"	m	struct:media_entity_desc
revision	mod_devicetable.h	/^	__u8	revision;$/;"	m	struct:ssb_device_id
revision	tveeprom.h	/^	u32 revision;$/;"	m	struct:tveeprom
rio_device_id	mod_devicetable.h	/^struct rio_device_id {$/;"	s
ro_after_init_size	module.h	/^	unsigned int ro_after_init_size;$/;"	m	struct:module_layout
ro_size	module.h	/^	unsigned int ro_size;$/;"	m	struct:module_layout
role	soc_camera.h	/^	enum soc_camera_subdev_role role;$/;"	m	struct:soc_camera_async_subdev	typeref:enum:soc_camera_async_subdev::soc_camera_subdev_role
rolloff	dvb_frontend.h	/^	enum fe_rolloff		rolloff;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_rolloff
root_device_register	device.h	1247;"	d
rootfs_initcall	module.h	120;"	d
round_down	kernel.h	105;"	d
round_rate	clk-provider.h	/^	long		(*round_rate)(struct clk_hw *hw, unsigned long rate,$/;"	m	struct:clk_ops
round_up	kernel.h	96;"	d
rounddown	kernel.h	154;"	d
roundup	kernel.h	140;"	d
rpm_active	device.h	/^	bool rpm_active;$/;"	m	struct:device_link
rpm_request	pm.h	/^enum rpm_request {$/;"	g
rpm_status	pm.h	/^enum rpm_status {$/;"	g
rpmsg_device_id	mod_devicetable.h	/^struct rpmsg_device_id {$/;"	s
runtime_auto	pm.h	/^	unsigned int		runtime_auto:1;$/;"	m	struct:dev_pm_info
runtime_error	pm.h	/^	int			runtime_error;$/;"	m	struct:dev_pm_info
runtime_idle	pm.h	/^	int (*runtime_idle)(struct device *dev);$/;"	m	struct:dev_pm_ops
runtime_resume	pm.h	/^	int (*runtime_resume)(struct device *dev);$/;"	m	struct:dev_pm_ops
runtime_status	pm.h	/^	enum rpm_status		runtime_status;$/;"	m	struct:dev_pm_info	typeref:enum:dev_pm_info::rpm_status
runtime_suspend	pm.h	/^	int (*runtime_suspend)(struct device *dev);$/;"	m	struct:dev_pm_ops
rx_g_parameters	v4l2-subdev.h	/^	int (*rx_g_parameters)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_ir_ops
rx_read	v4l2-subdev.h	/^	int (*rx_read)(struct v4l2_subdev *sd, u8 *buf, size_t count,$/;"	m	struct:v4l2_subdev_ir_ops
rx_resolution	rc-core.h	/^	u32				rx_resolution;$/;"	m	struct:rc_dev
rx_s_parameters	v4l2-subdev.h	/^	int (*rx_s_parameters)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_ir_ops
rxsubchans	videodev2.h	/^	__u32			rxsubchans;$/;"	m	struct:v4l2_tuner
s_carrier_report	rc-core.h	/^	int				(*s_carrier_report) (struct rc_dev *dev, int enable);$/;"	m	struct:rc_dev
s_clock_freq	v4l2-subdev.h	/^	int (*s_clock_freq)(struct v4l2_subdev *sd, u32 freq);$/;"	m	struct:v4l2_subdev_audio_ops
s_config	v4l2-subdev.h	/^	int (*s_config)(struct v4l2_subdev *sd, const struct v4l2_priv_tun_config *config);$/;"	m	struct:v4l2_subdev_tuner_ops
s_crystal_freq	v4l2-subdev.h	/^	int (*s_crystal_freq)(struct v4l2_subdev *sd, u32 freq, u32 flags);$/;"	m	struct:v4l2_subdev_video_ops
s_ctrl	v4l2-ctrls.h	/^	int (*s_ctrl)(struct v4l2_ctrl *ctrl);$/;"	m	struct:v4l2_ctrl_ops
s_dv_timings	v4l2-subdev.h	/^	int (*s_dv_timings)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
s_filter	rc-core.h	/^	int				(*s_filter)(struct rc_dev *dev,$/;"	m	struct:rc_dev
s_frame_interval	v4l2-subdev.h	/^	int (*s_frame_interval)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
s_frequency	v4l2-subdev.h	/^	int (*s_frequency)(struct v4l2_subdev *sd, const struct v4l2_frequency *freq);$/;"	m	struct:v4l2_subdev_tuner_ops
s_gpio	v4l2-subdev.h	/^	int (*s_gpio)(struct v4l2_subdev *sd, u32 val);$/;"	m	struct:v4l2_subdev_core_ops
s_i2s_clock_freq	v4l2-subdev.h	/^	int (*s_i2s_clock_freq)(struct v4l2_subdev *sd, u32 freq);$/;"	m	struct:v4l2_subdev_audio_ops
s_idle	rc-core.h	/^	void				(*s_idle)(struct rc_dev *dev, bool enable);$/;"	m	struct:rc_dev
s_io_pin_config	v4l2-subdev.h	/^	int (*s_io_pin_config)(struct v4l2_subdev *sd, size_t n,$/;"	m	struct:v4l2_subdev_core_ops
s_learning_mode	rc-core.h	/^	int				(*s_learning_mode)(struct rc_dev *dev, int enable);$/;"	m	struct:rc_dev
s_mbus_config	v4l2-subdev.h	/^	int (*s_mbus_config)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_video_ops
s_modulator	v4l2-subdev.h	/^	int (*s_modulator)(struct v4l2_subdev *sd, const struct v4l2_modulator *vm);$/;"	m	struct:v4l2_subdev_tuner_ops
s_node	device.h	/^	struct list_head s_node;$/;"	m	struct:device_link	typeref:struct:device_link::list_head
s_power	v4l2-subdev.h	/^	int (*s_power)(struct v4l2_subdev *sd, int on);$/;"	m	struct:v4l2_subdev_core_ops
s_radio	v4l2-subdev.h	/^	int (*s_radio)(struct v4l2_subdev *sd);$/;"	m	struct:v4l2_subdev_tuner_ops
s_raw_fmt	v4l2-subdev.h	/^	int (*s_raw_fmt)(struct v4l2_subdev *sd, struct v4l2_vbi_format *fmt);$/;"	m	struct:v4l2_subdev_vbi_ops
s_register	v4l2-subdev.h	/^	int (*s_register)(struct v4l2_subdev *sd, const struct v4l2_dbg_register *reg);$/;"	m	struct:v4l2_subdev_core_ops
s_routing	v4l2-subdev.h	/^	int (*s_routing)(struct v4l2_subdev *sd, u32 input, u32 output, u32 config);$/;"	m	struct:v4l2_subdev_audio_ops
s_routing	v4l2-subdev.h	/^	int (*s_routing)(struct v4l2_subdev *sd, u32 input, u32 output, u32 config);$/;"	m	struct:v4l2_subdev_video_ops
s_rx_buffer	v4l2-subdev.h	/^	int (*s_rx_buffer)(struct v4l2_subdev *sd, void *buf,$/;"	m	struct:v4l2_subdev_video_ops
s_rx_carrier_range	rc-core.h	/^	int				(*s_rx_carrier_range)(struct rc_dev *dev, u32 min, u32 max);$/;"	m	struct:rc_dev
s_sliced_fmt	v4l2-subdev.h	/^	int (*s_sliced_fmt)(struct v4l2_subdev *sd, struct v4l2_sliced_vbi_format *fmt);$/;"	m	struct:v4l2_subdev_vbi_ops
s_std	v4l2-subdev.h	/^	int (*s_std)(struct v4l2_subdev *sd, v4l2_std_id norm);$/;"	m	struct:v4l2_subdev_video_ops
s_std_output	v4l2-subdev.h	/^	int (*s_std_output)(struct v4l2_subdev *sd, v4l2_std_id std);$/;"	m	struct:v4l2_subdev_video_ops
s_stream	v4l2-subdev.h	/^	int (*s_stream)(struct v4l2_subdev *sd, int enable);$/;"	m	struct:v4l2_subdev_audio_ops
s_stream	v4l2-subdev.h	/^	int (*s_stream)(struct v4l2_subdev *sd, int enable);$/;"	m	struct:v4l2_subdev_video_ops
s_timeout	rc-core.h	/^	int				(*s_timeout)(struct rc_dev *dev,$/;"	m	struct:rc_dev
s_tuner	v4l2-subdev.h	/^	int (*s_tuner)(struct v4l2_subdev *sd, const struct v4l2_tuner *vt);$/;"	m	struct:v4l2_subdev_tuner_ops
s_tx_carrier	rc-core.h	/^	int				(*s_tx_carrier)(struct rc_dev *dev, u32 carrier);$/;"	m	struct:rc_dev
s_tx_duty_cycle	rc-core.h	/^	int				(*s_tx_duty_cycle)(struct rc_dev *dev, u32 duty_cycle);$/;"	m	struct:rc_dev
s_tx_mask	rc-core.h	/^	int				(*s_tx_mask)(struct rc_dev *dev, u32 mask);$/;"	m	struct:rc_dev
s_type_addr	v4l2-subdev.h	/^	int (*s_type_addr)(struct v4l2_subdev *sd, struct tuner_setup *type);$/;"	m	struct:v4l2_subdev_tuner_ops
s_vbi_data	v4l2-subdev.h	/^	int (*s_vbi_data)(struct v4l2_subdev *sd, const struct v4l2_sliced_vbi_data *vbi_data);$/;"	m	struct:v4l2_subdev_vbi_ops
s_wakeup_filter	rc-core.h	/^	int				(*s_wakeup_filter)(struct rc_dev *dev,$/;"	m	struct:rc_dev
sample_format	videodev2.h	/^	__u32	sample_format;		\/* V4L2_PIX_FMT_* *\/$/;"	m	struct:v4l2_vbi_format
samples_per_line	videodev2.h	/^	__u32	samples_per_line;$/;"	m	struct:v4l2_vbi_format
sampling_rate	videodev2.h	/^	__u32	sampling_rate;		\/* in 1 Hz *\/$/;"	m	struct:v4l2_vbi_format
sasc	soc_camera.h	/^	struct soc_camera_async_client *sasc;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::soc_camera_async_client
scan	rc-map.h	/^	struct rc_map_table	*scan;$/;"	m	struct:rc_map	typeref:struct:rc_map::rc_map_table
scancode	rc-map.h	/^	u32	scancode;$/;"	m	struct:rc_map_table
scancode_filter	rc-core.h	/^	struct rc_scancode_filter	scancode_filter;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::rc_scancode_filter
scancode_mask	rc-core.h	/^	u32				scancode_mask;$/;"	m	struct:rc_dev
scancode_wakeup_filter	rc-core.h	/^	struct rc_scancode_filter	scancode_wakeup_filter;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::rc_scancode_filter
sched_annotate_sleep	kernel.h	263;"	d
sched_annotate_sleep	kernel.h	270;"	d
scl_fall_ns	i2c.h	/^	u32 scl_fall_ns;$/;"	m	struct:i2c_timings
scl_gpiod	i2c.h	/^	struct gpio_desc *scl_gpiod;$/;"	m	struct:i2c_bus_recovery_info	typeref:struct:i2c_bus_recovery_info::gpio_desc
scl_int_delay_ns	i2c.h	/^	u32 scl_int_delay_ns;$/;"	m	struct:i2c_timings
scl_rise_ns	i2c.h	/^	u32 scl_rise_ns;$/;"	m	struct:i2c_timings
scrambling_sequence_index	dvb_frontend.h	/^	u32			scrambling_sequence_index;$/;"	m	struct:dtv_frontend_properties
sd	imx219.c	/^	struct v4l2_subdev sd;$/;"	m	struct:imx219	typeref:struct:imx219::v4l2_subdev	file:
sd	imx258.c	/^	struct v4l2_subdev sd;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_subdev	file:
sd	tuner-core.c	/^	struct v4l2_subdev  sd;$/;"	m	struct:tuner	typeref:struct:tuner::v4l2_subdev	file:
sd	v4l2-async.h	/^	struct v4l2_subdev *sd;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::v4l2_subdev
sd	v4l2-flash-led-class.h	/^	struct v4l2_subdev sd;$/;"	m	struct:v4l2_flash	typeref:struct:v4l2_flash::v4l2_subdev
sd_pdata	soc_camera.h	/^	struct v4l2_subdev_platform_data sd_pdata;$/;"	m	struct:soc_camera_subdev_desc	typeref:struct:soc_camera_subdev_desc::v4l2_subdev_platform_data
sda_fall_ns	i2c.h	/^	u32 sda_fall_ns;$/;"	m	struct:i2c_timings
sda_gpiod	i2c.h	/^	struct gpio_desc *sda_gpiod;$/;"	m	struct:i2c_bus_recovery_info	typeref:struct:i2c_bus_recovery_info::gpio_desc
sda_hold_ns	i2c.h	/^	u32 sda_hold_ns;$/;"	m	struct:i2c_timings
sdesc	soc_camera.h	/^	struct soc_camera_desc *sdesc;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::soc_camera_desc
sdio_device_id	mod_devicetable.h	/^struct sdio_device_id {$/;"	s
sdr	v4l2-compat-ioctl32.c	/^		struct v4l2_sdr_format	sdr;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_sdr_format	file:
sdr	videodev2.h	/^		struct v4l2_sdr_format		sdr;     \/* V4L2_BUF_TYPE_SDR_CAPTURE *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_sdr_format
sdw_device_id	mod_devicetable.h	/^struct sdw_device_id {$/;"	s
search	dvb_frontend.h	/^	enum dvbfe_search (*search)(struct dvb_frontend *fe);$/;"	m	struct:dvb_frontend_ops	typeref:enum:dvb_frontend_ops::search
search_handle	i2c-core-acpi.c	/^	acpi_handle search_handle;$/;"	m	struct:i2c_acpi_lookup	file:
sec	dmxdev.h	/^		struct dmx_sct_filter_params sec;$/;"	m	union:dmxdev_filter::__anon4	typeref:struct:dmxdev_filter::__anon4::dmx_sct_filter_params
sec	dmxdev.h	/^		struct dmx_section_feed *sec;$/;"	m	union:dmxdev_filter::__anon3	typeref:struct:dmxdev_filter::__anon3::dmx_section_feed
sec	dmxdev.h	/^		struct dmx_section_filter *sec;$/;"	m	union:dmxdev_filter::__anon2	typeref:struct:dmxdev_filter::__anon2::dmx_section_filter
sec	dvb_demux.h	/^		dmx_section_cb sec;$/;"	m	union:dvb_demux_feed::__anon6
sec	dvb_demux.h	/^		struct dmx_section_feed sec;$/;"	m	union:dvb_demux_feed::__anon5	typeref:struct:dvb_demux_feed::__anon5::dmx_section_feed
sec_lookup	relocs.c	/^static struct section *sec_lookup(const char *secname)$/;"	f	file:
sec_name	relocs.c	/^static const char *sec_name(unsigned shndx)$/;"	f	file:
sec_priv	dvb_frontend.h	/^	void *sec_priv;$/;"	m	struct:dvb_frontend
secam	tuner-core.c	/^static char secam[] = "--";$/;"	v	file:
secbuf	demux.h	/^	u8 *secbuf;$/;"	m	struct:dmx_section_feed
secbuf_base	demux.h	/^	u8 secbuf_base[DMX_MAX_SECFEED_SIZE];$/;"	m	struct:dmx_section_feed
secbufp	demux.h	/^	u16 secbufp, seclen, tsfeedp;$/;"	m	struct:dmx_section_feed
sechdrs	module.h	/^	Elf_Shdr *sechdrs;$/;"	m	struct:klp_modinfo
secheader	dmxdev.h	/^	u8 secheader[3];$/;"	m	struct:dmxdev_filter
seclen	demux.h	/^	u16 secbufp, seclen, tsfeedp;$/;"	m	struct:dmx_section_feed
secondary	fwnode.h	/^	struct fwnode_handle *secondary;$/;"	m	struct:fwnode_handle	typeref:struct:fwnode_handle::fwnode_handle
seconds	videodev2.h	/^	__u8	seconds;$/;"	m	struct:v4l2_timecode
secs	relocs.c	/^static struct section *secs;$/;"	v	typeref:struct:section	file:
secstrings	module.h	/^	char *secstrings;$/;"	m	struct:klp_modinfo
sect_attrs	module.h	/^	struct module_sect_attrs *sect_attrs;$/;"	m	struct:module	typeref:struct:module::module_sect_attrs
section	relocs.c	/^struct section {$/;"	s	file:
sectone	dvb_frontend.h	/^	enum fe_sec_tone_mode	sectone;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_sec_tone_mode
sector_div	kernel.h	209;"	d
sector_div	kernel.h	211;"	d
security_initcall	module.h	127;"	d
seek_upward	videodev2.h	/^	__u32	seek_upward;$/;"	m	struct:v4l2_hw_freq_seek
segment_boundary_mask	device.h	/^	unsigned long segment_boundary_mask;$/;"	m	struct:device_dma_parameters
segment_count	dvb_frontend.h	/^	    u8			segment_count;$/;"	m	struct:dtv_frontend_properties::__anon7
select	i2c-mux.h	/^	int (*select)(struct i2c_mux_core *, u32 chan_id);$/;"	m	struct:i2c_mux_core
send_event	v4l2-ctrls.c	/^static void send_event(struct v4l2_fh *fh, struct v4l2_ctrl *ctrl, u32 changes)$/;"	f	file:
send_mode	rc-core.h	/^	u8				send_mode;$/;"	m	struct:lirc_fh
send_timeout_reports	rc-core.h	/^	bool				send_timeout_reports;$/;"	m	struct:lirc_fh
sense	soc_camera.h	/^	struct soc_camera_sense *sense;	\/* See comment in struct definition *\/$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::soc_camera_sense
sensor	v4l2-subdev.h	/^	const struct v4l2_subdev_sensor_ops	*sensor;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_sensor_ops
sequence	cec.h	/^	u32 sequence;$/;"	m	struct:cec_adapter
sequence	v4l2-compat-ioctl32.c	/^	__u32				sequence;$/;"	m	struct:v4l2_event32	file:
sequence	v4l2-compat-ioctl32.c	/^	__u32			sequence;$/;"	m	struct:v4l2_buffer32	file:
sequence	v4l2-fh.h	/^	u32			sequence;$/;"	m	struct:v4l2_fh
sequence	videobuf2-v4l2.h	/^	__u32			sequence;$/;"	m	struct:vb2_v4l2_buffer
sequence	videodev2.h	/^	__u32				sequence;$/;"	m	struct:v4l2_event
sequence	videodev2.h	/^	__u32			sequence;$/;"	m	struct:v4l2_buffer
serial	media-device.h	/^	char serial[40];$/;"	m	struct:media_device
serial	media.h	/^	char serial[40];$/;"	m	struct:media_device_info
serial_number	tveeprom.h	/^	u32 serial_number;$/;"	m	struct:tveeprom
serio_device_id	mod_devicetable.h	/^struct serio_device_id {$/;"	s
service_lines	videodev2.h	/^	__u16   service_lines[2][24];$/;"	m	struct:v4l2_sliced_vbi_cap
service_lines	videodev2.h	/^	__u16   service_lines[2][24];$/;"	m	struct:v4l2_sliced_vbi_format
service_set	videodev2.h	/^	__u16   service_set;$/;"	m	struct:v4l2_sliced_vbi_cap
service_set	videodev2.h	/^	__u16   service_set;$/;"	m	struct:v4l2_sliced_vbi_format
set	demux.h	/^	int (*set)(struct dmx_section_feed *feed,$/;"	m	struct:dmx_section_feed
set	demux.h	/^	int (*set)(struct dmx_ts_feed *feed,$/;"	m	struct:dmx_ts_feed
set	driver.h	/^	void			(*set)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
set_all_modules_text_ro	module.h	/^static inline void set_all_modules_text_ro(void) { }$/;"	f
set_all_modules_text_rw	module.h	/^static inline void set_all_modules_text_rw(void) { }$/;"	f
set_analog_params	dvb_frontend.h	/^	int (*set_analog_params)(struct dvb_frontend *fe, struct analog_parameters *p);$/;"	m	struct:dvb_tuner_ops
set_arch_panic_timeout	kernel.h	/^static inline void set_arch_panic_timeout(int timeout, int arch_default_timeout)$/;"	f
set_bandwidth	dvb_frontend.h	/^	int (*set_bandwidth)(struct dvb_frontend *fe, u32 bandwidth);$/;"	m	struct:dvb_tuner_ops
set_bus_param	soc_camera.h	/^	int (*set_bus_param)(struct soc_camera_device *);$/;"	m	struct:soc_camera_host_ops
set_bus_param	soc_camera.h	/^	int (*set_bus_param)(struct soc_camera_link *, unsigned long flags);$/;"	m	struct:soc_camera_link
set_bus_param	soc_camera.h	/^	int (*set_bus_param)(struct soc_camera_subdev_desc *, unsigned long flags);$/;"	m	struct:soc_camera_subdev_desc
set_config	driver.h	/^	int			(*set_config)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
set_config	dvb_frontend.h	/^	int (*set_config)(struct dvb_frontend *fe, void *priv_cfg);$/;"	m	struct:analog_demod_ops
set_config	dvb_frontend.h	/^	int (*set_config)(struct dvb_frontend *fe, void *priv_cfg);$/;"	m	struct:dvb_tuner_ops
set_ctrl	v4l2-ctrls.c	/^static int set_ctrl(struct v4l2_fh *fh, struct v4l2_ctrl *ctrl, u32 ch_flags)$/;"	f	file:
set_ctrl_lock	v4l2-ctrls.c	/^static int set_ctrl_lock(struct v4l2_fh *fh, struct v4l2_ctrl *ctrl,$/;"	f	file:
set_dev_node	device.h	/^static inline void set_dev_node(struct device *dev, int node)$/;"	f
set_duty_cycle	clk-provider.h	/^	int		(*set_duty_cycle)(struct clk_hw *hw,$/;"	m	struct:clk_ops
set_edid	v4l2-subdev.h	/^	int (*set_edid)(struct v4l2_subdev *sd, struct v4l2_edid *edid);$/;"	m	struct:v4l2_subdev_pad_ops
set_fmt	soc_camera.h	/^	int (*set_fmt)(struct soc_camera_device *, struct v4l2_format *);$/;"	m	struct:soc_camera_host_ops
set_fmt	v4l2-subdev.h	/^	int (*set_fmt)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
set_frame_desc	v4l2-subdev.h	/^	int (*set_frame_desc)(struct v4l2_subdev *sd, unsigned int pad,$/;"	m	struct:v4l2_subdev_pad_ops
set_freq	tuner-core.c	/^static void set_freq(struct tuner *t, unsigned int freq)$/;"	f	file:
set_frequency	dvb_frontend.h	/^	int (*set_frequency)(struct dvb_frontend *fe, u32 frequency);$/;"	m	struct:dvb_tuner_ops
set_frontend	dvb_frontend.h	/^	int (*set_frontend)(struct dvb_frontend *fe);$/;"	m	struct:dvb_frontend_ops
set_latency_tolerance	pm.h	/^	void (*set_latency_tolerance)(struct device *, s32);$/;"	m	struct:dev_pm_info
set_liveselection	soc_camera.h	/^	int (*set_liveselection)(struct soc_camera_device *, struct v4l2_selection *);$/;"	m	struct:soc_camera_host_ops
set_lna	dvb_frontend.h	/^	int (*set_lna)(struct dvb_frontend *);$/;"	m	struct:dvb_frontend_ops
set_mode	tuner-core.c	/^static int set_mode(struct tuner *t, enum v4l2_tuner_type mode)$/;"	f	file:
set_multiple	driver.h	/^	void			(*set_multiple)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
set_node_dbginfo	devres.c	/^static void set_node_dbginfo(struct devres_node *node, const char *name,$/;"	f	file:
set_node_dbginfo	devres.c	63;"	d	file:
set_params	dvb_frontend.h	/^	int (*set_params)(struct dvb_frontend *fe);$/;"	m	struct:dvb_tuner_ops
set_params	dvb_frontend.h	/^	void (*set_params)(struct dvb_frontend *fe,$/;"	m	struct:analog_demod_ops
set_parent	clk-provider.h	/^	int		(*set_parent)(struct clk_hw *hw, u8 index);$/;"	m	struct:clk_ops
set_parm	soc_camera.h	/^	int (*set_parm)(struct soc_camera_device *, struct v4l2_streamparm *);$/;"	m	struct:soc_camera_host_ops
set_phase	clk-provider.h	/^	int		(*set_phase)(struct clk_hw *hw, int degrees);$/;"	m	struct:clk_ops
set_radio_freq	tuner-core.c	/^static void set_radio_freq(struct i2c_client *c, unsigned int freq)$/;"	f	file:
set_rate	clk-provider.h	/^	int		(*set_rate)(struct clk_hw *hw, unsigned long rate,$/;"	m	struct:clk_ops
set_rate	v4l2-clk.h	/^	int		(*set_rate)(struct v4l2_clk *clk, unsigned long);$/;"	m	struct:v4l2_clk_ops
set_rate_and_parent	clk-provider.h	/^	int		(*set_rate_and_parent)(struct clk_hw *hw,$/;"	m	struct:clk_ops
set_scl	i2c.h	/^	void (*set_scl)(struct i2c_adapter *adap, int val);$/;"	m	struct:i2c_bus_recovery_info
set_scl_gpio_value	i2c-core-base.c	/^static void set_scl_gpio_value(struct i2c_adapter *adap, int val)$/;"	f	file:
set_sda	i2c.h	/^	void (*set_sda)(struct i2c_adapter *adap, int val);$/;"	m	struct:i2c_bus_recovery_info
set_sda_gpio_value	i2c-core-base.c	/^static void set_sda_gpio_value(struct i2c_adapter *adap, int val)$/;"	f	file:
set_selection	soc_camera.h	/^	int (*set_selection)(struct soc_camera_device *, struct v4l2_selection *);$/;"	m	struct:soc_camera_host_ops
set_selection	v4l2-subdev.h	/^	int (*set_selection)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_pad_ops
set_tone	dvb_frontend.h	/^	int (*set_tone)(struct dvb_frontend *fe, enum fe_sec_tone_mode tone);$/;"	m	struct:dvb_frontend_ops
set_tv_freq	tuner-core.c	/^static void set_tv_freq(struct i2c_client *c, unsigned int freq)$/;"	f	file:
set_type	tuner-core.c	/^static void set_type(struct i2c_client *c, unsigned int type,$/;"	f	file:
set_voltage	dvb_frontend.h	/^	int (*set_voltage)(struct dvb_frontend *fe,$/;"	m	struct:dvb_frontend_ops
setpcf	i2c-algo-pcf.h	/^	void (*setpcf) (void *data, int ctl, int val);$/;"	m	struct:i2c_algo_pcf_data
setscl	i2c-algo-bit.h	/^	void (*setscl) (void *data, int state);$/;"	m	struct:i2c_algo_bit_data
setsda	i2c-algo-bit.h	/^	void (*setsda) (void *data, int state);$/;"	m	struct:i2c_algo_bit_data
setup	module.h	/^	void (*setup)(struct module *, const char *);$/;"	m	struct:module_attribute
sev	v4l2-event.h	/^	struct v4l2_subscribed_event *sev;$/;"	m	struct:v4l2_kevent	typeref:struct:v4l2_kevent::v4l2_subscribed_event
sev_pos	v4l2-event.c	/^static unsigned sev_pos(const struct v4l2_subscribed_event *sev, unsigned idx)$/;"	f	file:
sg_ops	videobuf-dma-sg.c	/^static struct videobuf_qtype_ops sg_ops = {$/;"	v	typeref:struct:videobuf_qtype_ops	file:
sglen	testusb.c	/^	unsigned		sglen;$/;"	m	struct:usbtest_param	file:
sglen	videobuf-dma-sg.h	/^	int                 sglen;$/;"	m	struct:videobuf_dmabuf
sglist	videobuf-dma-sg.h	/^	struct scatterlist  *sglist;$/;"	m	struct:videobuf_dmabuf	typeref:struct:videobuf_dmabuf::scatterlist
shdr	relocs.c	/^	Elf_Shdr       shdr;$/;"	m	struct:section	file:
shdr_offset	relocs.c	/^	long           shdr_offset;$/;"	m	struct:section	file:
shift	clk-provider.h	/^	u8		shift;$/;"	m	struct:clk_divider
shift	clk-provider.h	/^	u8		shift;$/;"	m	struct:clk_multiplier
shift	clk-provider.h	/^	u8		shift;$/;"	m	struct:clk_mux
should_wakeup	pm.h	/^	unsigned int		should_wakeup:1;$/;"	m	struct:dev_pm_info
show	device.h	/^	ssize_t (*show)(struct bus_type *bus, char *buf);$/;"	m	struct:bus_attribute
show	device.h	/^	ssize_t (*show)(struct class *class, struct class_attribute *attr,$/;"	m	struct:class_attribute
show	device.h	/^	ssize_t (*show)(struct device *dev, struct device_attribute *attr,$/;"	m	struct:device_attribute
show	device.h	/^	ssize_t (*show)(struct device_driver *driver, char *buf);$/;"	m	struct:driver_attribute
show	module.h	/^	ssize_t (*show)(struct module_attribute *, struct module_kobject *,$/;"	m	struct:module_attribute
show	sysfs1.h	/^	ssize_t	(*show)(struct kobject *, struct attribute *, char *);$/;"	m	struct:sysfs_ops
show_drivers_autoprobe	bus.c	/^static ssize_t show_drivers_autoprobe(struct bus_type *bus, char *buf)$/;"	f	file:
show_i2c	tuner-core.c	/^static unsigned int show_i2c;$/;"	v	file:
show_modalias	i2c-core-base.c	/^show_modalias(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
show_name	i2c-core-base.c	/^show_name(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
shutdown	device.h	/^	void (*shutdown) (struct device *dev);$/;"	m	struct:device_driver
shutdown	device.h	/^	void (*shutdown)(struct device *dev);$/;"	m	struct:bus_type
shutdown	i2c.h	/^	void (*shutdown)(struct i2c_client *);$/;"	m	struct:i2c_driver
shutdown	v4l2-subdev.h	/^	bool shutdown;$/;"	m	struct:v4l2_subdev_ir_parameters
shutdown_pre	device.h	/^	int (*shutdown_pre)(struct device *dev);$/;"	m	class:__anon1
sig	mod_devicetable.h	/^	char          sig[EISA_SIG_LEN];$/;"	m	struct:eisa_device_id
sig_ok	module.h	/^	bool sig_ok;$/;"	m	struct:module
signal	videodev2.h	/^	__s32			signal;$/;"	m	struct:v4l2_tuner
sink	ffs-test.c	/^		struct usb_endpoint_descriptor_no_audio sink;$/;"	m	struct:__anon8::__anon10	typeref:struct:__anon8::__anon10::usb_endpoint_descriptor_no_audio	file:
sink	ffs-test.c	/^		struct usb_endpoint_descriptor_no_audio sink;$/;"	m	struct:__anon8::__anon9	typeref:struct:__anon8::__anon9::usb_endpoint_descriptor_no_audio	file:
sink	media-entity.h	/^		struct media_pad *sink;$/;"	m	union:media_link::__anon17	typeref:struct:media_link::__anon17::media_pad
sink	media.h	/^	struct media_pad_desc sink;$/;"	m	struct:media_link_desc	typeref:struct:media_link_desc::media_pad_desc
sink	v4l2-mem2mem.c	/^	struct media_entity	sink;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_entity	file:
sink_comp	ffs-test.c	/^		struct usb_ss_ep_comp_descriptor sink_comp;$/;"	m	struct:__anon8::__anon10	typeref:struct:__anon8::__anon10::usb_ss_ep_comp_descriptor	file:
sink_id	media.h	/^	__u32 sink_id;$/;"	m	struct:media_v2_link
sink_pad	v4l2-mem2mem.c	/^	struct media_pad	sink_pad;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_pad	file:
size	devres.c	/^	size_t				size;$/;"	m	struct:devres_node	file:
size	dvb_ringbuffer.h	/^	ssize_t           size;$/;"	m	struct:dvb_ringbuffer
size	i2c-dev.c	/^	u32 size;$/;"	m	struct:i2c_smbus_ioctl_data32	file:
size	module.h	/^	unsigned int size;$/;"	m	struct:module_layout
size	rc-map.h	/^	unsigned int		size;$/;"	m	struct:rc_map
size	relocs.c	/^	unsigned long	size;$/;"	m	struct:relocs	file:
size	sysfs1.h	/^	size_t			size;$/;"	m	struct:bin_attribute
size	v4l2-compat-ioctl32.c	/^	__u32 size;$/;"	m	struct:v4l2_ext_control32	file:
size	videobuf-core.h	/^	unsigned long           size;$/;"	m	struct:videobuf_buffer
size	videobuf-dma-contig.c	/^	unsigned long size;$/;"	m	struct:videobuf_dma_contig_memory	file:
size	videobuf-dma-sg.h	/^	size_t		    size;$/;"	m	struct:videobuf_dmabuf
size	videodev2.h	/^	__u32 size;	\/* register size in bytes *\/$/;"	m	struct:v4l2_dbg_register
size	videodev2.h	/^	__u32 size;$/;"	m	struct:v4l2_ext_control
sizeimage	soc_camera.h	/^	u32 sizeimage;$/;"	m	struct:soc_camera_device
sizeimage	v4l2-compat-ioctl32.c	/^		__u32		sizeimage;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
sizeimage	videodev2.h	/^		__u32		sizeimage;$/;"	m	struct:v4l2_framebuffer::__anon53
sizeimage	videodev2.h	/^	__u32			sizeimage;$/;"	m	struct:v4l2_pix_format
sizeimage	videodev2.h	/^	__u32		sizeimage;$/;"	m	struct:v4l2_plane_pix_format
skey	sysfs1.h	/^	struct lock_class_key	skey;$/;"	m	struct:attribute	typeref:struct:attribute::lock_class_key
slave_cb	i2c.h	/^	i2c_slave_cb_t slave_cb;	\/* callback for slave mode	*\/$/;"	m	struct:i2c_client
sleep	dvb_frontend.h	/^	int (*sleep)(struct dvb_frontend *fe);$/;"	m	struct:dvb_tuner_ops
sleep	dvb_frontend.h	/^	int (*sleep)(struct dvb_frontend* fe);$/;"	m	struct:dvb_frontend_ops
sleepdata	tuner-types.h	/^	u8 *sleepdata;$/;"	m	struct:tunertype
sliced	v4l2-compat-ioctl32.c	/^		struct v4l2_sliced_vbi_format	sliced;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_sliced_vbi_format	file:
sliced	videodev2.h	/^		struct v4l2_sliced_vbi_format	sliced;  \/* V4L2_BUF_TYPE_SLICED_VBI_CAPTURE *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_sliced_vbi_format
slim_device_id	mod_devicetable.h	/^struct slim_device_id {$/;"	s
slock	dvb_vb2.h	/^	spinlock_t		slock;$/;"	m	struct:dvb_vb2_ctx
slot	mod_devicetable.h	/^	unsigned char slot:7;$/;"	m	struct:dmi_strmatch
slot_reset	dvb_ca_en50221.h	/^	int (*slot_reset)(struct dvb_ca_en50221 *ca, int slot);$/;"	m	struct:dvb_ca_en50221
slot_shutdown	dvb_ca_en50221.h	/^	int (*slot_shutdown)(struct dvb_ca_en50221 *ca, int slot);$/;"	m	struct:dvb_ca_en50221
slot_ts_enable	dvb_ca_en50221.h	/^	int (*slot_ts_enable)(struct dvb_ca_en50221 *ca, int slot);$/;"	m	struct:dvb_ca_en50221
smbalert_driver	i2c-smbus.c	/^module_i2c_driver(smbalert_driver);$/;"	v
smbalert_driver	i2c-smbus.c	/^static struct i2c_driver smbalert_driver = {$/;"	v	typeref:struct:i2c_driver	file:
smbalert_ids	i2c-smbus.c	/^static const struct i2c_device_id smbalert_ids[] = {$/;"	v	typeref:struct:i2c_device_id	file:
smbalert_probe	i2c-smbus.c	/^static int smbalert_probe(struct i2c_client *ara,$/;"	f	file:
smbalert_remove	i2c-smbus.c	/^static int smbalert_remove(struct i2c_client *ara)$/;"	f	file:
smbalert_work	i2c-smbus.c	/^static void smbalert_work(struct work_struct *work)$/;"	f	file:
smbus_alert	i2c-smbus.c	/^static irqreturn_t smbus_alert(int irq, void *d)$/;"	f	file:
smbus_do_alert	i2c-smbus.c	/^static int smbus_do_alert(struct device *dev, void *addrp)$/;"	f	file:
smbus_xfer	i2c.h	/^	int (*smbus_xfer) (struct i2c_adapter *adap, u16 addr,$/;"	m	struct:i2c_algorithm
sndbit	mod_devicetable.h	/^	kernel_ulong_t sndbit[INPUT_DEVICE_ID_SND_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
soc_camera_async_subdev	soc_camera.h	/^struct soc_camera_async_subdev {$/;"	s
soc_camera_desc	soc_camera.h	/^struct soc_camera_desc {$/;"	s
soc_camera_device	soc_camera.h	/^struct soc_camera_device {$/;"	s
soc_camera_format_xlate	soc_camera.h	/^struct soc_camera_format_xlate {$/;"	s
soc_camera_from_vb2q	soc_camera.h	/^static inline struct soc_camera_device *soc_camera_from_vb2q(const struct vb2_queue *vq)$/;"	f
soc_camera_grp_id	soc_camera.h	/^static inline u32 soc_camera_grp_id(const struct soc_camera_device *icd)$/;"	f
soc_camera_host	soc_camera.h	/^struct soc_camera_host {$/;"	s
soc_camera_host_desc	soc_camera.h	/^struct soc_camera_host_desc {$/;"	s
soc_camera_host_ops	soc_camera.h	/^struct soc_camera_host_ops {$/;"	s
soc_camera_i2c_to_desc	soc_camera.h	/^static inline struct soc_camera_subdev_desc *soc_camera_i2c_to_desc(const struct i2c_client *client)$/;"	f
soc_camera_i2c_to_vdev	soc_camera.h	/^static inline struct video_device *soc_camera_i2c_to_vdev(const struct i2c_client *client)$/;"	f
soc_camera_limit_side	soc_camera.h	/^static inline void soc_camera_limit_side(int *start, int *length,$/;"	f
soc_camera_link	soc_camera.h	/^struct soc_camera_link {$/;"	s
soc_camera_sense	soc_camera.h	/^struct soc_camera_sense {$/;"	s
soc_camera_set_power	soc_camera.h	/^static inline int soc_camera_set_power(struct device *dev,$/;"	f
soc_camera_subdev_desc	soc_camera.h	/^struct soc_camera_subdev_desc {$/;"	s
soc_camera_subdev_role	soc_camera.h	/^enum soc_camera_subdev_role {$/;"	g
soc_camera_to_subdev	soc_camera.h	/^static inline struct v4l2_subdev *soc_camera_to_subdev($/;"	f
soc_camera_vdev_to_subdev	soc_camera.h	/^static inline struct v4l2_subdev *soc_camera_vdev_to_subdev(struct video_device *vdev)$/;"	f
source	demux.h	/^	enum dmx_frontend_source source;$/;"	m	struct:dmx_frontend	typeref:enum:dmx_frontend::dmx_frontend_source
source	ffs-test.c	/^		struct usb_endpoint_descriptor_no_audio source;$/;"	m	struct:__anon8::__anon10	typeref:struct:__anon8::__anon10::usb_endpoint_descriptor_no_audio	file:
source	ffs-test.c	/^		struct usb_endpoint_descriptor_no_audio source;$/;"	m	struct:__anon8::__anon9	typeref:struct:__anon8::__anon9::usb_endpoint_descriptor_no_audio	file:
source	media-entity.h	/^		struct media_pad *source;$/;"	m	union:media_link::__anon16	typeref:struct:media_link::__anon16::media_pad
source	media.h	/^	struct media_pad_desc source;$/;"	m	struct:media_link_desc	typeref:struct:media_link_desc::media_pad_desc
source	module.h	/^	struct module *source, *target;$/;"	m	struct:module_use	typeref:struct:module_use::module
source	v4l2-mem2mem.c	/^	struct media_entity	*source;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_entity	file:
source	vsp1.h	/^	enum vsp1_du_crc_source source;$/;"	m	struct:vsp1_du_crc_config	typeref:enum:vsp1_du_crc_config::vsp1_du_crc_source
source_comp	ffs-test.c	/^		struct usb_ss_ep_comp_descriptor source_comp;$/;"	m	struct:__anon8::__anon10	typeref:struct:__anon8::__anon10::usb_ss_ep_comp_descriptor	file:
source_id	media.h	/^	__u32 source_id;$/;"	m	struct:media_v2_link
source_list	module.h	/^	struct list_head source_list;$/;"	m	struct:module	typeref:struct:module::list_head
source_list	module.h	/^	struct list_head source_list;$/;"	m	struct:module_use	typeref:struct:module_use::list_head
source_pad	v4l2-mem2mem.c	/^	struct media_pad	source_pad;$/;"	m	struct:v4l2_m2m_dev	typeref:struct:v4l2_m2m_dev::media_pad	file:
source_priv	media-device.h	/^	void *source_priv;$/;"	m	struct:media_device
spacing	videodev2.h	/^	__u32	spacing;$/;"	m	struct:v4l2_hw_freq_seek
specifier_id	mod_devicetable.h	/^	__u32 specifier_id;$/;"	m	struct:ieee1394_device_id
speed	i2c-core-acpi.c	/^	u32 speed;$/;"	m	struct:i2c_acpi_lookup	file:
speed	testusb.c	/^	enum usb_device_speed	speed;$/;"	m	struct:testdev	typeref:enum:testdev::usb_device_speed	file:
speed	testusb.c	/^static char *speed (enum usb_device_speed s)$/;"	f	file:
speed	videodev2.h	/^			__s32 speed;$/;"	m	struct:v4l2_decoder_cmd::__anon61::__anon63
speed_last_time	dvb_demux.h	/^	ktime_t speed_last_time; \/* for TS speed check *\/$/;"	m	struct:dvb_demux
speed_pkts_cnt	dvb_demux.h	/^	uint32_t speed_pkts_cnt; \/* for TS speed check *\/$/;"	m	struct:dvb_demux
spi_device_id	mod_devicetable.h	/^struct spi_device_id {$/;"	s
spmi_device_id	mod_devicetable.h	/^struct spmi_device_id {$/;"	s
src	vsp1.h	/^	struct v4l2_rect src;$/;"	m	struct:vsp1_du_atomic_config	typeref:struct:vsp1_du_atomic_config::v4l2_rect
src_change	videodev2.h	/^		struct v4l2_event_src_change	src_change;$/;"	m	union:v4l2_event::__anon70	typeref:struct:v4l2_event::__anon70::v4l2_event_src_change
srcversion	module.h	/^	const char *srcversion;$/;"	m	struct:module
ss_count	ffs-test.c	/^	__le32 ss_count;$/;"	m	struct:__anon8	file:
ss_descs	ffs-test.c	/^	} ss_descs;$/;"	m	struct:__anon8	typeref:struct:__anon8::__anon10	file:
ssb_device_id	mod_devicetable.h	/^struct ssb_device_id {$/;"	s
ssleep	delay.h	/^static inline void ssleep(unsigned int seconds)$/;"	f
stack	media-entity.h	/^	} stack[MEDIA_ENTITY_ENUM_MAX_DEPTH];$/;"	m	struct:media_graph	typeref:struct:media_graph::__anon15
standards	v4l2-ioctl.c	/^static const struct std_descr standards[] = {$/;"	v	typeref:struct:std_descr	file:
standards	videodev2.h	/^	__u32	standards;$/;"	m	struct:v4l2_bt_timings
standards	videodev2.h	/^	__u32	standards;$/;"	m	struct:v4l2_bt_timings_cap
standby	dvb_frontend.h	/^	void (*standby)(struct dvb_frontend *fe);$/;"	m	struct:analog_demod_ops
standby	tuner-core.c	/^	bool                standby;	\/* Standby mode *\/$/;"	m	struct:tuner	file:
standby	v4l2-subdev.h	/^	int (*standby)(struct v4l2_subdev *sd);$/;"	m	struct:v4l2_subdev_tuner_ops
start	module.h	/^	const struct kernel_symbol *start, *stop;$/;"	m	struct:symsearch	typeref:struct:symsearch::kernel_symbol
start	videodev2.h	/^		} start;$/;"	m	union:v4l2_decoder_cmd::__anon61	typeref:struct:v4l2_decoder_cmd::__anon61::__anon63
start	videodev2.h	/^	__s32	start[2];$/;"	m	struct:v4l2_vbi_format
start_block	v4l2-compat-ioctl32.c	/^	__u32 start_block;$/;"	m	struct:v4l2_edid32	file:
start_feed	dvb_demux.h	/^	int (*start_feed)(struct dvb_demux_feed *feed);$/;"	m	struct:dvb_demux
start_filtering	demux.h	/^	int (*start_filtering)(struct dmx_section_feed *feed);$/;"	m	struct:dmx_section_feed
start_filtering	demux.h	/^	int (*start_filtering)(struct dmx_ts_feed *feed);$/;"	m	struct:dmx_ts_feed
start_streaming	videobuf2-core.h	/^	int (*start_streaming)(struct vb2_queue *q, unsigned int count);$/;"	m	struct:vb2_ops
start_streaming_called	videobuf2-core.h	/^	unsigned int			start_streaming_called:1;$/;"	m	struct:vb2_queue
start_thread	ffs-test.c	/^static void start_thread(struct thread *t)$/;"	f	file:
start_thread_helper	ffs-test.c	/^static void *start_thread_helper(void *arg)$/;"	f	file:
state	dmxdev.h	/^	enum dmxdev_state state;$/;"	m	struct:dmxdev_filter	typeref:enum:dmxdev_filter::dmxdev_state
state	dvb_demux.h	/^	enum dvb_dmx_state state;$/;"	m	struct:dvb_demux_feed	typeref:enum:dvb_demux_feed::dvb_dmx_state
state	dvb_demux.h	/^	enum dvb_dmx_state state;$/;"	m	struct:dvb_demux_filter	typeref:enum:dvb_demux_filter::dvb_dmx_state
state	dvb_net.h	/^	int state[DVB_NET_DEVICES_MAX];$/;"	m	struct:dvb_net
state	dvb_vb2.h	/^	int	state;$/;"	m	struct:dvb_vb2_ctx
state	module.h	/^	enum module_state state;$/;"	m	struct:module	typeref:enum:module::module_state
state	videobuf-core.h	/^	enum videobuf_state     state;$/;"	m	struct:videobuf_buffer	typeref:enum:videobuf_buffer::videobuf_state
state	videobuf2-core.h	/^	enum vb2_buffer_state	state;$/;"	m	struct:vb2_buffer	typeref:enum:vb2_buffer::vb2_buffer_state
state_neither_active_nor_queued	videobuf-core.c	/^static int state_neither_active_nor_queued(struct videobuf_queue *q,$/;"	f	file:
status	cec-pin.h	/^	void (*status)(struct cec_adapter *adap, struct seq_file *file);$/;"	m	struct:cec_pin_ops
status	device.h	/^	enum device_link_state status;$/;"	m	struct:device_link	typeref:enum:device_link::device_link_state
status	device.h	/^	enum dl_dev_state status;$/;"	m	struct:dev_links_info	typeref:enum:dev_links_info::dl_dev_state
status	ffs-test.c	/^	ssize_t status;$/;"	m	struct:thread	file:
status	i2c-core-acpi.c	/^	u8	status;$/;"	m	struct:gsb_buffer	file:
status	v4l2-compat-ioctl32.c	/^	__u32	     status;$/;"	m	struct:v4l2_input32	file:
status	videodev2.h	/^	__u32	     status;$/;"	m	struct:v4l2_input
status_file	cec.h	/^	struct dentry *status_file;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::dentry
std	dvb_frontend.h	/^	u64 std;$/;"	m	struct:analog_parameters
std	tuner-core.c	/^	v4l2_std_id         std;$/;"	m	struct:tuner	file:
std	v4l2-compat-ioctl32.c	/^	compat_u64   std;$/;"	m	struct:v4l2_input32	file:
std	v4l2-ioctl.c	/^	v4l2_std_id std;$/;"	m	struct:std_descr	file:
std	videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_input
std	videodev2.h	/^	v4l2_std_id  std;$/;"	m	struct:v4l2_output
std_descr	v4l2-ioctl.c	/^struct std_descr {$/;"	s	file:
std_equal	v4l2-ctrls.c	/^static bool std_equal(const struct v4l2_ctrl *ctrl, u32 idx,$/;"	f	file:
std_init	v4l2-ctrls.c	/^static void std_init(const struct v4l2_ctrl *ctrl, u32 idx,$/;"	f	file:
std_log	v4l2-ctrls.c	/^static void std_log(const struct v4l2_ctrl *ctrl)$/;"	f	file:
std_type_ops	v4l2-ctrls.c	/^static const struct v4l2_ctrl_type_ops std_type_ops = {$/;"	v	typeref:struct:v4l2_ctrl_type_ops	file:
std_validate	v4l2-ctrls.c	/^static int std_validate(const struct v4l2_ctrl *ctrl, u32 idx,$/;"	f	file:
step	v4l2-ctrls.h	/^		u64 step;$/;"	m	union:v4l2_ctrl::__anon43
step	v4l2-ctrls.h	/^	u64 step;$/;"	m	struct:v4l2_ctrl_config
step	videodev2.h	/^	__s32		     step;$/;"	m	struct:v4l2_queryctrl
step	videodev2.h	/^	__s32 step;$/;"	m	struct:v4l2_event_ctrl
step	videodev2.h	/^	__u64		     step;$/;"	m	struct:v4l2_query_ext_ctrl
step	videodev2.h	/^	struct v4l2_fract	step;		\/* Frame interval step size [s] *\/$/;"	m	struct:v4l2_frmival_stepwise	typeref:struct:v4l2_frmival_stepwise::v4l2_fract
step_height	videodev2.h	/^	__u32			step_height;	\/* Frame height step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
step_size	dvb_frontend.h	/^	int step_size;$/;"	m	struct:dvb_frontend_tune_settings
step_width	videodev2.h	/^	__u32			step_width;	\/* Frame width step size [pixel] *\/$/;"	m	struct:v4l2_frmsize_stepwise
stepsize	tuner-types.h	/^	u32 stepsize;$/;"	m	struct:tunertype
stepwise	videodev2.h	/^		struct v4l2_frmival_stepwise	stepwise;$/;"	m	union:v4l2_frmivalenum::__anon50	typeref:struct:v4l2_frmivalenum::__anon50::v4l2_frmival_stepwise
stepwise	videodev2.h	/^		struct v4l2_frmsize_stepwise	stepwise;$/;"	m	union:v4l2_frmsizeenum::__anon49	typeref:struct:v4l2_frmsizeenum::__anon49::v4l2_frmsize_stepwise
stop	module.h	/^	const struct kernel_symbol *start, *stop;$/;"	m	struct:symsearch	typeref:struct:symsearch::
stop	videodev2.h	/^		} stop;$/;"	m	union:v4l2_decoder_cmd::__anon61	typeref:struct:v4l2_decoder_cmd::__anon61::__anon62
stop_feed	dvb_demux.h	/^	int (*stop_feed)(struct dvb_demux_feed *feed);$/;"	m	struct:dvb_demux
stop_filtering	demux.h	/^	int (*stop_filtering)(struct dmx_section_feed *feed);$/;"	m	struct:dmx_section_feed
stop_filtering	demux.h	/^	int (*stop_filtering)(struct dmx_ts_feed *feed);$/;"	m	struct:dmx_ts_feed
stop_streaming	videobuf2-core.h	/^	void (*stop_streaming)(struct vb2_queue *q);$/;"	m	struct:vb2_ops
store	device.h	/^	ssize_t (*store)(struct bus_type *bus, const char *buf, size_t count);$/;"	m	struct:bus_attribute
store	device.h	/^	ssize_t (*store)(struct class *class, struct class_attribute *attr,$/;"	m	struct:class_attribute
store	device.h	/^	ssize_t (*store)(struct device *dev, struct device_attribute *attr,$/;"	m	struct:device_attribute
store	device.h	/^	ssize_t (*store)(struct device_driver *driver, const char *buf,$/;"	m	struct:driver_attribute
store	module.h	/^	ssize_t (*store)(struct module_attribute *, struct module_kobject *,$/;"	m	struct:module_attribute
store	sysfs1.h	/^	ssize_t	(*store)(struct kobject *, struct attribute *, const char *, size_t);$/;"	m	struct:sysfs_ops
store_drivers_autoprobe	bus.c	/^static ssize_t store_drivers_autoprobe(struct bus_type *bus,$/;"	f	file:
store_drivers_probe	bus.c	/^static ssize_t store_drivers_probe(struct bus_type *bus,$/;"	f	file:
str	device.h	/^	char *str;$/;"	m	struct:class_attribute_string
str	property.h	/^			const char * const *str;$/;"	m	union:property_entry::__anon28::__anon29
str	property.h	/^			const char *str;$/;"	m	union:property_entry::__anon28::__anon30
str1	ffs-test.c	/^		const char str1[sizeof STR_INTERFACE_];$/;"	m	struct:__anon11::__anon12	file:
stream	videobuf-core.h	/^	struct list_head           stream;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::list_head
stream	videobuf-core.h	/^	struct list_head        stream;  \/* QBUF\/DQBUF list *\/$/;"	m	struct:videobuf_buffer	typeref:struct:videobuf_buffer::list_head
stream_count	media-entity.h	/^	int stream_count;$/;"	m	struct:media_entity
stream_id	dvb_frontend.h	/^	u32			stream_id;$/;"	m	struct:dtv_frontend_properties
stream_next_buffer	videobuf-core.c	/^static int stream_next_buffer(struct videobuf_queue *q,$/;"	f	file:
stream_next_buffer_check_queue	videobuf-core.c	/^static int stream_next_buffer_check_queue(struct videobuf_queue *q, int noblock)$/;"	f	file:
streamer	soc_camera.h	/^	struct file *streamer;		\/* stream owner *\/$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::file
streaming	imx219.c	/^	bool streaming;$/;"	m	struct:imx219	file:
streaming	imx258.c	/^	bool streaming;$/;"	m	struct:imx258	file:
streaming	videobuf-core.h	/^	unsigned int               streaming:1;$/;"	m	struct:videobuf_queue
streaming	videobuf2-core.h	/^	unsigned int			streaming:1;$/;"	m	struct:vb2_queue
streaming_count	media-entity.h	/^	int streaming_count;$/;"	m	struct:media_pipeline
strength	dvb_frontend.h	/^	struct dtv_fe_stats	strength;$/;"	m	struct:dtv_frontend_properties	typeref:struct:dtv_frontend_properties::dtv_fe_stats
strength	v4l2-subdev.h	/^	u8 strength;$/;"	m	struct:v4l2_subdev_io_pin_config
string	v4l2-compat-ioctl32.c	/^		compat_caddr_t string; \/* actually char * *\/$/;"	m	union:v4l2_ext_control32::__anon41	file:
string	videodev2.h	/^		char __user *string;$/;"	m	union:v4l2_ext_control::__anon56
strings	ffs-test.c	/^} __attribute__((packed)) strings = {$/;"	v	typeref:struct:__anon11	file:
strobe	v4l2-fwnode.h	/^	bool strobe;$/;"	m	struct:v4l2_fwnode_bus_mipi_csi1
strtab	module.h	/^	char *strtab;$/;"	m	struct:mod_kallsyms
strtab	relocs.c	/^	char           *strtab;$/;"	m	struct:section	file:
subdev_close	v4l2-subdev.c	/^static int subdev_close(struct file *file)$/;"	f	file:
subdev_compat_ioctl32	v4l2-subdev.c	/^static long subdev_compat_ioctl32(struct file *file, unsigned int cmd,$/;"	f	file:
subdev_desc	soc_camera.h	/^	struct soc_camera_subdev_desc subdev_desc;$/;"	m	struct:soc_camera_desc	typeref:struct:soc_camera_desc::soc_camera_subdev_desc
subdev_do_ioctl	v4l2-subdev.c	/^static long subdev_do_ioctl(struct file *file, unsigned int cmd, void *arg)$/;"	f	file:
subdev_do_ioctl_lock	v4l2-subdev.c	/^static long subdev_do_ioctl_lock(struct file *file, unsigned int cmd, void *arg)$/;"	f	file:
subdev_fh_free	v4l2-subdev.c	/^static void subdev_fh_free(struct v4l2_subdev_fh *fh)$/;"	f	file:
subdev_fh_init	v4l2-subdev.c	/^static int subdev_fh_init(struct v4l2_subdev_fh *fh, struct v4l2_subdev *sd)$/;"	f	file:
subdev_ioctl	v4l2-subdev.c	/^static long subdev_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
subdev_notifier	v4l2-subdev.h	/^	struct v4l2_async_notifier *subdev_notifier;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_async_notifier
subdev_open	v4l2-subdev.c	/^static int subdev_open(struct file *file)$/;"	f	file:
subdev_poll	v4l2-subdev.c	/^static __poll_t subdev_poll(struct file *file, poll_table *wait)$/;"	f	file:
subdevice	media.h	/^			__u32 subdevice;$/;"	m	struct:media_entity_desc::__anon20::__anon22
subdevice	mod_devicetable.h	/^	__u32 subvendor, subdevice;	\/* Subsystem ID's or PCI_ANY_ID *\/$/;"	m	struct:pci_device_id
subdevs	v4l2-async.h	/^	struct v4l2_async_subdev **subdevs;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::v4l2_async_subdev
subdevs	v4l2-device.h	/^	struct list_head subdevs;$/;"	m	struct:v4l2_device	typeref:struct:v4l2_device::list_head
subscribe_event	v4l2-subdev.h	/^	int (*subscribe_event)(struct v4l2_subdev *sd, struct v4l2_fh *fh,$/;"	m	struct:v4l2_subdev_core_ops
subscribe_lock	v4l2-fh.h	/^	struct mutex		subscribe_lock;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::mutex
subscribed	v4l2-fh.h	/^	struct list_head	subscribed;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::list_head
substr	mod_devicetable.h	/^	char substr[79];$/;"	m	struct:dmi_strmatch
subsys	base.h	/^	struct kset subsys;$/;"	m	struct:subsys_private	typeref:struct:subsys_private::kset
subsys	device.h	/^	struct bus_type *subsys;$/;"	m	struct:subsys_interface	typeref:struct:subsys_interface::bus_type
subsys_data	pm.h	/^	struct pm_subsys_data	*subsys_data;  \/* Owned by the subsystem. *\/$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::pm_subsys_data
subsys_dev_iter	device.h	/^struct subsys_dev_iter {$/;"	s
subsys_dev_iter_exit	bus.c	/^EXPORT_SYMBOL_GPL(subsys_dev_iter_exit);$/;"	v
subsys_dev_iter_exit	bus.c	/^void subsys_dev_iter_exit(struct subsys_dev_iter *iter)$/;"	f
subsys_dev_iter_init	bus.c	/^EXPORT_SYMBOL_GPL(subsys_dev_iter_init);$/;"	v
subsys_dev_iter_init	bus.c	/^void subsys_dev_iter_init(struct subsys_dev_iter *iter, struct bus_type *subsys,$/;"	f
subsys_dev_iter_next	bus.c	/^EXPORT_SYMBOL_GPL(subsys_dev_iter_next);$/;"	v
subsys_dev_iter_next	bus.c	/^struct device *subsys_dev_iter_next(struct subsys_dev_iter *iter)$/;"	f
subsys_find_device_by_id	bus.c	/^EXPORT_SYMBOL_GPL(subsys_find_device_by_id);$/;"	v
subsys_find_device_by_id	bus.c	/^struct device *subsys_find_device_by_id(struct bus_type *subsys, unsigned int id,$/;"	f
subsys_initcall	module.h	116;"	d
subsys_initcall_sync	module.h	117;"	d
subsys_interface	device.h	/^struct subsys_interface {$/;"	s
subsys_interface_register	bus.c	/^EXPORT_SYMBOL_GPL(subsys_interface_register);$/;"	v
subsys_interface_register	bus.c	/^int subsys_interface_register(struct subsys_interface *sif)$/;"	f
subsys_interface_unregister	bus.c	/^EXPORT_SYMBOL_GPL(subsys_interface_unregister);$/;"	v
subsys_interface_unregister	bus.c	/^void subsys_interface_unregister(struct subsys_interface *sif)$/;"	f
subsys_private	base.h	/^struct subsys_private {$/;"	s
subsys_register	bus.c	/^static int subsys_register(struct bus_type *subsys,$/;"	f	file:
subsys_system_register	bus.c	/^EXPORT_SYMBOL_GPL(subsys_system_register);$/;"	v
subsys_system_register	bus.c	/^int subsys_system_register(struct bus_type *subsys,$/;"	f
subsys_virtual_register	bus.c	/^EXPORT_SYMBOL_GPL(subsys_virtual_register);$/;"	v
subsys_virtual_register	bus.c	/^int subsys_virtual_register(struct bus_type *subsys,$/;"	f
subvendor	mod_devicetable.h	/^	__u32 subvendor, subdevice;	\/* Subsystem ID's or PCI_ANY_ID *\/$/;"	m	struct:pci_device_id
supplier	device.h	/^	struct device *supplier;$/;"	m	struct:device_link	typeref:struct:device_link::device
suppliers	device.h	/^	struct list_head suppliers;$/;"	m	struct:dev_links_info	typeref:struct:dev_links_info::list_head
supplies	imx219.c	/^	struct regulator_bulk_data supplies[IMX219_NUM_SUPPLIES];$/;"	m	struct:imx219	typeref:struct:imx219::regulator_bulk_data	file:
supply	consumer1.h	/^	const char *supply;$/;"	m	struct:regulator_bulk_data
supported_modes	imx219.c	/^static const struct imx219_mode supported_modes[] = {$/;"	v	typeref:struct:imx219_mode	file:
supported_modes	imx258.c	/^static const struct imx258_mode supported_modes[] = {$/;"	v	typeref:struct:imx258_mode	file:
supports_requests	videobuf2-core.h	/^	unsigned			supports_requests:1;$/;"	m	struct:vb2_queue
suppress_bind_attrs	device.h	/^	bool suppress_bind_attrs;	\/* disables bind\/unbind via sysfs *\/$/;"	m	struct:device_driver
suspend	device.h	/^	int (*suspend) (struct device *dev, pm_message_t state);$/;"	m	struct:device_driver
suspend	device.h	/^	int (*suspend)(struct device *dev, pm_message_t state);$/;"	m	struct:bus_type
suspend	dvb_frontend.h	/^	int (*suspend)(struct dvb_frontend *fe);$/;"	m	struct:dvb_tuner_ops
suspend	pm.h	/^	int (*suspend)(struct device *dev);$/;"	m	struct:dev_pm_ops
suspend_late	pm.h	/^	int (*suspend_late)(struct device *dev);$/;"	m	struct:dev_pm_ops
suspend_noirq	pm.h	/^	int (*suspend_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops
suspend_report_result	pm.h	746;"	d
suspend_report_result	pm.h	789;"	d
suspend_timer	pm.h	/^	struct timer_list	suspend_timer;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::timer_list
suspended_jiffies	pm.h	/^	unsigned long		suspended_jiffies;$/;"	m	struct:dev_pm_info
svc_id	mod_devicetable.h	/^	__u32 svc_id;$/;"	m	struct:apr_device_id
svc_version	mod_devicetable.h	/^	__u32 svc_version;$/;"	m	struct:apr_device_id
sversion	mod_devicetable.h	/^	__u32	sversion;	\/* 20 bits *\/$/;"	m	struct:parisc_device_id
svid	mod_devicetable.h	/^	__u16 svid;$/;"	m	struct:typec_device_id
swap	kernel.h	979;"	d
swbit	mod_devicetable.h	/^	kernel_ulong_t swbit[INPUT_DEVICE_ID_SW_MAX \/ BITS_PER_LONG + 1];$/;"	m	struct:input_device_id
sym_name	relocs.c	/^static const char *sym_name(const char *sym_strtab, Elf_Sym *sym)$/;"	f	file:
sym_regex_c	relocs.c	/^static regex_t sym_regex_c;$/;"	v	file:
symbol_get	module.h	270;"	d
symbol_get	module.h	687;"	d
symbol_put	module.h	579;"	d
symbol_put	module.h	603;"	d
symbol_put	module.h	688;"	d
symbol_put_addr	module.h	604;"	d
symbol_put_addr	module.h	689;"	d
symbol_rate	dvb_frontend.h	/^	u32			symbol_rate;$/;"	m	struct:dtv_frontend_properties
symbol_rate_max	dvb_frontend.h	/^	u32	symbol_rate_max;$/;"	m	struct:dvb_frontend_internal_info
symbol_rate_min	dvb_frontend.h	/^	u32	symbol_rate_min;$/;"	m	struct:dvb_frontend_internal_info
symbol_rate_tolerance	dvb_frontend.h	/^	u32	symbol_rate_tolerance;$/;"	m	struct:dvb_frontend_internal_info
symbol_request	module.h	788;"	d
symndx	module.h	/^	unsigned int symndx;$/;"	m	struct:klp_modinfo
syms	module.h	/^	const struct kernel_symbol *syms;$/;"	m	struct:module	typeref:struct:module::kernel_symbol
symsearch	module.h	/^struct symsearch {$/;"	s
symtab	module.h	/^	Elf_Sym *symtab;$/;"	m	struct:mod_kallsyms
symtab	relocs.c	/^	Elf_Sym        *symtab;$/;"	m	struct:section	file:
symtype	relocs.h	/^enum symtype {$/;"	g
sync	pm.h	/^	void (*sync)(struct device *dev);$/;"	m	struct:dev_pm_domain
sync	videobuf-core.h	/^	int (*sync)		(struct videobuf_queue *q,$/;"	m	struct:videobuf_qtype_ops
syscore	pm.h	/^	bool			syscore:1;$/;"	m	struct:dev_pm_info
sysfs_add_file_to_group	sysfs1.h	/^static inline int sysfs_add_file_to_group(struct kobject *kobj,$/;"	f
sysfs_add_link_to_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_add_link_to_group);$/;"	v
sysfs_add_link_to_group	group.c	/^int sysfs_add_link_to_group(struct kobject *kobj, const char *group_name,$/;"	f
sysfs_add_link_to_group	sysfs1.h	/^static inline int sysfs_add_link_to_group(struct kobject *kobj,$/;"	f
sysfs_attr_init	sysfs1.h	51;"	d
sysfs_attr_init	sysfs1.h	58;"	d
sysfs_bin_attr_init	sysfs1.h	183;"	d
sysfs_break_active_protection	sysfs1.h	/^sysfs_break_active_protection(struct kobject *kobj,$/;"	f
sysfs_chmod_file	sysfs1.h	/^static inline int sysfs_chmod_file(struct kobject *kobj,$/;"	f
sysfs_create_bin_file	sysfs1.h	/^static inline int sysfs_create_bin_file(struct kobject *kobj,$/;"	f
sysfs_create_dir_ns	sysfs1.h	/^static inline int sysfs_create_dir_ns(struct kobject *kobj, const void *ns)$/;"	f
sysfs_create_file	sysfs1.h	/^static inline int __must_check sysfs_create_file(struct kobject *kobj,$/;"	f
sysfs_create_file_ns	sysfs1.h	/^static inline int sysfs_create_file_ns(struct kobject *kobj,$/;"	f
sysfs_create_files	sysfs1.h	/^static inline int sysfs_create_files(struct kobject *kobj,$/;"	f
sysfs_create_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_create_group);$/;"	v
sysfs_create_group	group.c	/^int sysfs_create_group(struct kobject *kobj,$/;"	f
sysfs_create_group	sysfs1.h	/^static inline int sysfs_create_group(struct kobject *kobj,$/;"	f
sysfs_create_groups	group.c	/^EXPORT_SYMBOL_GPL(sysfs_create_groups);$/;"	v
sysfs_create_groups	group.c	/^int sysfs_create_groups(struct kobject *kobj,$/;"	f
sysfs_create_groups	sysfs1.h	/^static inline int sysfs_create_groups(struct kobject *kobj,$/;"	f
sysfs_create_link	sysfs1.h	/^static inline int sysfs_create_link(struct kobject *kobj,$/;"	f
sysfs_create_link_nowarn	sysfs1.h	/^static inline int sysfs_create_link_nowarn(struct kobject *kobj,$/;"	f
sysfs_create_mount_point	sysfs1.h	/^static inline int sysfs_create_mount_point(struct kobject *parent_kobj,$/;"	f
sysfs_delete_link	sysfs1.h	/^static inline void sysfs_delete_link(struct kobject *k, struct kobject *t,$/;"	f
sysfs_deprecated	device.h	1583;"	d
sysfs_enable_ns	sysfs1.h	/^static inline void sysfs_enable_ns(struct kernfs_node *kn)$/;"	f
sysfs_get	sysfs1.h	/^static inline struct kernfs_node *sysfs_get(struct kernfs_node *kn)$/;"	f
sysfs_get_dirent	sysfs1.h	/^static inline struct kernfs_node *sysfs_get_dirent(struct kernfs_node *parent,$/;"	f
sysfs_groups	rc-core.h	/^	const struct attribute_group	*sysfs_groups[5];$/;"	m	struct:rc_dev	typeref:struct:rc_dev::attribute_group
sysfs_init	sysfs1.h	/^static inline int __must_check sysfs_init(void)$/;"	f
sysfs_merge_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_merge_group);$/;"	v
sysfs_merge_group	group.c	/^int sysfs_merge_group(struct kobject *kobj,$/;"	f
sysfs_merge_group	sysfs1.h	/^static inline int sysfs_merge_group(struct kobject *kobj,$/;"	f
sysfs_move_dir_ns	sysfs1.h	/^static inline int sysfs_move_dir_ns(struct kobject *kobj,$/;"	f
sysfs_notify	sysfs1.h	/^static inline void sysfs_notify(struct kobject *kobj, const char *dir,$/;"	f
sysfs_notify_dirent	sysfs1.h	/^static inline void sysfs_notify_dirent(struct kernfs_node *kn)$/;"	f
sysfs_ops	sysfs1.h	/^struct sysfs_ops {$/;"	s
sysfs_put	sysfs1.h	/^static inline void sysfs_put(struct kernfs_node *kn)$/;"	f
sysfs_remove_bin_file	sysfs1.h	/^static inline void sysfs_remove_bin_file(struct kobject *kobj,$/;"	f
sysfs_remove_dir	sysfs1.h	/^static inline void sysfs_remove_dir(struct kobject *kobj)$/;"	f
sysfs_remove_file	sysfs1.h	/^static inline void sysfs_remove_file(struct kobject *kobj,$/;"	f
sysfs_remove_file_from_group	sysfs1.h	/^static inline void sysfs_remove_file_from_group(struct kobject *kobj,$/;"	f
sysfs_remove_file_ns	sysfs1.h	/^static inline void sysfs_remove_file_ns(struct kobject *kobj,$/;"	f
sysfs_remove_file_self	sysfs1.h	/^static inline bool sysfs_remove_file_self(struct kobject *kobj,$/;"	f
sysfs_remove_files	sysfs1.h	/^static inline void sysfs_remove_files(struct kobject *kobj,$/;"	f
sysfs_remove_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_remove_group);$/;"	v
sysfs_remove_group	group.c	/^void sysfs_remove_group(struct kobject *kobj,$/;"	f
sysfs_remove_group	sysfs1.h	/^static inline void sysfs_remove_group(struct kobject *kobj,$/;"	f
sysfs_remove_groups	group.c	/^EXPORT_SYMBOL_GPL(sysfs_remove_groups);$/;"	v
sysfs_remove_groups	group.c	/^void sysfs_remove_groups(struct kobject *kobj,$/;"	f
sysfs_remove_groups	sysfs1.h	/^static inline void sysfs_remove_groups(struct kobject *kobj,$/;"	f
sysfs_remove_link	sysfs1.h	/^static inline void sysfs_remove_link(struct kobject *kobj, const char *name)$/;"	f
sysfs_remove_link_from_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_remove_link_from_group);$/;"	v
sysfs_remove_link_from_group	group.c	/^void sysfs_remove_link_from_group(struct kobject *kobj, const char *group_name,$/;"	f
sysfs_remove_link_from_group	sysfs1.h	/^static inline void sysfs_remove_link_from_group(struct kobject *kobj,$/;"	f
sysfs_remove_mount_point	sysfs1.h	/^static inline void sysfs_remove_mount_point(struct kobject *parent_kobj,$/;"	f
sysfs_rename_dir_ns	sysfs1.h	/^static inline int sysfs_rename_dir_ns(struct kobject *kobj,$/;"	f
sysfs_rename_link	sysfs1.h	/^static inline int sysfs_rename_link(struct kobject *kobj, struct kobject *target,$/;"	f
sysfs_rename_link_ns	sysfs1.h	/^static inline int sysfs_rename_link_ns(struct kobject *k, struct kobject *t,$/;"	f
sysfs_unbreak_active_protection	sysfs1.h	/^static inline void sysfs_unbreak_active_protection(struct kernfs_node *kn)$/;"	f
sysfs_unmerge_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_unmerge_group);$/;"	v
sysfs_unmerge_group	group.c	/^void sysfs_unmerge_group(struct kobject *kobj,$/;"	f
sysfs_unmerge_group	sysfs1.h	/^static inline void sysfs_unmerge_group(struct kobject *kobj,$/;"	f
sysfs_update_group	group.c	/^EXPORT_SYMBOL_GPL(sysfs_update_group);$/;"	v
sysfs_update_group	group.c	/^int sysfs_update_group(struct kobject *kobj,$/;"	f
sysfs_update_group	sysfs1.h	/^static inline int sysfs_update_group(struct kobject *kobj,$/;"	f
system_kset	bus.c	/^static struct kset *system_kset;$/;"	v	typeref:struct:kset	file:
system_root_device_release	bus.c	/^static void system_root_device_release(struct device *dev)$/;"	f	file:
system_states	kernel.h	/^extern enum system_states {$/;"	g
table	clk-provider.h	/^	const struct clk_div_table	*table;$/;"	m	struct:clk_divider	typeref:struct:clk_divider::clk_div_table
table	clk-provider.h	/^	u32		*table;$/;"	m	struct:clk_mux
table	machine.h	/^	struct gpiod_lookup table[];$/;"	m	struct:gpiod_lookup_table	typeref:struct:gpiod_lookup_table::gpiod_lookup
taint_flag	kernel.h	/^struct taint_flag {$/;"	s
taints	module.h	/^	unsigned long taints;	\/* same bits as kernel:taint_flags *\/$/;"	m	struct:module
target	module.h	/^	struct module *source, *target;$/;"	m	struct:module_use	typeref:struct:module_use::
target	videodev2.h	/^	__u32			target;$/;"	m	struct:v4l2_selection
target_list	module.h	/^	struct list_head target_list;$/;"	m	struct:module	typeref:struct:module::list_head
target_list	module.h	/^	struct list_head target_list;$/;"	m	struct:module_use	typeref:struct:module_use::list_head
tb_service_id	mod_devicetable.h	/^struct tb_service_id {$/;"	s
test	module.h	/^	int (*test)(struct module *);$/;"	m	struct:module_attribute
test	testusb.c	/^	int			test;$/;"	m	struct:testdev	file:
test_num	testusb.c	/^	unsigned		test_num;	\/* 0..(TEST_CASES-1) *\/$/;"	m	struct:usbtest_param	file:
testdev	testusb.c	/^struct testdev {$/;"	s	file:
testdev_ffs_ifnum	testusb.c	/^static int testdev_ffs_ifnum(FILE *fd)$/;"	f	file:
testdev_ifnum	testusb.c	/^static int testdev_ifnum(FILE *fd)$/;"	f	file:
testdevs	testusb.c	/^static struct testdev		*testdevs;$/;"	v	typeref:struct:testdev	file:
text_size	module.h	/^	unsigned int text_size;$/;"	m	struct:module_layout
thaw	pm.h	/^	int (*thaw)(struct device *dev);$/;"	m	struct:dev_pm_ops
thaw_early	pm.h	/^	int (*thaw_early)(struct device *dev);$/;"	m	struct:dev_pm_ops
thaw_noirq	pm.h	/^	int (*thaw_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops
thread	ffs-test.c	/^static struct thread {$/;"	s	file:
thread	testusb.c	/^	pthread_t		thread;$/;"	m	struct:testdev	file:
threaded	driver.h	/^	bool threaded;$/;"	m	struct:gpio_irq_chip
threadio	videobuf2-core.h	/^	struct vb2_threadio_data	*threadio;$/;"	m	struct:vb2_queue	typeref:struct:vb2_queue::vb2_threadio_data
threads	ffs-test.c	/^} threads[] = {$/;"	v	typeref:struct:thread	file:
timecode	v4l2-compat-ioctl32.c	/^	struct v4l2_timecode	timecode;$/;"	m	struct:v4l2_buffer32	typeref:struct:v4l2_buffer32::v4l2_timecode	file:
timecode	videobuf2-v4l2.h	/^	struct v4l2_timecode	timecode;$/;"	m	struct:vb2_v4l2_buffer	typeref:struct:vb2_v4l2_buffer::v4l2_timecode
timecode	videodev2.h	/^	struct v4l2_timecode	timecode;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::v4l2_timecode
timeout	dvb_demux.h	/^	ktime_t timeout;$/;"	m	struct:dvb_demux_feed
timeout	i2c-algo-bit.h	/^	int timeout;		\/* in jiffies *\/$/;"	m	struct:i2c_algo_bit_data
timeout	i2c.h	/^	int timeout;			\/* in jiffies *\/$/;"	m	struct:i2c_adapter
timeout	rc-core.h	/^	u32				timeout;$/;"	m	struct:rc_dev
timeout	rc-core.h	/^	unsigned                timeout:1;$/;"	m	struct:ir_raw_event
timeperframe	videodev2.h	/^	struct v4l2_fract  timeperframe;  \/*  Time per frame in seconds *\/$/;"	m	struct:v4l2_captureparm	typeref:struct:v4l2_captureparm::v4l2_fract
timeperframe	videodev2.h	/^	struct v4l2_fract  timeperframe; \/*  Time per frame in seconds *\/$/;"	m	struct:v4l2_outputparm	typeref:struct:v4l2_outputparm::v4l2_fract
timer	dmxdev.h	/^	struct timer_list timer;$/;"	m	struct:dmxdev_filter	typeref:struct:dmxdev_filter::timer_list
timer_autosuspends	pm.h	/^	unsigned int		timer_autosuspends:1;$/;"	m	struct:dev_pm_info
timer_expires	pm.h	/^	unsigned long		timer_expires;$/;"	m	struct:dev_pm_info
timer_keyup	rc-core.h	/^	struct timer_list		timer_keyup;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::timer_list
timer_repeat	rc-core.h	/^	struct timer_list		timer_repeat;$/;"	m	struct:rc_dev	typeref:struct:rc_dev::timer_list
timestamp	v4l2-compat-ioctl32.c	/^	struct compat_timespec		timestamp;$/;"	m	struct:v4l2_event32	typeref:struct:v4l2_event32::compat_timespec	file:
timestamp	v4l2-compat-ioctl32.c	/^	struct compat_timeval	timestamp;$/;"	m	struct:v4l2_buffer32	typeref:struct:v4l2_buffer32::compat_timeval	file:
timestamp	videobuf2-core.h	/^	u64			timestamp;$/;"	m	struct:vb2_buffer
timestamp	videodev2.h	/^	struct timespec			timestamp;$/;"	m	struct:v4l2_event	typeref:struct:v4l2_event::timespec
timestamp	videodev2.h	/^	struct timeval		timestamp;$/;"	m	struct:v4l2_buffer	typeref:struct:v4l2_buffer::timeval
timestamp_flags	videobuf2-core.h	/^	u32				timestamp_flags;$/;"	m	struct:vb2_queue
timings	videodev2.h	/^	struct v4l2_dv_timings timings;$/;"	m	struct:v4l2_enum_dv_timings	typeref:struct:v4l2_enum_dv_timings::v4l2_dv_timings
to_bus_attr	bus.c	26;"	d	file:
to_clk_composite	clk-provider.h	688;"	d
to_clk_divider	clk-provider.h	430;"	d
to_clk_fd	clk-provider.h	614;"	d
to_clk_fixed_factor	clk-provider.h	573;"	d
to_clk_fixed_rate	clk-provider.h	311;"	d
to_clk_gate	clk-provider.h	359;"	d
to_clk_gpio	clk-provider.h	720;"	d
to_clk_multiplier	clk-provider.h	657;"	d
to_clk_mux	clk-provider.h	513;"	d
to_device_private_bus	base.h	88;"	d
to_device_private_driver	base.h	86;"	d
to_device_private_parent	base.h	84;"	d
to_driver	base.h	54;"	d
to_drv_attr	bus.c	32;"	d	file:
to_gpio_irq_chip	driver.h	/^static inline struct gpio_irq_chip *to_gpio_irq_chip(struct irq_chip *chip)$/;"	f
to_i2c_adapter	i2c.h	697;"	d
to_i2c_client	i2c.h	343;"	d
to_i2c_driver	i2c.h	307;"	d
to_imx219	imx219.c	/^static inline struct imx219 *to_imx219(struct v4l2_subdev *_sd)$/;"	f	file:
to_imx258	imx258.c	/^static inline struct imx258 *to_imx258(struct v4l2_subdev *_sd)$/;"	f	file:
to_irq	driver.h	/^	int			(*to_irq)(struct gpio_chip *chip,$/;"	m	struct:gpio_chip
to_media_devnode	media-devnode.h	103;"	d
to_pset_node	property.c	34;"	d	file:
to_rc_dev	rc-core.h	239;"	d
to_soc_camera_control	soc_camera.h	/^static inline struct device *to_soc_camera_control($/;"	f
to_soc_camera_desc	soc_camera.h	/^static inline struct soc_camera_desc *to_soc_camera_desc($/;"	f
to_soc_camera_host	soc_camera.h	/^static inline struct soc_camera_host *to_soc_camera_host($/;"	f
to_subsys_private	base.h	45;"	d
to_tuner	tuner-core.c	/^static inline struct tuner *to_tuner(struct v4l2_subdev *sd)$/;"	f	file:
to_v4l2_subdev_fh	v4l2-subdev.h	912;"	d
to_vb2_v4l2_buffer	videobuf2-v4l2.h	51;"	d
to_video_device	v4l2-dev.h	311;"	d
todo	dmxdev.h	/^	int todo;$/;"	m	struct:dmxdev_filter
top	media-entity.h	/^	int top;$/;"	m	struct:media_graph
top	videodev2.h	/^	__s32   top;$/;"	m	struct:v4l2_rect
topology_version	media-device.h	/^	u64 topology_version;$/;"	m	struct:media_device
topology_version	media.h	/^	__u64 topology_version;$/;"	m	struct:media_v2_topology
total_queued_events	cec.h	/^	unsigned int		total_queued_events;$/;"	m	struct:cec_fh
trace_bprintk_fmt_start	module.h	/^	const char **trace_bprintk_fmt_start;$/;"	m	struct:module
trace_dump_stack	kernel.h	/^static inline void trace_dump_stack(int skip) { }$/;"	f
trace_evals	module.h	/^	struct trace_eval_map **trace_evals;$/;"	m	struct:module	typeref:struct:module::trace_eval_map
trace_events	module.h	/^	struct trace_event_call **trace_events;$/;"	m	struct:module	typeref:struct:module::trace_event_call
trace_printk	kernel.h	/^int trace_printk(const char *fmt, ...)$/;"	f
trace_printk	kernel.h	716;"	d
trace_puts	kernel.h	770;"	d
tracepoints_ptrs	module.h	/^	tracepoint_ptr_t *tracepoints_ptrs;$/;"	m	struct:module
tracing_is_on	kernel.h	/^static inline int tracing_is_on(void) { return 0; }$/;"	f
tracing_off	kernel.h	/^static inline void tracing_off(void) { }$/;"	f
tracing_on	kernel.h	/^static inline void tracing_on(void) { }$/;"	f
tracing_snapshot	kernel.h	/^static inline void tracing_snapshot(void) { }$/;"	f
tracing_snapshot_alloc	kernel.h	/^static inline void tracing_snapshot_alloc(void) { }$/;"	f
tracing_start	kernel.h	/^static inline void tracing_start(void) { }$/;"	f
tracing_stop	kernel.h	/^static inline void tracing_stop(void) { }$/;"	f
transmission_mode	dvb_frontend.h	/^	enum fe_transmit_mode	transmission_mode;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_transmit_mode
transmit_in_progress	cec.h	/^	bool transmit_in_progress;$/;"	m	struct:cec_adapter
transmit_queue	cec.h	/^	struct list_head transmit_queue;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::list_head
transmit_queue_sz	cec.h	/^	unsigned int transmit_queue_sz;$/;"	m	struct:cec_adapter
transmitting	cec.h	/^	struct cec_data *transmitting;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::cec_data
try_compose	v4l2-subdev.h	/^	struct v4l2_rect try_compose;$/;"	m	struct:v4l2_subdev_pad_config	typeref:struct:v4l2_subdev_pad_config::v4l2_rect
try_crop	v4l2-subdev.h	/^	struct v4l2_rect try_crop;$/;"	m	struct:v4l2_subdev_pad_config	typeref:struct:v4l2_subdev_pad_config::v4l2_rect
try_ctrl	v4l2-ctrls.h	/^	int (*try_ctrl)(struct v4l2_ctrl *ctrl);$/;"	m	struct:v4l2_ctrl_ops
try_fmt	soc_camera.h	/^	int (*try_fmt)(struct soc_camera_device *, struct v4l2_format *);$/;"	m	struct:soc_camera_host_ops
try_fmt	v4l2-subdev.h	/^	struct v4l2_mbus_framefmt try_fmt;$/;"	m	struct:v4l2_subdev_pad_config	typeref:struct:v4l2_subdev_pad_config::v4l2_mbus_framefmt
try_module_get	module.h	/^static inline bool try_module_get(struct module *module)$/;"	f
try_or_set_cluster	v4l2-ctrls.c	/^static int try_or_set_cluster(struct v4l2_fh *fh, struct v4l2_ctrl *master,$/;"	f	file:
try_set_ext_ctrls	v4l2-ctrls.c	/^static int try_set_ext_ctrls(struct v4l2_fh *fh, struct v4l2_ctrl_handler *hdl,$/;"	f	file:
trylock_bus	i2c.h	/^	int (*trylock_bus)(struct i2c_adapter *, unsigned int flags);$/;"	m	struct:i2c_lock_operations
ts	dmxdev.h	/^		struct list_head ts;$/;"	m	union:dmxdev_filter::__anon3	typeref:struct:dmxdev_filter::__anon3::list_head
ts	dmxdev.h	/^	struct dmx_ts_feed *ts;$/;"	m	struct:dmxdev_feed	typeref:struct:dmxdev_feed::dmx_ts_feed
ts	dvb_demux.h	/^		dmx_ts_cb ts;$/;"	m	union:dvb_demux_feed::__anon6
ts	dvb_demux.h	/^		struct dmx_ts_feed ts;$/;"	m	union:dvb_demux_feed::__anon5	typeref:struct:dvb_demux_feed::__anon5::dmx_ts_feed
ts	videobuf-core.h	/^	struct timeval          ts;$/;"	m	struct:videobuf_buffer	typeref:struct:videobuf_buffer::timeval
ts_bus_ctrl	dvb_frontend.h	/^	int (*ts_bus_ctrl)(struct dvb_frontend* fe, int acquire);$/;"	m	struct:dvb_frontend_ops
ts_filter_type	demux.h	/^enum ts_filter_type {$/;"	g
ts_type	dvb_demux.h	/^	enum ts_filter_type ts_type;$/;"	m	struct:dvb_demux_feed	typeref:enum:dvb_demux_feed::ts_filter_type
tsbuf	dvb_demux.h	/^	u8 tsbuf[204];$/;"	m	struct:dvb_demux
tsbufp	dvb_demux.h	/^	int tsbufp;$/;"	m	struct:dvb_demux
tsfeedp	demux.h	/^	u16 secbufp, seclen, tsfeedp;$/;"	m	struct:dmx_section_feed
tsout_entity	dvbdev.h	/^	struct media_entity *entity, *tsout_entity;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::
tsout_num_entities	dvbdev.h	/^	unsigned tsout_num_entities;$/;"	m	struct:dvb_device
tsout_pads	dvbdev.h	/^	struct media_pad *pads, *tsout_pads;$/;"	m	struct:dvb_device	typeref:struct:dvb_device::
tune	dvb_frontend.h	/^	int (*tune)(struct dvb_frontend* fe,$/;"	m	struct:dvb_frontend_ops
tuner	tuner-core.c	/^struct tuner {$/;"	s	file:
tuner	v4l2-common.h	/^	int tuner;$/;"	m	struct:v4l2_priv_tun_config
tuner	v4l2-compat-ioctl32.c	/^	__u32        tuner;             \/*  Associated tuner *\/$/;"	m	struct:v4l2_input32	file:
tuner	v4l2-subdev.h	/^	const struct v4l2_subdev_tuner_ops	*tuner;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_tuner_ops
tuner	videodev2.h	/^	__u32	tuner;$/;"	m	struct:v4l2_frequency
tuner	videodev2.h	/^	__u32	tuner;$/;"	m	struct:v4l2_frequency_band
tuner	videodev2.h	/^	__u32	tuner;$/;"	m	struct:v4l2_hw_freq_seek
tuner	videodev2.h	/^	__u32        tuner;             \/*  enum v4l2_tuner_type *\/$/;"	m	struct:v4l2_input
tuner2_formats	tveeprom.h	/^	u32 tuner2_formats;$/;"	m	struct:tveeprom
tuner2_hauppauge_model	tveeprom.h	/^	u32 tuner2_hauppauge_model;$/;"	m	struct:tveeprom
tuner2_type	tveeprom.h	/^	u32 tuner2_type;$/;"	m	struct:tveeprom
tuner_analog_ops	tuner-core.c	/^static const struct analog_demod_ops tuner_analog_ops = {$/;"	v	typeref:struct:analog_demod_ops	file:
tuner_callback	tuner.h	/^	int (*tuner_callback)(void *dev, int component, int cmd, int arg);$/;"	m	struct:tuner_setup
tuner_command	tuner-core.c	/^static int tuner_command(struct i2c_client *client, unsigned cmd, void *arg)$/;"	f	file:
tuner_core_ops	tuner-core.c	/^static const struct v4l2_subdev_core_ops tuner_core_ops = {$/;"	v	typeref:struct:v4l2_subdev_core_ops	file:
tuner_debug	tuner-core.c	/^static int tuner_debug;$/;"	v	file:
tuner_detach	tuner-core.c	/^static void tuner_detach(struct dvb_frontend *fe)$/;"	f	file:
tuner_driver	tuner-core.c	/^module_i2c_driver(tuner_driver);$/;"	v
tuner_driver	tuner-core.c	/^static struct i2c_driver tuner_driver = {$/;"	v	typeref:struct:i2c_driver	file:
tuner_fixup_std	tuner-core.c	/^static v4l2_std_id tuner_fixup_std(struct tuner *t, v4l2_std_id std)$/;"	f	file:
tuner_formats	tveeprom.h	/^	u32 tuner_formats;$/;"	m	struct:tveeprom
tuner_g_frequency	tuner-core.c	/^static int tuner_g_frequency(struct v4l2_subdev *sd, struct v4l2_frequency *f)$/;"	f	file:
tuner_g_tuner	tuner-core.c	/^static int tuner_g_tuner(struct v4l2_subdev *sd, struct v4l2_tuner *vt)$/;"	f	file:
tuner_hauppauge_model	tveeprom.h	/^	u32 tuner_hauppauge_model;$/;"	m	struct:tveeprom
tuner_id	tuner-core.c	/^static const struct i2c_device_id tuner_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
tuner_log_status	tuner-core.c	/^static int tuner_log_status(struct v4l2_subdev *sd)$/;"	f	file:
tuner_lookup	tuner-core.c	/^static void tuner_lookup(struct i2c_adapter *adap,$/;"	f	file:
tuner_mode	tuner.h	/^enum tuner_mode {$/;"	g
tuner_ops	dvb_frontend.h	/^	struct dvb_tuner_ops tuner_ops;$/;"	m	struct:dvb_frontend_ops	typeref:struct:dvb_frontend_ops::dvb_tuner_ops
tuner_ops	tuner-core.c	/^static const struct v4l2_subdev_ops tuner_ops = {$/;"	v	typeref:struct:v4l2_subdev_ops	file:
tuner_ops	tuner-core.c	/^static const struct v4l2_subdev_ops tuner_ops;$/;"	v	typeref:struct:v4l2_subdev_ops	file:
tuner_pad_index	v4l2-mc.h	/^enum tuner_pad_index {$/;"	g
tuner_params	tuner-types.h	/^struct tuner_params {$/;"	s
tuner_pm_ops	tuner-core.c	/^static const struct dev_pm_ops tuner_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
tuner_priv	dvb_frontend.h	/^	void *tuner_priv;$/;"	m	struct:dvb_frontend
tuner_probe	tuner-core.c	/^static int tuner_probe(struct i2c_client *client,$/;"	f	file:
tuner_range	tuner-types.h	/^struct tuner_range {$/;"	s
tuner_remove	tuner-core.c	/^static int tuner_remove(struct i2c_client *client)$/;"	f	file:
tuner_resume	tuner-core.c	/^static int tuner_resume(struct device *dev)$/;"	f	file:
tuner_s_config	tuner-core.c	/^static int tuner_s_config(struct v4l2_subdev *sd,$/;"	f	file:
tuner_s_frequency	tuner-core.c	/^static int tuner_s_frequency(struct v4l2_subdev *sd, const struct v4l2_frequency *f)$/;"	f	file:
tuner_s_radio	tuner-core.c	/^static int tuner_s_radio(struct v4l2_subdev *sd)$/;"	f	file:
tuner_s_std	tuner-core.c	/^static int tuner_s_std(struct v4l2_subdev *sd, v4l2_std_id std)$/;"	f	file:
tuner_s_tuner	tuner-core.c	/^static int tuner_s_tuner(struct v4l2_subdev *sd, const struct v4l2_tuner *vt)$/;"	f	file:
tuner_s_type_addr	tuner-core.c	/^static int tuner_s_type_addr(struct v4l2_subdev *sd,$/;"	f	file:
tuner_setup	tuner.h	/^struct tuner_setup {$/;"	s
tuner_standby	tuner-core.c	/^static int tuner_standby(struct v4l2_subdev *sd)$/;"	f	file:
tuner_status	dvb_frontend.h	/^	void (*tuner_status)(struct dvb_frontend *fe);$/;"	m	struct:analog_demod_ops
tuner_status	tuner-core.c	/^static void tuner_status(struct dvb_frontend *fe)$/;"	f	file:
tuner_suspend	tuner-core.c	/^static int tuner_suspend(struct device *dev)$/;"	f	file:
tuner_symbol_probe	tuner-core.c	140;"	d	file:
tuner_symbol_probe	tuner-core.c	165;"	d	file:
tuner_tuner_ops	tuner-core.c	/^static const struct v4l2_subdev_tuner_ops tuner_tuner_ops = {$/;"	v	typeref:struct:v4l2_subdev_tuner_ops	file:
tuner_type	tveeprom.h	/^	u32 tuner_type;$/;"	m	struct:tveeprom
tuner_video_ops	tuner-core.c	/^static const struct v4l2_subdev_video_ops tuner_video_ops = {$/;"	v	typeref:struct:v4l2_subdev_video_ops	file:
tunertype	tuner-types.h	/^struct tunertype {$/;"	s
tv_freq	tuner-core.c	/^	unsigned int        tv_freq;$/;"	m	struct:tuner	file:
tv_range	tuner-core.c	/^static unsigned int tv_range[2] = { 44, 958 };$/;"	v	file:
tveeprom	tveeprom.h	/^struct tveeprom {$/;"	s
tveeprom_audio_processor	tveeprom.h	/^enum tveeprom_audio_processor {$/;"	g
tvnorms	v4l2-dev.h	/^	v4l2_std_id tvnorms;$/;"	m	struct:video_device
tx_g_parameters	v4l2-subdev.h	/^	int (*tx_g_parameters)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_ir_ops
tx_ir	rc-core.h	/^	int				(*tx_ir)(struct rc_dev *dev, unsigned *txbuf, unsigned n);$/;"	m	struct:rc_dev
tx_resolution	rc-core.h	/^	u32				tx_resolution;$/;"	m	struct:rc_dev
tx_s_parameters	v4l2-subdev.h	/^	int (*tx_s_parameters)(struct v4l2_subdev *sd,$/;"	m	struct:v4l2_subdev_ir_ops
tx_timeouts	cec.h	/^	u32 tx_timeouts;$/;"	m	struct:cec_adapter
tx_write	v4l2-subdev.h	/^	int (*tx_write)(struct v4l2_subdev *sd, u8 *buf, size_t count,$/;"	m	struct:v4l2_subdev_ir_ops
txsubchans	videodev2.h	/^	__u32			txsubchans;$/;"	m	struct:v4l2_modulator
type	device.h	/^	const struct device_type	*type;$/;"	m	struct:class_dev_iter	typeref:struct:class_dev_iter::device_type
type	device.h	/^	const struct device_type	*type;$/;"	m	struct:subsys_dev_iter	typeref:struct:subsys_dev_iter::device_type
type	device.h	/^	const struct device_type *type;$/;"	m	struct:device	typeref:struct:device::device_type
type	dmxdev.h	/^	enum dmxdev_type type;$/;"	m	struct:dmxdev_filter	typeref:enum:dmxdev_filter::dmxdev_type
type	dvb_demux.h	/^	enum dvb_dmx_filter_type type;$/;"	m	struct:dvb_demux_feed	typeref:enum:dvb_demux_feed::dvb_dmx_filter_type
type	dvb_demux.h	/^	enum dvb_dmx_filter_type type;$/;"	m	struct:dvb_demux_filter	typeref:enum:dvb_demux_filter::dvb_dmx_filter_type
type	dvbdev.h	/^	enum dvb_device_type type;$/;"	m	struct:dvb_device	typeref:enum:dvb_device::dvb_device_type
type	gpio_keys.h	/^	unsigned int type;$/;"	m	struct:gpio_keys_button
type	i2c-smbus.c	/^	enum i2c_alert_protocol	type;$/;"	m	struct:alert_data	typeref:enum:alert_data::i2c_alert_protocol	file:
type	i2c.h	/^	char		type[I2C_NAME_SIZE];$/;"	m	struct:i2c_board_info
type	media-entity.h	/^	u32				type;$/;"	m	struct:media_interface
type	media.h	/^	__u32 type;$/;"	m	struct:media_entity_desc
type	mod_devicetable.h	/^	__u8	type;$/;"	m	struct:mips_cdmm_device_id
type	mod_devicetable.h	/^	__u8 type; \/* subchannel type *\/$/;"	m	struct:css_device_id
type	mod_devicetable.h	/^	__u8 type;$/;"	m	struct:serio_device_id
type	mod_devicetable.h	/^	char	type[32];$/;"	m	struct:of_device_id
type	mod_devicetable.h	/^	char type[32];$/;"	m	struct:vio_device_id
type	property.h	/^	enum dev_prop_type type;$/;"	m	struct:property_entry	typeref:enum:property_entry::dev_prop_type
type	tuner-core.c	/^	unsigned int        type; \/* chip type id *\/$/;"	m	struct:tuner	file:
type	tuner-types.h	/^	enum param_type type;$/;"	m	struct:tuner_params	typeref:enum:tuner_params::param_type
type	tuner.h	/^	unsigned int	type;$/;"	m	struct:tuner_setup
type	v4l2-compat-ioctl32.c	/^	__u32				type;$/;"	m	struct:v4l2_event32	file:
type	v4l2-compat-ioctl32.c	/^	__u32			type;	\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_buffer32	file:
type	v4l2-compat-ioctl32.c	/^	__u32	     type;		\/*  Type of input *\/$/;"	m	struct:v4l2_input32	file:
type	v4l2-compat-ioctl32.c	/^	__u32	type;	\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_format32	file:
type	v4l2-ctrls.h	/^	enum v4l2_ctrl_type type;$/;"	m	struct:v4l2_ctrl	typeref:enum:v4l2_ctrl::v4l2_ctrl_type
type	v4l2-ctrls.h	/^	enum v4l2_ctrl_type type;$/;"	m	struct:v4l2_ctrl_config	typeref:enum:v4l2_ctrl_config::v4l2_ctrl_type
type	v4l2-event.h	/^	u32			type;$/;"	m	struct:v4l2_subscribed_event
type	v4l2-mediabus.h	/^	enum v4l2_mbus_type type;$/;"	m	struct:v4l2_mbus_config	typeref:enum:v4l2_mbus_config::v4l2_mbus_type
type	v4l2-subdev.h	/^	u32 type;$/;"	m	struct:v4l2_decode_vbi_line
type	videobuf-core.h	/^	enum v4l2_buf_type         type;$/;"	m	struct:videobuf_queue	typeref:enum:videobuf_queue::v4l2_buf_type
type	videobuf2-core.h	/^	unsigned int			type;$/;"	m	struct:vb2_queue
type	videobuf2-core.h	/^	unsigned int		type;$/;"	m	struct:vb2_buffer
type	videodev2.h	/^	__u32				type;$/;"	m	struct:v4l2_event
type	videodev2.h	/^	__u32				type;$/;"	m	struct:v4l2_event_subscription
type	videodev2.h	/^	__u32			type;		\/* Frame interval type the device supports. *\/$/;"	m	struct:v4l2_frmivalenum
type	videodev2.h	/^	__u32			type;		\/* Frame size type the device supports. *\/$/;"	m	struct:v4l2_frmsizeenum
type	videodev2.h	/^	__u32			type;		\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_requestbuffers
type	videodev2.h	/^	__u32			type;	\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_crop
type	videodev2.h	/^	__u32			type;	\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_cropcap
type	videodev2.h	/^	__u32			type;	\/* enum v4l2_tuner_type *\/$/;"	m	struct:v4l2_modulator
type	videodev2.h	/^	__u32			type;	\/* enum v4l2_tuner_type *\/$/;"	m	struct:v4l2_tuner
type	videodev2.h	/^	__u32			type;$/;"	m	struct:v4l2_buffer
type	videodev2.h	/^	__u32			type;$/;"	m	struct:v4l2_selection
type	videodev2.h	/^	__u32		     type;	\/* enum v4l2_ctrl_type *\/$/;"	m	struct:v4l2_queryctrl
type	videodev2.h	/^	__u32		     type;$/;"	m	struct:v4l2_query_ext_ctrl
type	videodev2.h	/^	__u32		    type;              \/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_fmtdesc
type	videodev2.h	/^	__u32		type; \/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_exportbuffer
type	videodev2.h	/^	__u32	     type;		\/*  Type of input *\/$/;"	m	struct:v4l2_input
type	videodev2.h	/^	__u32	     type;		\/*  Type of output *\/$/;"	m	struct:v4l2_output
type	videodev2.h	/^	__u32	 type;			\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_streamparm
type	videodev2.h	/^	__u32	 type;$/;"	m	struct:v4l2_format
type	videodev2.h	/^	__u32	type;		\/* enum v4l2_buf_type *\/$/;"	m	struct:v4l2_sliced_vbi_cap
type	videodev2.h	/^	__u32	type;	\/* enum v4l2_tuner_type *\/$/;"	m	struct:v4l2_frequency
type	videodev2.h	/^	__u32	type;	\/* enum v4l2_tuner_type *\/$/;"	m	struct:v4l2_frequency_band
type	videodev2.h	/^	__u32	type;	\/* enum v4l2_tuner_type *\/$/;"	m	struct:v4l2_hw_freq_seek
type	videodev2.h	/^	__u32	type;$/;"	m	struct:v4l2_timecode
type	videodev2.h	/^	__u32 type; \/* Match type *\/$/;"	m	struct:v4l2_dbg_match
type	videodev2.h	/^	__u32 type;$/;"	m	struct:v4l2_dv_timings
type	videodev2.h	/^	__u32 type;$/;"	m	struct:v4l2_dv_timings_cap
type	videodev2.h	/^	__u32 type;$/;"	m	struct:v4l2_event_ctrl
type_ops	v4l2-ctrls.h	/^	const struct v4l2_ctrl_type_ops *type_ops;$/;"	m	struct:v4l2_ctrl	typeref:struct:v4l2_ctrl::v4l2_ctrl_type_ops
type_ops	v4l2-ctrls.h	/^	const struct v4l2_ctrl_type_ops *type_ops;$/;"	m	struct:v4l2_ctrl_config	typeref:struct:v4l2_ctrl_config::v4l2_ctrl_type_ops
typec_device_id	mod_devicetable.h	/^struct typec_device_id {$/;"	s
u	v4l2-compat-ioctl32.c	/^	} u;$/;"	m	struct:v4l2_event32	typeref:union:v4l2_event32::__anon42	file:
u	videodev2.h	/^	} u;$/;"	m	struct:v4l2_event	typeref:union:v4l2_event::__anon70
u16_data	property.h	/^			const u16 *u16_data;$/;"	m	union:property_entry::__anon28::__anon29
u16_data	property.h	/^			u16 u16_data;$/;"	m	union:property_entry::__anon28::__anon30
u32_data	property.h	/^			const u32 *u32_data;$/;"	m	union:property_entry::__anon28::__anon29
u32_data	property.h	/^			u32 u32_data;$/;"	m	union:property_entry::__anon28::__anon30
u64_data	property.h	/^			const u64 *u64_data;$/;"	m	union:property_entry::__anon28::__anon29
u64_data	property.h	/^			u64 u64_data;$/;"	m	union:property_entry::__anon28::__anon30
u64_to_user_ptr	kernel.h	74;"	d
u8_data	property.h	/^			const u8 *u8_data;$/;"	m	union:property_entry::__anon28::__anon29
u8_data	property.h	/^			u8 u8_data;$/;"	m	union:property_entry::__anon28::__anon30
udelay	i2c-algo-bit.h	/^	int udelay;		\/* half clock cycle time in us,$/;"	m	struct:i2c_algo_bit_data
uevent	device.h	/^	int (*uevent)(struct device *dev, struct kobj_uevent_env *env);$/;"	m	struct:bus_type
uevent	device.h	/^	int (*uevent)(struct device *dev, struct kobj_uevent_env *env);$/;"	m	struct:device_type
uevent_store	bus.c	/^static ssize_t uevent_store(struct device_driver *drv, const char *buf,$/;"	f	file:
ulpi_device_id	mod_devicetable.h	/^struct ulpi_device_id {$/;"	s
unbalanced_power	soc_camera.h	/^	bool unbalanced_power;$/;"	m	struct:soc_camera_link
unbalanced_power	soc_camera.h	/^	bool unbalanced_power;$/;"	m	struct:soc_camera_subdev_desc
unbind	v4l2-async.h	/^	void (*unbind)(struct v4l2_async_notifier *notifier,$/;"	m	struct:v4l2_async_notifier_operations
unbind_store	bus.c	/^static ssize_t unbind_store(struct device_driver *drv, const char *buf,$/;"	f	file:
unlock_bus	i2c.h	/^	void (*unlock_bus)(struct i2c_adapter *, unsigned int flags);$/;"	m	struct:i2c_lock_operations
unlocked_ioctl	v4l2-dev.h	/^	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);$/;"	m	struct:v4l2_file_operations
unmap_dmabuf	videobuf2-core.h	/^	void		(*unmap_dmabuf)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
unprepare	clk-provider.h	/^	void		(*unprepare)(struct clk_hw *hw);$/;"	m	struct:clk_ops
unprepare_recovery	i2c.h	/^	void (*unprepare_recovery)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info
unprepare_unused	clk-provider.h	/^	void		(*unprepare_unused)(struct clk_hw *hw);$/;"	m	struct:clk_ops
unreg_slave	i2c.h	/^	int (*unreg_slave)(struct i2c_client *client);$/;"	m	struct:i2c_algorithm
unregister_module_notifier	module.h	/^static inline int unregister_module_notifier(struct notifier_block *nb)$/;"	f
unregistered	cec.h	/^	bool unregistered;$/;"	m	struct:cec_devnode
unregistered	v4l2-subdev.h	/^	void (*unregistered)(struct v4l2_subdev *sd);$/;"	m	struct:v4l2_subdev_internal_ops
unsubscribe_event	v4l2-subdev.h	/^	int (*unsubscribe_event)(struct v4l2_subdev *sd, struct v4l2_fh *fh,$/;"	m	struct:v4l2_subdev_core_ops
unused	module.h	/^	bool unused;$/;"	m	struct:symsearch
unused	relocs_64.c	/^	Elf64_Xword unused;$/;"	m	union:__anon32	file:
unused_crcs	module.h	/^	const s32 *unused_crcs;$/;"	m	struct:module
unused_gpl_crcs	module.h	/^	const s32 *unused_gpl_crcs;$/;"	m	struct:module
unused_gpl_syms	module.h	/^	const struct kernel_symbol *unused_gpl_syms;$/;"	m	struct:module	typeref:struct:module::kernel_symbol
unused_syms	module.h	/^	const struct kernel_symbol *unused_syms;$/;"	m	struct:module	typeref:struct:module::kernel_symbol
update_from_auto_cluster	v4l2-ctrls.c	/^static void update_from_auto_cluster(struct v4l2_ctrl *master)$/;"	f	file:
upper_32_bits	kernel.h	229;"	d
usage	relocs_main.c	/^static void usage(void)$/;"	f	file:
usage_count	pm.h	/^	atomic_t		usage_count;$/;"	m	struct:dev_pm_info
usb_device_descriptor	testusb.c	/^struct usb_device_descriptor {$/;"	s	file:
usb_device_id	mod_devicetable.h	/^struct usb_device_id {$/;"	s
usb_device_speed	testusb.c	/^enum usb_device_speed {$/;"	g	file:
usb_dir_find	testusb.c	/^static const char *usb_dir_find(void)$/;"	f	file:
usb_interface_descriptor	testusb.c	/^struct usb_interface_descriptor {$/;"	s	file:
usbdev_ioctl	testusb.c	/^usbdev_ioctl (int fd, int ifno, unsigned request, void *param)$/;"	f	file:
usbtest_param	testusb.c	/^struct usbtest_param {$/;"	s	file:
use_autosuspend	pm.h	/^	unsigned int		use_autosuspend:1;$/;"	m	struct:dev_pm_info
use_count	media-entity.h	/^	int use_count;$/;"	m	struct:media_entity
use_count	soc_camera.h	/^	int use_count;$/;"	m	struct:soc_camera_device
use_count	v4l2-clk.h	/^	atomic_t use_count;$/;"	m	struct:v4l2_clk
user_flags	v4l2-ctrls.c	/^static u32 user_flags(const struct v4l2_ctrl *ctrl)$/;"	f	file:
user_formats	soc_camera.h	/^	struct soc_camera_format_xlate *user_formats;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::soc_camera_format_xlate
user_height	soc_camera.h	/^	s32 user_height;$/;"	m	struct:soc_camera_device
user_to_new	v4l2-ctrls.c	/^static int user_to_new(struct v4l2_ext_control *c,$/;"	f	file:
user_to_ptr	v4l2-ctrls.c	/^static int user_to_ptr(struct v4l2_ext_control *c,$/;"	f	file:
user_width	soc_camera.h	/^	s32 user_width;$/;"	m	struct:soc_camera_device
userbits	videodev2.h	/^	__u8	userbits[4];$/;"	m	struct:v4l2_timecode
userptr	v4l2-compat-ioctl32.c	/^		compat_long_t	userptr;$/;"	m	union:v4l2_plane32::__anon38	file:
userptr	v4l2-compat-ioctl32.c	/^		compat_long_t   userptr;$/;"	m	union:v4l2_buffer32::__anon39	file:
userptr	videobuf2-core.h	/^		unsigned long	userptr;$/;"	m	union:vb2_plane::__anon47
userptr	videodev2.h	/^		unsigned long	userptr;$/;"	m	union:v4l2_plane::__anon51
userptr	videodev2.h	/^		unsigned long   userptr;$/;"	m	union:v4l2_buffer::__anon52
users	dvb_demux.h	/^	int users;$/;"	m	struct:dvb_demux
users	dvbdev.h	/^	int users;$/;"	m	struct:dvb_device
users	rc-core.h	/^	u32				users;$/;"	m	struct:rc_dev
userspace_clients	i2c.h	/^	struct list_head userspace_clients;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::list_head
userspace_clients_lock	i2c.h	/^	struct mutex userspace_clients_lock;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_adapter::mutex
uuid	mod_devicetable.h	/^	uuid_le uuid;$/;"	m	struct:mei_cl_device_id
v4l	media.h	/^		} v4l;$/;"	m	union:media_entity_desc::__anon20	typeref:struct:media_entity_desc::__anon20::__anon23
v4l2_async_cleanup	v4l2-async.c	/^static void v4l2_async_cleanup(struct v4l2_subdev *sd)$/;"	f	file:
v4l2_async_find_match	v4l2-async.c	/^static struct v4l2_async_subdev *v4l2_async_find_match($/;"	f	file:
v4l2_async_find_subdev_notifier	v4l2-async.c	/^static struct v4l2_async_notifier *v4l2_async_find_subdev_notifier($/;"	f	file:
v4l2_async_match_notify	v4l2-async.c	/^static int v4l2_async_match_notify(struct v4l2_async_notifier *notifier,$/;"	f	file:
v4l2_async_match_type	v4l2-async.h	/^enum v4l2_async_match_type {$/;"	g
v4l2_async_notifier	v4l2-async.h	/^struct v4l2_async_notifier {$/;"	s
v4l2_async_notifier_call_bound	v4l2-async.c	/^static int v4l2_async_notifier_call_bound(struct v4l2_async_notifier *n,$/;"	f	file:
v4l2_async_notifier_call_complete	v4l2-async.c	/^static int v4l2_async_notifier_call_complete(struct v4l2_async_notifier *n)$/;"	f	file:
v4l2_async_notifier_call_unbind	v4l2-async.c	/^static void v4l2_async_notifier_call_unbind(struct v4l2_async_notifier *n,$/;"	f	file:
v4l2_async_notifier_can_complete	v4l2-async.c	/^static bool v4l2_async_notifier_can_complete($/;"	f	file:
v4l2_async_notifier_cleanup	v4l2-async.c	/^EXPORT_SYMBOL_GPL(v4l2_async_notifier_cleanup);$/;"	v
v4l2_async_notifier_cleanup	v4l2-async.c	/^void v4l2_async_notifier_cleanup(struct v4l2_async_notifier *notifier)$/;"	f
v4l2_async_notifier_find_v4l2_dev	v4l2-async.c	/^static struct v4l2_device *v4l2_async_notifier_find_v4l2_dev($/;"	f	file:
v4l2_async_notifier_fwnode_has_async_subdev	v4l2-async.c	/^static bool v4l2_async_notifier_fwnode_has_async_subdev($/;"	f	file:
v4l2_async_notifier_fwnode_parse_endpoint	v4l2-fwnode.c	/^static int v4l2_async_notifier_fwnode_parse_endpoint($/;"	f	file:
v4l2_async_notifier_operations	v4l2-async.h	/^struct v4l2_async_notifier_operations {$/;"	s
v4l2_async_notifier_parse_fwnode_endpoints	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_async_notifier_parse_fwnode_endpoints);$/;"	v
v4l2_async_notifier_parse_fwnode_endpoints	v4l2-fwnode.c	/^int v4l2_async_notifier_parse_fwnode_endpoints($/;"	f
v4l2_async_notifier_parse_fwnode_endpoints_by_port	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_async_notifier_parse_fwnode_endpoints_by_port);$/;"	v
v4l2_async_notifier_parse_fwnode_endpoints_by_port	v4l2-fwnode.c	/^int v4l2_async_notifier_parse_fwnode_endpoints_by_port($/;"	f
v4l2_async_notifier_parse_fwnode_sensor_common	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_async_notifier_parse_fwnode_sensor_common);$/;"	v
v4l2_async_notifier_parse_fwnode_sensor_common	v4l2-fwnode.c	/^int v4l2_async_notifier_parse_fwnode_sensor_common($/;"	f
v4l2_async_notifier_realloc	v4l2-fwnode.c	/^static int v4l2_async_notifier_realloc(struct v4l2_async_notifier *notifier,$/;"	f	file:
v4l2_async_notifier_register	v4l2-async.c	/^EXPORT_SYMBOL(v4l2_async_notifier_register);$/;"	v
v4l2_async_notifier_register	v4l2-async.c	/^int v4l2_async_notifier_register(struct v4l2_device *v4l2_dev,$/;"	f
v4l2_async_notifier_try_all_subdevs	v4l2-async.c	/^static int v4l2_async_notifier_try_all_subdevs($/;"	f	file:
v4l2_async_notifier_try_complete	v4l2-async.c	/^static int v4l2_async_notifier_try_complete($/;"	f	file:
v4l2_async_notifier_unbind_all_subdevs	v4l2-async.c	/^static void v4l2_async_notifier_unbind_all_subdevs($/;"	f	file:
v4l2_async_notifier_unregister	v4l2-async.c	/^EXPORT_SYMBOL(v4l2_async_notifier_unregister);$/;"	v
v4l2_async_notifier_unregister	v4l2-async.c	/^void v4l2_async_notifier_unregister(struct v4l2_async_notifier *notifier)$/;"	f
v4l2_async_register_subdev	v4l2-async.c	/^EXPORT_SYMBOL(v4l2_async_register_subdev);$/;"	v
v4l2_async_register_subdev	v4l2-async.c	/^int v4l2_async_register_subdev(struct v4l2_subdev *sd)$/;"	f
v4l2_async_register_subdev_sensor_common	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_async_register_subdev_sensor_common);$/;"	v
v4l2_async_register_subdev_sensor_common	v4l2-fwnode.c	/^int v4l2_async_register_subdev_sensor_common(struct v4l2_subdev *sd)$/;"	f
v4l2_async_subdev	v4l2-async.h	/^struct v4l2_async_subdev {$/;"	s
v4l2_async_subdev_notifier_register	v4l2-async.c	/^EXPORT_SYMBOL(v4l2_async_subdev_notifier_register);$/;"	v
v4l2_async_subdev_notifier_register	v4l2-async.c	/^int v4l2_async_subdev_notifier_register(struct v4l2_subdev *sd,$/;"	f
v4l2_async_unregister_subdev	v4l2-async.c	/^EXPORT_SYMBOL(v4l2_async_unregister_subdev);$/;"	v
v4l2_async_unregister_subdev	v4l2-async.c	/^void v4l2_async_unregister_subdev(struct v4l2_subdev *sd)$/;"	f
v4l2_audio	videodev2.h	/^struct v4l2_audio {$/;"	s
v4l2_audioout	videodev2.h	/^struct v4l2_audioout {$/;"	s
v4l2_bt_timings	videodev2.h	/^struct v4l2_bt_timings {$/;"	s
v4l2_bt_timings_cap	videodev2.h	/^struct v4l2_bt_timings_cap {$/;"	s
v4l2_buf_type	videodev2.h	/^enum v4l2_buf_type {$/;"	g
v4l2_buffer	videodev2.h	/^struct v4l2_buffer {$/;"	s
v4l2_buffer32	v4l2-compat-ioctl32.c	/^struct v4l2_buffer32 {$/;"	s	file:
v4l2_calc_aspect_ratio	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_calc_aspect_ratio);$/;"	v
v4l2_calc_aspect_ratio	v4l2-dv-timings.c	/^struct v4l2_fract v4l2_calc_aspect_ratio(u8 hor_landscape, u8 vert_portrait)$/;"	f
v4l2_capability	videodev2.h	/^struct v4l2_capability {$/;"	s
v4l2_captureparm	videodev2.h	/^struct v4l2_captureparm {$/;"	s
v4l2_check_dv_timings_fnc	v4l2-dv-timings.h	/^typedef bool v4l2_check_dv_timings_fnc(const struct v4l2_dv_timings *t, void *handle);$/;"	t
v4l2_clip	videodev2.h	/^struct v4l2_clip {$/;"	s
v4l2_clip32	v4l2-compat-ioctl32.c	/^struct v4l2_clip32 {$/;"	s	file:
v4l2_clk	v4l2-clk.h	/^struct v4l2_clk {$/;"	s
v4l2_clk_disable	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_disable);$/;"	v
v4l2_clk_disable	v4l2-clk.c	/^void v4l2_clk_disable(struct v4l2_clk *clk)$/;"	f
v4l2_clk_enable	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_enable);$/;"	v
v4l2_clk_enable	v4l2-clk.c	/^int v4l2_clk_enable(struct v4l2_clk *clk)$/;"	f
v4l2_clk_find	v4l2-clk.c	/^static struct v4l2_clk *v4l2_clk_find(const char *dev_id)$/;"	f	file:
v4l2_clk_fixed	v4l2-clk.c	/^struct v4l2_clk_fixed {$/;"	s	file:
v4l2_clk_get	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_get);$/;"	v
v4l2_clk_get	v4l2-clk.c	/^struct v4l2_clk *v4l2_clk_get(struct device *dev, const char *id)$/;"	f
v4l2_clk_get_rate	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_get_rate);$/;"	v
v4l2_clk_get_rate	v4l2-clk.c	/^unsigned long v4l2_clk_get_rate(struct v4l2_clk *clk)$/;"	f
v4l2_clk_lock_driver	v4l2-clk.c	/^static int v4l2_clk_lock_driver(struct v4l2_clk *clk)$/;"	f	file:
v4l2_clk_name_i2c	v4l2-clk.h	70;"	d
v4l2_clk_name_of	v4l2-clk.h	73;"	d
v4l2_clk_ops	v4l2-clk.h	/^struct v4l2_clk_ops {$/;"	s
v4l2_clk_put	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_put);$/;"	v
v4l2_clk_put	v4l2-clk.c	/^void v4l2_clk_put(struct v4l2_clk *clk)$/;"	f
v4l2_clk_register	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_register);$/;"	v
v4l2_clk_register	v4l2-clk.c	/^struct v4l2_clk *v4l2_clk_register(const struct v4l2_clk_ops *ops,$/;"	f
v4l2_clk_register_fixed	v4l2-clk.h	/^static inline struct v4l2_clk *v4l2_clk_register_fixed(const char *dev_id,$/;"	f
v4l2_clk_set_rate	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_set_rate);$/;"	v
v4l2_clk_set_rate	v4l2-clk.c	/^int v4l2_clk_set_rate(struct v4l2_clk *clk, unsigned long rate)$/;"	f
v4l2_clk_unlock_driver	v4l2-clk.c	/^static void v4l2_clk_unlock_driver(struct v4l2_clk *clk)$/;"	f	file:
v4l2_clk_unregister	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_unregister);$/;"	v
v4l2_clk_unregister	v4l2-clk.c	/^void v4l2_clk_unregister(struct v4l2_clk *clk)$/;"	f
v4l2_clk_unregister_fixed	v4l2-clk.c	/^EXPORT_SYMBOL(v4l2_clk_unregister_fixed);$/;"	v
v4l2_clk_unregister_fixed	v4l2-clk.c	/^void v4l2_clk_unregister_fixed(struct v4l2_clk *clk)$/;"	f
v4l2_colorspace	videodev2.h	/^enum v4l2_colorspace {$/;"	g
v4l2_compat_ioctl32	v4l2-compat-ioctl32.c	/^EXPORT_SYMBOL_GPL(v4l2_compat_ioctl32);$/;"	v
v4l2_compat_ioctl32	v4l2-compat-ioctl32.c	/^long v4l2_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f
v4l2_control	videodev2.h	/^struct v4l2_control {$/;"	s
v4l2_create_buffers	videodev2.h	/^struct v4l2_create_buffers {$/;"	s
v4l2_create_buffers32	v4l2-compat-ioctl32.c	/^struct v4l2_create_buffers32 {$/;"	s	file:
v4l2_crop	videodev2.h	/^struct v4l2_crop {$/;"	s
v4l2_cropcap	videodev2.h	/^struct v4l2_cropcap {$/;"	s
v4l2_ctrl	v4l2-ctrls.h	/^struct v4l2_ctrl {$/;"	s
v4l2_ctrl_activate	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_activate);$/;"	v
v4l2_ctrl_activate	v4l2-ctrls.c	/^void v4l2_ctrl_activate(struct v4l2_ctrl *ctrl, bool active)$/;"	f
v4l2_ctrl_add_event	v4l2-ctrls.c	/^static int v4l2_ctrl_add_event(struct v4l2_subscribed_event *sev, unsigned elems)$/;"	f	file:
v4l2_ctrl_add_handler	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_add_handler);$/;"	v
v4l2_ctrl_add_handler	v4l2-ctrls.c	/^int v4l2_ctrl_add_handler(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_auto_cluster	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_auto_cluster);$/;"	v
v4l2_ctrl_auto_cluster	v4l2-ctrls.c	/^void v4l2_ctrl_auto_cluster(unsigned ncontrols, struct v4l2_ctrl **controls,$/;"	f
v4l2_ctrl_cluster	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_cluster);$/;"	v
v4l2_ctrl_cluster	v4l2-ctrls.c	/^void v4l2_ctrl_cluster(unsigned ncontrols, struct v4l2_ctrl **controls)$/;"	f
v4l2_ctrl_config	v4l2-ctrls.h	/^struct v4l2_ctrl_config {$/;"	s
v4l2_ctrl_del_event	v4l2-ctrls.c	/^static void v4l2_ctrl_del_event(struct v4l2_subscribed_event *sev)$/;"	f	file:
v4l2_ctrl_fill	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_fill);$/;"	v
v4l2_ctrl_fill	v4l2-ctrls.c	/^void v4l2_ctrl_fill(u32 id, const char **name, enum v4l2_ctrl_type *type,$/;"	f
v4l2_ctrl_filter	v4l2-ctrls.h	/^typedef bool (*v4l2_ctrl_filter)(const struct v4l2_ctrl *ctrl);$/;"	t
v4l2_ctrl_find	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_find);$/;"	v
v4l2_ctrl_find	v4l2-ctrls.c	/^struct v4l2_ctrl *v4l2_ctrl_find(struct v4l2_ctrl_handler *hdl, u32 id)$/;"	f
v4l2_ctrl_g_ctrl	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_g_ctrl);$/;"	v
v4l2_ctrl_g_ctrl	v4l2-ctrls.c	/^s32 v4l2_ctrl_g_ctrl(struct v4l2_ctrl *ctrl)$/;"	f
v4l2_ctrl_g_ctrl_int64	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_g_ctrl_int64);$/;"	v
v4l2_ctrl_g_ctrl_int64	v4l2-ctrls.c	/^s64 v4l2_ctrl_g_ctrl_int64(struct v4l2_ctrl *ctrl)$/;"	f
v4l2_ctrl_get_int_menu	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_get_int_menu);$/;"	v
v4l2_ctrl_get_int_menu	v4l2-ctrls.c	/^const s64 *v4l2_ctrl_get_int_menu(u32 id, u32 *len)$/;"	f
v4l2_ctrl_get_menu	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_get_menu);$/;"	v
v4l2_ctrl_get_menu	v4l2-ctrls.c	/^const char * const *v4l2_ctrl_get_menu(u32 id)$/;"	f
v4l2_ctrl_get_name	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_get_name);$/;"	v
v4l2_ctrl_get_name	v4l2-ctrls.c	/^const char *v4l2_ctrl_get_name(u32 id)$/;"	f
v4l2_ctrl_grab	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_grab);$/;"	v
v4l2_ctrl_grab	v4l2-ctrls.c	/^void v4l2_ctrl_grab(struct v4l2_ctrl *ctrl, bool grabbed)$/;"	f
v4l2_ctrl_handler	v4l2-ctrls.h	/^struct v4l2_ctrl_handler {$/;"	s
v4l2_ctrl_handler_free	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_handler_free);$/;"	v
v4l2_ctrl_handler_free	v4l2-ctrls.c	/^void v4l2_ctrl_handler_free(struct v4l2_ctrl_handler *hdl)$/;"	f
v4l2_ctrl_handler_init	v4l2-ctrls.h	422;"	d
v4l2_ctrl_handler_init	v4l2-ctrls.h	434;"	d
v4l2_ctrl_handler_init_class	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_handler_init_class);$/;"	v
v4l2_ctrl_handler_init_class	v4l2-ctrls.c	/^int v4l2_ctrl_handler_init_class(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_handler_log_status	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_handler_log_status);$/;"	v
v4l2_ctrl_handler_log_status	v4l2-ctrls.c	/^void v4l2_ctrl_handler_log_status(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_handler_setup	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_handler_setup);$/;"	v
v4l2_ctrl_handler_setup	v4l2-ctrls.c	/^int v4l2_ctrl_handler_setup(struct v4l2_ctrl_handler *hdl)$/;"	f
v4l2_ctrl_helper	v4l2-ctrls.c	/^struct v4l2_ctrl_helper {$/;"	s	file:
v4l2_ctrl_lock	v4l2-ctrls.h	/^static inline void v4l2_ctrl_lock(struct v4l2_ctrl *ctrl)$/;"	f
v4l2_ctrl_log_status	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_log_status);$/;"	v
v4l2_ctrl_log_status	v4l2-ctrls.c	/^int v4l2_ctrl_log_status(struct file *file, void *fh)$/;"	f
v4l2_ctrl_merge	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_merge);$/;"	v
v4l2_ctrl_merge	v4l2-ctrls.c	/^void v4l2_ctrl_merge(const struct v4l2_event *old, struct v4l2_event *new)$/;"	f
v4l2_ctrl_modify_range	v4l2-ctrls.h	/^static inline int v4l2_ctrl_modify_range(struct v4l2_ctrl *ctrl,$/;"	f
v4l2_ctrl_new	v4l2-ctrls.c	/^static struct v4l2_ctrl *v4l2_ctrl_new(struct v4l2_ctrl_handler *hdl,$/;"	f	file:
v4l2_ctrl_new_custom	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_new_custom);$/;"	v
v4l2_ctrl_new_custom	v4l2-ctrls.c	/^struct v4l2_ctrl *v4l2_ctrl_new_custom(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_new_int_menu	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_new_int_menu);$/;"	v
v4l2_ctrl_new_int_menu	v4l2-ctrls.c	/^struct v4l2_ctrl *v4l2_ctrl_new_int_menu(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_new_std	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_new_std);$/;"	v
v4l2_ctrl_new_std	v4l2-ctrls.c	/^struct v4l2_ctrl *v4l2_ctrl_new_std(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_new_std_menu	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_new_std_menu);$/;"	v
v4l2_ctrl_new_std_menu	v4l2-ctrls.c	/^struct v4l2_ctrl *v4l2_ctrl_new_std_menu(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_new_std_menu_items	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_new_std_menu_items);$/;"	v
v4l2_ctrl_new_std_menu_items	v4l2-ctrls.c	/^struct v4l2_ctrl *v4l2_ctrl_new_std_menu_items(struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_ctrl_notify	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_notify);$/;"	v
v4l2_ctrl_notify	v4l2-ctrls.c	/^void v4l2_ctrl_notify(struct v4l2_ctrl *ctrl, v4l2_ctrl_notify_fnc notify, void *priv)$/;"	f
v4l2_ctrl_notify_fnc	v4l2-ctrls.h	/^typedef void (*v4l2_ctrl_notify_fnc)(struct v4l2_ctrl *ctrl, void *priv);$/;"	t
v4l2_ctrl_ops	v4l2-ctrls.h	/^struct v4l2_ctrl_ops {$/;"	s
v4l2_ctrl_poll	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_poll);$/;"	v
v4l2_ctrl_poll	v4l2-ctrls.c	/^__poll_t v4l2_ctrl_poll(struct file *file, struct poll_table_struct *wait)$/;"	f
v4l2_ctrl_ptr	v4l2-ctrls.h	/^union v4l2_ctrl_ptr {$/;"	u
v4l2_ctrl_query_fill	v4l2-common.c	/^EXPORT_SYMBOL(v4l2_ctrl_query_fill);$/;"	v
v4l2_ctrl_query_fill	v4l2-common.c	/^int v4l2_ctrl_query_fill(struct v4l2_queryctrl *qctrl, s32 _min, s32 _max, s32 _step, s32 _def)$/;"	f
v4l2_ctrl_radio_filter	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_radio_filter);$/;"	v
v4l2_ctrl_radio_filter	v4l2-ctrls.c	/^bool v4l2_ctrl_radio_filter(const struct v4l2_ctrl *ctrl)$/;"	f
v4l2_ctrl_ref	v4l2-ctrls.h	/^struct v4l2_ctrl_ref {$/;"	s
v4l2_ctrl_replace	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_replace);$/;"	v
v4l2_ctrl_replace	v4l2-ctrls.c	/^void v4l2_ctrl_replace(struct v4l2_event *old, const struct v4l2_event *new)$/;"	f
v4l2_ctrl_s_ctrl	v4l2-ctrls.h	/^static inline int v4l2_ctrl_s_ctrl(struct v4l2_ctrl *ctrl, s32 val)$/;"	f
v4l2_ctrl_s_ctrl_int64	v4l2-ctrls.h	/^static inline int v4l2_ctrl_s_ctrl_int64(struct v4l2_ctrl *ctrl, s64 val)$/;"	f
v4l2_ctrl_s_ctrl_string	v4l2-ctrls.h	/^static inline int v4l2_ctrl_s_ctrl_string(struct v4l2_ctrl *ctrl, const char *s)$/;"	f
v4l2_ctrl_sub_ev_ops	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_sub_ev_ops);$/;"	v
v4l2_ctrl_sub_ev_ops	v4l2-ctrls.c	/^const struct v4l2_subscribed_event_ops v4l2_ctrl_sub_ev_ops = {$/;"	v	typeref:struct:v4l2_subscribed_event_ops
v4l2_ctrl_subdev_log_status	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_subdev_log_status);$/;"	v
v4l2_ctrl_subdev_log_status	v4l2-ctrls.c	/^int v4l2_ctrl_subdev_log_status(struct v4l2_subdev *sd)$/;"	f
v4l2_ctrl_subdev_subscribe_event	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_subdev_subscribe_event);$/;"	v
v4l2_ctrl_subdev_subscribe_event	v4l2-ctrls.c	/^int v4l2_ctrl_subdev_subscribe_event(struct v4l2_subdev *sd, struct v4l2_fh *fh,$/;"	f
v4l2_ctrl_subscribe_event	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_ctrl_subscribe_event);$/;"	v
v4l2_ctrl_subscribe_event	v4l2-ctrls.c	/^int v4l2_ctrl_subscribe_event(struct v4l2_fh *fh,$/;"	f
v4l2_ctrl_to_v4l2_flash	v4l2-flash-led-class.h	/^static inline struct v4l2_flash *v4l2_ctrl_to_v4l2_flash(struct v4l2_ctrl *c)$/;"	f
v4l2_ctrl_type	videodev2.h	/^enum v4l2_ctrl_type {$/;"	g
v4l2_ctrl_type_ops	v4l2-ctrls.h	/^struct v4l2_ctrl_type_ops {$/;"	s
v4l2_ctrl_unlock	v4l2-ctrls.h	/^static inline void v4l2_ctrl_unlock(struct v4l2_ctrl *ctrl)$/;"	f
v4l2_dbg	v4l2-common.h	82;"	d
v4l2_dbg_chip_info	videodev2.h	/^struct v4l2_dbg_chip_info {$/;"	s
v4l2_dbg_match	videodev2.h	/^struct v4l2_dbg_match {$/;"	s
v4l2_dbg_register	videodev2.h	/^struct v4l2_dbg_register {$/;"	s
v4l2_decode_vbi_line	v4l2-subdev.h	/^struct v4l2_decode_vbi_line {$/;"	s
v4l2_decoder_cmd	videodev2.h	/^struct v4l2_decoder_cmd {$/;"	s
v4l2_detect_cvt	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_detect_cvt);$/;"	v
v4l2_detect_cvt	v4l2-dv-timings.c	/^bool v4l2_detect_cvt(unsigned frame_height,$/;"	f
v4l2_detect_gtf	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_detect_gtf);$/;"	v
v4l2_detect_gtf	v4l2-dv-timings.c	/^bool v4l2_detect_gtf(unsigned frame_height,$/;"	f
v4l2_dev	soc_camera.h	/^	struct v4l2_device v4l2_dev;$/;"	m	struct:soc_camera_host	typeref:struct:soc_camera_host::v4l2_device
v4l2_dev	v4l2-async.h	/^	struct v4l2_device *v4l2_dev;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::v4l2_device
v4l2_dev	v4l2-dev.h	/^	struct v4l2_device *v4l2_dev;$/;"	m	struct:video_device	typeref:struct:video_device::v4l2_device
v4l2_dev	v4l2-subdev.h	/^	struct v4l2_device *v4l2_dev;$/;"	m	struct:v4l2_subdev	typeref:struct:v4l2_subdev::v4l2_device
v4l2_device	v4l2-device.h	/^struct v4l2_device {$/;"	s
v4l2_device_call_all	v4l2-device.h	370;"	d
v4l2_device_call_until_err	v4l2-device.h	403;"	d
v4l2_device_disconnect	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_disconnect);$/;"	v
v4l2_device_disconnect	v4l2-device.c	/^void v4l2_device_disconnect(struct v4l2_device *v4l2_dev)$/;"	f
v4l2_device_for_each_subdev	v4l2-device.h	228;"	d
v4l2_device_get	v4l2-device.h	/^static inline void v4l2_device_get(struct v4l2_device *v4l2_dev)$/;"	f
v4l2_device_has_op	v4l2-device.h	484;"	d
v4l2_device_mask_call_all	v4l2-device.h	430;"	d
v4l2_device_mask_call_until_err	v4l2-device.h	462;"	d
v4l2_device_mask_has_op	v4l2-device.h	512;"	d
v4l2_device_put	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_put);$/;"	v
v4l2_device_put	v4l2-device.c	/^int v4l2_device_put(struct v4l2_device *v4l2_dev)$/;"	f
v4l2_device_register	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_register);$/;"	v
v4l2_device_register	v4l2-device.c	/^int v4l2_device_register(struct device *dev, struct v4l2_device *v4l2_dev)$/;"	f
v4l2_device_register_subdev	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_register_subdev);$/;"	v
v4l2_device_register_subdev	v4l2-device.c	/^int v4l2_device_register_subdev(struct v4l2_device *v4l2_dev,$/;"	f
v4l2_device_register_subdev_nodes	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_register_subdev_nodes);$/;"	v
v4l2_device_register_subdev_nodes	v4l2-device.c	/^int v4l2_device_register_subdev_nodes(struct v4l2_device *v4l2_dev)$/;"	f
v4l2_device_release	v4l2-dev.c	/^static void v4l2_device_release(struct device *cd)$/;"	f	file:
v4l2_device_release	v4l2-device.c	/^static void v4l2_device_release(struct kref *ref)$/;"	f	file:
v4l2_device_release_subdev_node	v4l2-device.c	/^static void v4l2_device_release_subdev_node(struct video_device *vdev)$/;"	f	file:
v4l2_device_set_name	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_set_name);$/;"	v
v4l2_device_set_name	v4l2-device.c	/^int v4l2_device_set_name(struct v4l2_device *v4l2_dev, const char *basename,$/;"	f
v4l2_device_unregister	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_unregister);$/;"	v
v4l2_device_unregister	v4l2-device.c	/^void v4l2_device_unregister(struct v4l2_device *v4l2_dev)$/;"	f
v4l2_device_unregister_subdev	v4l2-device.c	/^EXPORT_SYMBOL_GPL(v4l2_device_unregister_subdev);$/;"	v
v4l2_device_unregister_subdev	v4l2-device.c	/^void v4l2_device_unregister_subdev(struct v4l2_subdev *sd)$/;"	f
v4l2_disable_ioctl	v4l2-dev.h	/^static inline void v4l2_disable_ioctl(struct video_device *vdev,$/;"	f
v4l2_dv_timings	videodev2.h	/^struct v4l2_dv_timings {$/;"	s
v4l2_dv_timings_aspect_ratio	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_dv_timings_aspect_ratio);$/;"	v
v4l2_dv_timings_aspect_ratio	v4l2-dv-timings.c	/^struct v4l2_fract v4l2_dv_timings_aspect_ratio(const struct v4l2_dv_timings *t)$/;"	f
v4l2_dv_timings_cap	videodev2.h	/^struct v4l2_dv_timings_cap {$/;"	s
v4l2_dv_timings_presets	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_dv_timings_presets);$/;"	v
v4l2_dv_timings_presets	v4l2-dv-timings.c	/^const struct v4l2_dv_timings v4l2_dv_timings_presets[] = {$/;"	v	typeref:struct:v4l2_dv_timings
v4l2_edid32	v4l2-compat-ioctl32.c	/^struct v4l2_edid32 {$/;"	s	file:
v4l2_enc_idx	videodev2.h	/^struct v4l2_enc_idx {$/;"	s
v4l2_enc_idx_entry	videodev2.h	/^struct v4l2_enc_idx_entry {$/;"	s
v4l2_encoder_cmd	videodev2.h	/^struct v4l2_encoder_cmd {$/;"	s
v4l2_enum_dv_timings	videodev2.h	/^struct v4l2_enum_dv_timings {$/;"	s
v4l2_enum_dv_timings_cap	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_enum_dv_timings_cap);$/;"	v
v4l2_enum_dv_timings_cap	v4l2-dv-timings.c	/^int v4l2_enum_dv_timings_cap(struct v4l2_enum_dv_timings *t,$/;"	f
v4l2_err	v4l2-common.h	71;"	d
v4l2_event	videodev2.h	/^struct v4l2_event {$/;"	s
v4l2_event32	v4l2-compat-ioctl32.c	/^struct v4l2_event32 {$/;"	s	file:
v4l2_event_ctrl	videodev2.h	/^struct v4l2_event_ctrl {$/;"	s
v4l2_event_dequeue	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_dequeue);$/;"	v
v4l2_event_dequeue	v4l2-event.c	/^int v4l2_event_dequeue(struct v4l2_fh *fh, struct v4l2_event *event,$/;"	f
v4l2_event_frame_sync	videodev2.h	/^struct v4l2_event_frame_sync {$/;"	s
v4l2_event_motion_det	videodev2.h	/^struct v4l2_event_motion_det {$/;"	s
v4l2_event_pending	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_pending);$/;"	v
v4l2_event_pending	v4l2-event.c	/^int v4l2_event_pending(struct v4l2_fh *fh)$/;"	f
v4l2_event_queue	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_queue);$/;"	v
v4l2_event_queue	v4l2-event.c	/^void v4l2_event_queue(struct video_device *vdev, const struct v4l2_event *ev)$/;"	f
v4l2_event_queue_fh	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_queue_fh);$/;"	v
v4l2_event_queue_fh	v4l2-event.c	/^void v4l2_event_queue_fh(struct v4l2_fh *fh, const struct v4l2_event *ev)$/;"	f
v4l2_event_src_ch_ops	v4l2-event.c	/^static const struct v4l2_subscribed_event_ops v4l2_event_src_ch_ops = {$/;"	v	typeref:struct:v4l2_subscribed_event_ops	file:
v4l2_event_src_change	videodev2.h	/^struct v4l2_event_src_change {$/;"	s
v4l2_event_src_merge	v4l2-event.c	/^static void v4l2_event_src_merge(const struct v4l2_event *old,$/;"	f	file:
v4l2_event_src_replace	v4l2-event.c	/^static void v4l2_event_src_replace(struct v4l2_event *old,$/;"	f	file:
v4l2_event_subdev_unsubscribe	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_subdev_unsubscribe);$/;"	v
v4l2_event_subdev_unsubscribe	v4l2-event.c	/^int v4l2_event_subdev_unsubscribe(struct v4l2_subdev *sd, struct v4l2_fh *fh,$/;"	f
v4l2_event_subscribe	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_subscribe);$/;"	v
v4l2_event_subscribe	v4l2-event.c	/^int v4l2_event_subscribe(struct v4l2_fh *fh,$/;"	f
v4l2_event_subscribed	v4l2-event.c	/^static struct v4l2_subscribed_event *v4l2_event_subscribed($/;"	f	file:
v4l2_event_subscription	videodev2.h	/^struct v4l2_event_subscription {$/;"	s
v4l2_event_unsubscribe	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_unsubscribe);$/;"	v
v4l2_event_unsubscribe	v4l2-event.c	/^int v4l2_event_unsubscribe(struct v4l2_fh *fh,$/;"	f
v4l2_event_unsubscribe_all	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_event_unsubscribe_all);$/;"	v
v4l2_event_unsubscribe_all	v4l2-event.c	/^void v4l2_event_unsubscribe_all(struct v4l2_fh *fh)$/;"	f
v4l2_event_vsync	videodev2.h	/^struct v4l2_event_vsync {$/;"	s
v4l2_exportbuffer	videodev2.h	/^struct v4l2_exportbuffer {$/;"	s
v4l2_ext_control	videodev2.h	/^struct v4l2_ext_control {$/;"	s
v4l2_ext_control32	v4l2-compat-ioctl32.c	/^struct v4l2_ext_control32 {$/;"	s	file:
v4l2_ext_controls	videodev2.h	/^struct v4l2_ext_controls {$/;"	s
v4l2_ext_controls32	v4l2-compat-ioctl32.c	/^struct v4l2_ext_controls32 {$/;"	s	file:
v4l2_fh	v4l2-fh.h	/^struct v4l2_fh {$/;"	s
v4l2_fh_add	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_add);$/;"	v
v4l2_fh_add	v4l2-fh.c	/^void v4l2_fh_add(struct v4l2_fh *fh)$/;"	f
v4l2_fh_del	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_del);$/;"	v
v4l2_fh_del	v4l2-fh.c	/^void v4l2_fh_del(struct v4l2_fh *fh)$/;"	f
v4l2_fh_exit	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_exit);$/;"	v
v4l2_fh_exit	v4l2-fh.c	/^void v4l2_fh_exit(struct v4l2_fh *fh)$/;"	f
v4l2_fh_init	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_init);$/;"	v
v4l2_fh_init	v4l2-fh.c	/^void v4l2_fh_init(struct v4l2_fh *fh, struct video_device *vdev)$/;"	f
v4l2_fh_is_singular	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_is_singular);$/;"	v
v4l2_fh_is_singular	v4l2-fh.c	/^int v4l2_fh_is_singular(struct v4l2_fh *fh)$/;"	f
v4l2_fh_is_singular_file	v4l2-fh.h	/^static inline int v4l2_fh_is_singular_file(struct file *filp)$/;"	f
v4l2_fh_open	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_open);$/;"	v
v4l2_fh_open	v4l2-fh.c	/^int v4l2_fh_open(struct file *filp)$/;"	f
v4l2_fh_release	v4l2-fh.c	/^EXPORT_SYMBOL_GPL(v4l2_fh_release);$/;"	v
v4l2_fh_release	v4l2-fh.c	/^int v4l2_fh_release(struct file *filp)$/;"	f
v4l2_field	videodev2.h	/^enum v4l2_field {$/;"	g
v4l2_field_names	v4l2-ioctl.c	/^EXPORT_SYMBOL(v4l2_field_names);$/;"	v
v4l2_field_names	v4l2-ioctl.c	/^const char *v4l2_field_names[] = {$/;"	v
v4l2_file_operations	v4l2-dev.h	/^struct v4l2_file_operations {$/;"	s
v4l2_fill_mbus_format	v4l2-mediabus.h	/^static inline void v4l2_fill_mbus_format(struct v4l2_mbus_framefmt *mbus_fmt,$/;"	f
v4l2_fill_mbus_format_mplane	v4l2-mediabus.h	/^static inline void v4l2_fill_mbus_format_mplane($/;"	f
v4l2_fill_pix_format	v4l2-mediabus.h	/^static inline void v4l2_fill_pix_format(struct v4l2_pix_format *pix_fmt,$/;"	f
v4l2_fill_pix_format_mplane	v4l2-mediabus.h	/^static inline void v4l2_fill_pix_format_mplane($/;"	f
v4l2_find_dv_timings_cap	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_find_dv_timings_cap);$/;"	v
v4l2_find_dv_timings_cap	v4l2-dv-timings.c	/^bool v4l2_find_dv_timings_cap(struct v4l2_dv_timings *t,$/;"	f
v4l2_find_dv_timings_cea861_vic	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_find_dv_timings_cea861_vic);$/;"	v
v4l2_find_dv_timings_cea861_vic	v4l2-dv-timings.c	/^bool v4l2_find_dv_timings_cea861_vic(struct v4l2_dv_timings *t, u8 vic)$/;"	f
v4l2_find_nearest_size	v4l2-common.h	336;"	d
v4l2_flash	v4l2-flash-led-class.h	/^struct v4l2_flash {$/;"	s
v4l2_flash_close	v4l2-flash-led-class.c	/^static int v4l2_flash_close(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)$/;"	f	file:
v4l2_flash_config	v4l2-flash-led-class.h	/^struct v4l2_flash_config {$/;"	s
v4l2_flash_ctrl_data	v4l2-flash-led-class.h	/^struct v4l2_flash_ctrl_data {$/;"	s
v4l2_flash_ctrl_ops	v4l2-flash-led-class.c	/^static const struct v4l2_ctrl_ops v4l2_flash_ctrl_ops = {$/;"	v	typeref:struct:v4l2_ctrl_ops	file:
v4l2_flash_g_volatile_ctrl	v4l2-flash-led-class.c	/^static int v4l2_flash_g_volatile_ctrl(struct v4l2_ctrl *c)$/;"	f	file:
v4l2_flash_indicator_init	v4l2-flash-led-class.c	/^EXPORT_SYMBOL_GPL(v4l2_flash_indicator_init);$/;"	v
v4l2_flash_indicator_init	v4l2-flash-led-class.c	/^struct v4l2_flash *v4l2_flash_indicator_init($/;"	f
v4l2_flash_indicator_init	v4l2-flash-led-class.h	/^static inline struct v4l2_flash *v4l2_flash_indicator_init($/;"	f
v4l2_flash_init	v4l2-flash-led-class.c	/^EXPORT_SYMBOL_GPL(v4l2_flash_init);$/;"	v
v4l2_flash_init	v4l2-flash-led-class.c	/^struct v4l2_flash *v4l2_flash_init($/;"	f
v4l2_flash_init	v4l2-flash-led-class.h	/^static inline struct v4l2_flash *v4l2_flash_init($/;"	f
v4l2_flash_init_controls	v4l2-flash-led-class.c	/^static int v4l2_flash_init_controls(struct v4l2_flash *v4l2_flash,$/;"	f	file:
v4l2_flash_open	v4l2-flash-led-class.c	/^static int v4l2_flash_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)$/;"	f	file:
v4l2_flash_ops	v4l2-flash-led-class.h	/^struct v4l2_flash_ops {$/;"	s
v4l2_flash_release	v4l2-flash-led-class.c	/^EXPORT_SYMBOL_GPL(v4l2_flash_release);$/;"	v
v4l2_flash_release	v4l2-flash-led-class.c	/^void v4l2_flash_release(struct v4l2_flash *v4l2_flash)$/;"	f
v4l2_flash_release	v4l2-flash-led-class.h	/^static inline void v4l2_flash_release(struct v4l2_flash *v4l2_flash)$/;"	f
v4l2_flash_s_ctrl	v4l2-flash-led-class.c	/^static int v4l2_flash_s_ctrl(struct v4l2_ctrl *c)$/;"	f	file:
v4l2_flash_set_led_brightness	v4l2-flash-led-class.c	/^static void v4l2_flash_set_led_brightness(struct v4l2_flash *v4l2_flash,$/;"	f	file:
v4l2_flash_subdev_internal_ops	v4l2-flash-led-class.c	/^static const struct v4l2_subdev_internal_ops v4l2_flash_subdev_internal_ops = {$/;"	v	typeref:struct:v4l2_subdev_internal_ops	file:
v4l2_flash_subdev_ops	v4l2-flash-led-class.c	/^static const struct v4l2_subdev_ops v4l2_flash_subdev_ops;$/;"	v	typeref:struct:v4l2_subdev_ops	file:
v4l2_flash_update_led_brightness	v4l2-flash-led-class.c	/^static int v4l2_flash_update_led_brightness(struct v4l2_flash *v4l2_flash,$/;"	f	file:
v4l2_fmtdesc	videodev2.h	/^struct v4l2_fmtdesc {$/;"	s
v4l2_fops	v4l2-dev.c	/^static const struct file_operations v4l2_fops = {$/;"	v	typeref:struct:file_operations	file:
v4l2_format	videodev2.h	/^struct v4l2_format {$/;"	s
v4l2_format32	v4l2-compat-ioctl32.c	/^struct v4l2_format32 {$/;"	s	file:
v4l2_fourcc	videodev2.h	81;"	d
v4l2_fourcc_be	videodev2.h	83;"	d
v4l2_fract	videodev2.h	/^struct v4l2_fract {$/;"	s
v4l2_framebuffer	videodev2.h	/^struct v4l2_framebuffer {$/;"	s
v4l2_framebuffer32	v4l2-compat-ioctl32.c	/^struct v4l2_framebuffer32 {$/;"	s	file:
v4l2_frequency	videodev2.h	/^struct v4l2_frequency {$/;"	s
v4l2_frequency_band	videodev2.h	/^struct v4l2_frequency_band {$/;"	s
v4l2_frmival_stepwise	videodev2.h	/^struct v4l2_frmival_stepwise {$/;"	s
v4l2_frmivalenum	videodev2.h	/^struct v4l2_frmivalenum {$/;"	s
v4l2_frmivaltypes	videodev2.h	/^enum v4l2_frmivaltypes {$/;"	g
v4l2_frmsize_discrete	videodev2.h	/^struct v4l2_frmsize_discrete {$/;"	s
v4l2_frmsize_stepwise	videodev2.h	/^struct v4l2_frmsize_stepwise {$/;"	s
v4l2_frmsizeenum	videodev2.h	/^struct v4l2_frmsizeenum {$/;"	s
v4l2_frmsizetypes	videodev2.h	/^enum v4l2_frmsizetypes {$/;"	g
v4l2_fwnode_bus_mipi_csi1	v4l2-fwnode.h	/^struct v4l2_fwnode_bus_mipi_csi1 {$/;"	s
v4l2_fwnode_bus_mipi_csi2	v4l2-fwnode.h	/^struct v4l2_fwnode_bus_mipi_csi2 {$/;"	s
v4l2_fwnode_bus_parallel	v4l2-fwnode.h	/^struct v4l2_fwnode_bus_parallel {$/;"	s
v4l2_fwnode_bus_type	v4l2-fwnode.c	/^enum v4l2_fwnode_bus_type {$/;"	g	file:
v4l2_fwnode_endpoint	v4l2-fwnode.h	/^struct v4l2_fwnode_endpoint {$/;"	s
v4l2_fwnode_endpoint_alloc_parse	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_fwnode_endpoint_alloc_parse);$/;"	v
v4l2_fwnode_endpoint_alloc_parse	v4l2-fwnode.c	/^struct v4l2_fwnode_endpoint *v4l2_fwnode_endpoint_alloc_parse($/;"	f
v4l2_fwnode_endpoint_free	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_fwnode_endpoint_free);$/;"	v
v4l2_fwnode_endpoint_free	v4l2-fwnode.c	/^void v4l2_fwnode_endpoint_free(struct v4l2_fwnode_endpoint *vep)$/;"	f
v4l2_fwnode_endpoint_parse	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_fwnode_endpoint_parse);$/;"	v
v4l2_fwnode_endpoint_parse	v4l2-fwnode.c	/^int v4l2_fwnode_endpoint_parse(struct fwnode_handle *fwnode,$/;"	f
v4l2_fwnode_endpoint_parse_csi1_bus	v4l2-fwnode.c	/^v4l2_fwnode_endpoint_parse_csi1_bus(struct fwnode_handle *fwnode,$/;"	f	file:
v4l2_fwnode_endpoint_parse_csi2_bus	v4l2-fwnode.c	/^static int v4l2_fwnode_endpoint_parse_csi2_bus(struct fwnode_handle *fwnode,$/;"	f	file:
v4l2_fwnode_endpoint_parse_parallel_bus	v4l2-fwnode.c	/^static void v4l2_fwnode_endpoint_parse_parallel_bus($/;"	f	file:
v4l2_fwnode_link	v4l2-fwnode.h	/^struct v4l2_fwnode_link {$/;"	s
v4l2_fwnode_parse_link	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_fwnode_parse_link);$/;"	v
v4l2_fwnode_parse_link	v4l2-fwnode.c	/^int v4l2_fwnode_parse_link(struct fwnode_handle *__fwnode,$/;"	f
v4l2_fwnode_put_link	v4l2-fwnode.c	/^EXPORT_SYMBOL_GPL(v4l2_fwnode_put_link);$/;"	v
v4l2_fwnode_put_link	v4l2-fwnode.c	/^void v4l2_fwnode_put_link(struct v4l2_fwnode_link *link)$/;"	f
v4l2_fwnode_reference_get_int_prop	v4l2-fwnode.c	/^static struct fwnode_handle *v4l2_fwnode_reference_get_int_prop($/;"	f	file:
v4l2_fwnode_reference_parse	v4l2-fwnode.c	/^static int v4l2_fwnode_reference_parse($/;"	f	file:
v4l2_fwnode_reference_parse_int_props	v4l2-fwnode.c	/^static int v4l2_fwnode_reference_parse_int_props($/;"	f	file:
v4l2_g_ctrl	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_g_ctrl);$/;"	v
v4l2_g_ctrl	v4l2-ctrls.c	/^int v4l2_g_ctrl(struct v4l2_ctrl_handler *hdl, struct v4l2_control *control)$/;"	f
v4l2_g_ext_ctrls	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_g_ext_ctrls);$/;"	v
v4l2_g_ext_ctrls	v4l2-ctrls.c	/^int v4l2_g_ext_ctrls(struct v4l2_ctrl_handler *hdl, struct v4l2_ext_controls *cs)$/;"	f
v4l2_g_parm_cap	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_g_parm_cap);$/;"	v
v4l2_g_parm_cap	v4l2-common.c	/^int v4l2_g_parm_cap(struct video_device *vdev,$/;"	f
v4l2_get_edid_phys_addr	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_get_edid_phys_addr);$/;"	v
v4l2_get_edid_phys_addr	v4l2-dv-timings.c	/^u16 v4l2_get_edid_phys_addr(const u8 *edid, unsigned int size,$/;"	f
v4l2_get_subdev_hostdata	v4l2-subdev.h	/^static inline void *v4l2_get_subdev_hostdata(const struct v4l2_subdev *sd)$/;"	f
v4l2_get_subdevdata	v4l2-subdev.h	/^static inline void *v4l2_get_subdevdata(const struct v4l2_subdev *sd)$/;"	f
v4l2_get_timestamp	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_get_timestamp);$/;"	v
v4l2_get_timestamp	v4l2-common.c	/^void v4l2_get_timestamp(struct timeval *tv)$/;"	f
v4l2_get_unmapped_area	v4l2-dev.c	/^static unsigned long v4l2_get_unmapped_area(struct file *filp,$/;"	f	file:
v4l2_get_unmapped_area	v4l2-dev.c	372;"	d	file:
v4l2_hdmi_colorimetry	v4l2-dv-timings.h	/^struct v4l2_hdmi_colorimetry {$/;"	s
v4l2_hdmi_rx_colorimetry	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_hdmi_rx_colorimetry);$/;"	v
v4l2_hdmi_rx_colorimetry	v4l2-dv-timings.c	/^v4l2_hdmi_rx_colorimetry(const struct hdmi_avi_infoframe *avi,$/;"	f
v4l2_hsv_encoding	videodev2.h	/^enum v4l2_hsv_encoding {$/;"	g
v4l2_hw_freq_seek	videodev2.h	/^struct v4l2_hw_freq_seek {$/;"	s
v4l2_i2c_new_subdev	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_i2c_new_subdev);$/;"	v
v4l2_i2c_new_subdev	v4l2-common.c	/^struct v4l2_subdev *v4l2_i2c_new_subdev(struct v4l2_device *v4l2_dev,$/;"	f
v4l2_i2c_new_subdev_board	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_i2c_new_subdev_board);$/;"	v
v4l2_i2c_new_subdev_board	v4l2-common.c	/^struct v4l2_subdev *v4l2_i2c_new_subdev_board(struct v4l2_device *v4l2_dev,$/;"	f
v4l2_i2c_subdev_addr	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_i2c_subdev_addr);$/;"	v
v4l2_i2c_subdev_addr	v4l2-common.c	/^unsigned short v4l2_i2c_subdev_addr(struct v4l2_subdev *sd)$/;"	f
v4l2_i2c_subdev_init	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_i2c_subdev_init);$/;"	v
v4l2_i2c_subdev_init	v4l2-common.c	/^void v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client,$/;"	f
v4l2_i2c_tuner_addrs	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_i2c_tuner_addrs);$/;"	v
v4l2_i2c_tuner_addrs	v4l2-common.c	/^const unsigned short *v4l2_i2c_tuner_addrs(enum v4l2_i2c_tuner_type type)$/;"	f
v4l2_i2c_tuner_type	v4l2-common.h	/^enum v4l2_i2c_tuner_type {$/;"	g
v4l2_info	v4l2-common.h	77;"	d
v4l2_input	videodev2.h	/^struct v4l2_input {$/;"	s
v4l2_input32	v4l2-compat-ioctl32.c	/^struct v4l2_input32 {$/;"	s	file:
v4l2_ioctl	v4l2-dev.c	/^static long v4l2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)$/;"	f	file:
v4l2_ioctl_get_lock	v4l2-ioctl.c	/^static struct mutex *v4l2_ioctl_get_lock(struct video_device *vdev,$/;"	f	file:
v4l2_ioctl_info	v4l2-ioctl.c	/^struct v4l2_ioctl_info {$/;"	s	file:
v4l2_ioctl_m2m_queue_is_output	v4l2-ioctl.c	/^static bool v4l2_ioctl_m2m_queue_is_output(unsigned int cmd, void *arg)$/;"	f	file:
v4l2_ioctl_ops	v4l2-ioctl.h	/^struct v4l2_ioctl_ops {$/;"	s
v4l2_ioctls	v4l2-ioctl.c	/^static struct v4l2_ioctl_info v4l2_ioctls[] = {$/;"	v	typeref:struct:v4l2_ioctl_info	file:
v4l2_is_known_ioctl	v4l2-ioctl.c	/^static bool v4l2_is_known_ioctl(unsigned int cmd)$/;"	f	file:
v4l2_jpegcompression	videodev2.h	/^struct v4l2_jpegcompression {$/;"	s
v4l2_kevent	v4l2-event.h	/^struct v4l2_kevent {$/;"	s
v4l2_kioctl	v4l2-ioctl.h	/^typedef long (*v4l2_kioctl)(struct file *file, unsigned int cmd, void *arg);$/;"	t
v4l2_m2m_buf_done	v4l2-mem2mem.h	/^v4l2_m2m_buf_done(struct vb2_v4l2_buffer *buf, enum vb2_buffer_state state)$/;"	f
v4l2_m2m_buf_queue	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_buf_queue);$/;"	v
v4l2_m2m_buf_queue	v4l2-mem2mem.c	/^void v4l2_m2m_buf_queue(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_buf_remove	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_buf_remove);$/;"	v
v4l2_m2m_buf_remove	v4l2-mem2mem.c	/^void *v4l2_m2m_buf_remove(struct v4l2_m2m_queue_ctx *q_ctx)$/;"	f
v4l2_m2m_buf_remove_by_buf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_buf_remove_by_buf);$/;"	v
v4l2_m2m_buf_remove_by_buf	v4l2-mem2mem.c	/^void v4l2_m2m_buf_remove_by_buf(struct v4l2_m2m_queue_ctx *q_ctx,$/;"	f
v4l2_m2m_buf_remove_by_idx	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_buf_remove_by_idx);$/;"	v
v4l2_m2m_buf_remove_by_idx	v4l2-mem2mem.c	/^v4l2_m2m_buf_remove_by_idx(struct v4l2_m2m_queue_ctx *q_ctx, unsigned int idx)$/;"	f
v4l2_m2m_buffer	v4l2-mem2mem.h	/^struct v4l2_m2m_buffer {$/;"	s
v4l2_m2m_cancel_job	v4l2-mem2mem.c	/^static void v4l2_m2m_cancel_job(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f	file:
v4l2_m2m_create_bufs	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_create_bufs);$/;"	v
v4l2_m2m_create_bufs	v4l2-mem2mem.c	/^int v4l2_m2m_create_bufs(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_ctx	v4l2-mem2mem.h	/^struct v4l2_m2m_ctx {$/;"	s
v4l2_m2m_ctx_init	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ctx_init);$/;"	v
v4l2_m2m_ctx_init	v4l2-mem2mem.c	/^struct v4l2_m2m_ctx *v4l2_m2m_ctx_init(struct v4l2_m2m_dev *m2m_dev,$/;"	f
v4l2_m2m_ctx_release	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ctx_release);$/;"	v
v4l2_m2m_ctx_release	v4l2-mem2mem.c	/^void v4l2_m2m_ctx_release(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_dev	v4l2-mem2mem.c	/^struct v4l2_m2m_dev {$/;"	s	file:
v4l2_m2m_dqbuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_dqbuf);$/;"	v
v4l2_m2m_dqbuf	v4l2-mem2mem.c	/^int v4l2_m2m_dqbuf(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_dst_buf_remove	v4l2-mem2mem.h	/^static inline void *v4l2_m2m_dst_buf_remove(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_dst_buf_remove_by_buf	v4l2-mem2mem.h	/^static inline void v4l2_m2m_dst_buf_remove_by_buf(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_dst_buf_remove_by_idx	v4l2-mem2mem.h	/^v4l2_m2m_dst_buf_remove_by_idx(struct v4l2_m2m_ctx *m2m_ctx, unsigned int idx)$/;"	f
v4l2_m2m_entity_type	v4l2-mem2mem.c	/^enum v4l2_m2m_entity_type {$/;"	g	file:
v4l2_m2m_expbuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_expbuf);$/;"	v
v4l2_m2m_expbuf	v4l2-mem2mem.c	/^int v4l2_m2m_expbuf(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_fop_mmap	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_fop_mmap);$/;"	v
v4l2_m2m_fop_mmap	v4l2-mem2mem.c	/^int v4l2_m2m_fop_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f
v4l2_m2m_fop_poll	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_fop_poll);$/;"	v
v4l2_m2m_fop_poll	v4l2-mem2mem.c	/^__poll_t v4l2_m2m_fop_poll(struct file *file, poll_table *wait)$/;"	f
v4l2_m2m_for_each_dst_buf	v4l2-mem2mem.h	488;"	d
v4l2_m2m_for_each_dst_buf_safe	v4l2-mem2mem.h	508;"	d
v4l2_m2m_for_each_src_buf	v4l2-mem2mem.h	497;"	d
v4l2_m2m_for_each_src_buf_safe	v4l2-mem2mem.h	519;"	d
v4l2_m2m_get_curr_priv	v4l2-mem2mem.c	/^EXPORT_SYMBOL(v4l2_m2m_get_curr_priv);$/;"	v
v4l2_m2m_get_curr_priv	v4l2-mem2mem.c	/^void *v4l2_m2m_get_curr_priv(struct v4l2_m2m_dev *m2m_dev)$/;"	f
v4l2_m2m_get_dst_vq	v4l2-mem2mem.h	/^struct vb2_queue *v4l2_m2m_get_dst_vq(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_get_src_vq	v4l2-mem2mem.h	/^struct vb2_queue *v4l2_m2m_get_src_vq(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_get_vq	v4l2-mem2mem.c	/^EXPORT_SYMBOL(v4l2_m2m_get_vq);$/;"	v
v4l2_m2m_get_vq	v4l2-mem2mem.c	/^struct vb2_queue *v4l2_m2m_get_vq(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_init	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_init);$/;"	v
v4l2_m2m_init	v4l2-mem2mem.c	/^struct v4l2_m2m_dev *v4l2_m2m_init(const struct v4l2_m2m_ops *m2m_ops)$/;"	f
v4l2_m2m_ioctl_create_bufs	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_create_bufs);$/;"	v
v4l2_m2m_ioctl_create_bufs	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_create_bufs(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_dqbuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_dqbuf);$/;"	v
v4l2_m2m_ioctl_dqbuf	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_dqbuf(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_expbuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_expbuf);$/;"	v
v4l2_m2m_ioctl_expbuf	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_expbuf(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_prepare_buf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_prepare_buf);$/;"	v
v4l2_m2m_ioctl_prepare_buf	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_prepare_buf(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_qbuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_qbuf);$/;"	v
v4l2_m2m_ioctl_qbuf	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_qbuf(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_querybuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_querybuf);$/;"	v
v4l2_m2m_ioctl_querybuf	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_querybuf(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_reqbufs	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_reqbufs);$/;"	v
v4l2_m2m_ioctl_reqbufs	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_reqbufs(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_streamoff	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_streamoff);$/;"	v
v4l2_m2m_ioctl_streamoff	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_streamoff(struct file *file, void *priv,$/;"	f
v4l2_m2m_ioctl_streamon	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_ioctl_streamon);$/;"	v
v4l2_m2m_ioctl_streamon	v4l2-mem2mem.c	/^int v4l2_m2m_ioctl_streamon(struct file *file, void *priv,$/;"	f
v4l2_m2m_job_finish	v4l2-mem2mem.c	/^EXPORT_SYMBOL(v4l2_m2m_job_finish);$/;"	v
v4l2_m2m_job_finish	v4l2-mem2mem.c	/^void v4l2_m2m_job_finish(struct v4l2_m2m_dev *m2m_dev,$/;"	f
v4l2_m2m_last_buf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_last_buf);$/;"	v
v4l2_m2m_last_buf	v4l2-mem2mem.c	/^void *v4l2_m2m_last_buf(struct v4l2_m2m_queue_ctx *q_ctx)$/;"	f
v4l2_m2m_last_dst_buf	v4l2-mem2mem.h	/^static inline void *v4l2_m2m_last_dst_buf(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_last_src_buf	v4l2-mem2mem.h	/^static inline void *v4l2_m2m_last_src_buf(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_mmap	v4l2-mem2mem.c	/^EXPORT_SYMBOL(v4l2_m2m_mmap);$/;"	v
v4l2_m2m_mmap	v4l2-mem2mem.c	/^int v4l2_m2m_mmap(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_next_buf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_next_buf);$/;"	v
v4l2_m2m_next_buf	v4l2-mem2mem.c	/^void *v4l2_m2m_next_buf(struct v4l2_m2m_queue_ctx *q_ctx)$/;"	f
v4l2_m2m_next_dst_buf	v4l2-mem2mem.h	/^static inline void *v4l2_m2m_next_dst_buf(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_next_src_buf	v4l2-mem2mem.h	/^static inline void *v4l2_m2m_next_src_buf(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_num_dst_bufs_ready	v4l2-mem2mem.h	/^unsigned int v4l2_m2m_num_dst_bufs_ready(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_num_src_bufs_ready	v4l2-mem2mem.h	/^unsigned int v4l2_m2m_num_src_bufs_ready(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_ops	v4l2-mem2mem.h	/^struct v4l2_m2m_ops {$/;"	s
v4l2_m2m_poll	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_poll);$/;"	v
v4l2_m2m_poll	v4l2-mem2mem.c	/^__poll_t v4l2_m2m_poll(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_prepare_buf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_prepare_buf);$/;"	v
v4l2_m2m_prepare_buf	v4l2-mem2mem.c	/^int v4l2_m2m_prepare_buf(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_qbuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_qbuf);$/;"	v
v4l2_m2m_qbuf	v4l2-mem2mem.c	/^int v4l2_m2m_qbuf(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_querybuf	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_querybuf);$/;"	v
v4l2_m2m_querybuf	v4l2-mem2mem.c	/^int v4l2_m2m_querybuf(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_queue_ctx	v4l2-mem2mem.h	/^struct v4l2_m2m_queue_ctx {$/;"	s
v4l2_m2m_register_entity	v4l2-mem2mem.c	/^static int v4l2_m2m_register_entity(struct media_device *mdev,$/;"	f	file:
v4l2_m2m_register_media_controller	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_register_media_controller);$/;"	v
v4l2_m2m_register_media_controller	v4l2-mem2mem.c	/^int v4l2_m2m_register_media_controller(struct v4l2_m2m_dev *m2m_dev,$/;"	f
v4l2_m2m_register_media_controller	v4l2-mem2mem.h	/^v4l2_m2m_register_media_controller(struct v4l2_m2m_dev *m2m_dev,$/;"	f
v4l2_m2m_release	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_release);$/;"	v
v4l2_m2m_release	v4l2-mem2mem.c	/^void v4l2_m2m_release(struct v4l2_m2m_dev *m2m_dev)$/;"	f
v4l2_m2m_reqbufs	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_reqbufs);$/;"	v
v4l2_m2m_reqbufs	v4l2-mem2mem.c	/^int v4l2_m2m_reqbufs(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_set_dst_buffered	v4l2-mem2mem.h	/^static inline void v4l2_m2m_set_dst_buffered(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_set_src_buffered	v4l2-mem2mem.h	/^static inline void v4l2_m2m_set_src_buffered(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_src_buf_remove	v4l2-mem2mem.h	/^static inline void *v4l2_m2m_src_buf_remove(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_src_buf_remove_by_buf	v4l2-mem2mem.h	/^static inline void v4l2_m2m_src_buf_remove_by_buf(struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_src_buf_remove_by_idx	v4l2-mem2mem.h	/^v4l2_m2m_src_buf_remove_by_idx(struct v4l2_m2m_ctx *m2m_ctx, unsigned int idx)$/;"	f
v4l2_m2m_streamoff	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_streamoff);$/;"	v
v4l2_m2m_streamoff	v4l2-mem2mem.c	/^int v4l2_m2m_streamoff(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_streamon	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_streamon);$/;"	v
v4l2_m2m_streamon	v4l2-mem2mem.c	/^int v4l2_m2m_streamon(struct file *file, struct v4l2_m2m_ctx *m2m_ctx,$/;"	f
v4l2_m2m_try_run	v4l2-mem2mem.c	/^static void v4l2_m2m_try_run(struct v4l2_m2m_dev *m2m_dev)$/;"	f	file:
v4l2_m2m_try_schedule	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_try_schedule);$/;"	v
v4l2_m2m_try_schedule	v4l2-mem2mem.c	/^void v4l2_m2m_try_schedule(struct v4l2_m2m_ctx *m2m_ctx)$/;"	f
v4l2_m2m_unregister_media_controller	v4l2-mem2mem.c	/^EXPORT_SYMBOL_GPL(v4l2_m2m_unregister_media_controller);$/;"	v
v4l2_m2m_unregister_media_controller	v4l2-mem2mem.c	/^void v4l2_m2m_unregister_media_controller(struct v4l2_m2m_dev *m2m_dev)$/;"	f
v4l2_m2m_unregister_media_controller	v4l2-mem2mem.h	/^v4l2_m2m_unregister_media_controller(struct v4l2_m2m_dev *m2m_dev)$/;"	f
v4l2_match_dv_timings	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_match_dv_timings);$/;"	v
v4l2_match_dv_timings	v4l2-dv-timings.c	/^bool v4l2_match_dv_timings(const struct v4l2_dv_timings *t1,$/;"	f
v4l2_mbus_config	v4l2-mediabus.h	/^struct v4l2_mbus_config {$/;"	s
v4l2_mbus_frame_desc	v4l2-subdev.h	/^struct v4l2_mbus_frame_desc {$/;"	s
v4l2_mbus_frame_desc_entry	v4l2-subdev.h	/^struct v4l2_mbus_frame_desc_entry {$/;"	s
v4l2_mbus_frame_desc_flags	v4l2-subdev.h	/^enum v4l2_mbus_frame_desc_flags {$/;"	g
v4l2_mbus_type	v4l2-mediabus.h	/^enum v4l2_mbus_type {$/;"	g
v4l2_mc_create_media_graph	v4l2-mc.c	/^EXPORT_SYMBOL_GPL(v4l2_mc_create_media_graph);$/;"	v
v4l2_mc_create_media_graph	v4l2-mc.c	/^int v4l2_mc_create_media_graph(struct media_device *mdev)$/;"	f
v4l2_mc_create_media_graph	v4l2-mc.h	/^static inline int v4l2_mc_create_media_graph(struct media_device *mdev)$/;"	f
v4l2_memory	videodev2.h	/^enum v4l2_memory {$/;"	g
v4l2_memory_names	v4l2-ioctl.c	/^static const char *v4l2_memory_names[] = {$/;"	v	file:
v4l2_meta_format	videodev2.h	/^struct v4l2_meta_format {$/;"	s
v4l2_mmap	v4l2-dev.c	/^static int v4l2_mmap(struct file *filp, struct vm_area_struct *vm)$/;"	f	file:
v4l2_modulator	videodev2.h	/^struct v4l2_modulator {$/;"	s
v4l2_mpeg_vbi_ITV0	videodev2.h	/^struct v4l2_mpeg_vbi_ITV0 {$/;"	s
v4l2_mpeg_vbi_fmt_ivtv	videodev2.h	/^struct v4l2_mpeg_vbi_fmt_ivtv {$/;"	s
v4l2_mpeg_vbi_itv0	videodev2.h	/^struct v4l2_mpeg_vbi_itv0 {$/;"	s
v4l2_mpeg_vbi_itv0_line	videodev2.h	/^struct v4l2_mpeg_vbi_itv0_line {$/;"	s
v4l2_norm_to_name	v4l2-ioctl.c	/^EXPORT_SYMBOL(v4l2_norm_to_name);$/;"	v
v4l2_norm_to_name	v4l2-ioctl.c	/^const char *v4l2_norm_to_name(v4l2_std_id id)$/;"	f
v4l2_open	v4l2-dev.c	/^static int v4l2_open(struct inode *inode, struct file *filp)$/;"	f	file:
v4l2_output	videodev2.h	/^struct v4l2_output {$/;"	s
v4l2_outputparm	videodev2.h	/^struct v4l2_outputparm {$/;"	s
v4l2_phys_addr_for_input	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_phys_addr_for_input);$/;"	v
v4l2_phys_addr_for_input	v4l2-dv-timings.c	/^u16 v4l2_phys_addr_for_input(u16 phys_addr, u8 input)$/;"	f
v4l2_phys_addr_validate	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_phys_addr_validate);$/;"	v
v4l2_phys_addr_validate	v4l2-dv-timings.c	/^int v4l2_phys_addr_validate(u16 phys_addr, u16 *parent, u16 *port)$/;"	f
v4l2_pipeline_link_notify	v4l2-mc.c	/^EXPORT_SYMBOL_GPL(v4l2_pipeline_link_notify);$/;"	v
v4l2_pipeline_link_notify	v4l2-mc.c	/^int v4l2_pipeline_link_notify(struct media_link *link, u32 flags,$/;"	f
v4l2_pipeline_link_notify	v4l2-mc.h	/^static inline int v4l2_pipeline_link_notify(struct media_link *link, u32 flags,$/;"	f
v4l2_pipeline_pm_use	v4l2-mc.c	/^EXPORT_SYMBOL_GPL(v4l2_pipeline_pm_use);$/;"	v
v4l2_pipeline_pm_use	v4l2-mc.c	/^int v4l2_pipeline_pm_use(struct media_entity *entity, int use)$/;"	f
v4l2_pipeline_pm_use	v4l2-mc.h	/^static inline int v4l2_pipeline_pm_use(struct media_entity *entity, int use)$/;"	f
v4l2_pix_format	videodev2.h	/^struct v4l2_pix_format {$/;"	s
v4l2_pix_format_mplane	videodev2.h	/^struct v4l2_pix_format_mplane {$/;"	s
v4l2_plane	videodev2.h	/^struct v4l2_plane {$/;"	s
v4l2_plane32	v4l2-compat-ioctl32.c	/^struct v4l2_plane32 {$/;"	s	file:
v4l2_plane_pix_format	videodev2.h	/^struct v4l2_plane_pix_format {$/;"	s
v4l2_poll	v4l2-dev.c	/^static __poll_t v4l2_poll(struct file *filp, struct poll_table_struct *poll)$/;"	f	file:
v4l2_print_dv_timings	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_print_dv_timings);$/;"	v
v4l2_print_dv_timings	v4l2-dv-timings.c	/^void v4l2_print_dv_timings(const char *dev_prefix, const char *prefix,$/;"	f
v4l2_printk	v4l2-common.h	68;"	d
v4l2_prio_change	v4l2-dev.c	/^EXPORT_SYMBOL(v4l2_prio_change);$/;"	v
v4l2_prio_change	v4l2-dev.c	/^int v4l2_prio_change(struct v4l2_prio_state *global, enum v4l2_priority *local,$/;"	f
v4l2_prio_check	v4l2-dev.c	/^EXPORT_SYMBOL(v4l2_prio_check);$/;"	v
v4l2_prio_check	v4l2-dev.c	/^int v4l2_prio_check(struct v4l2_prio_state *global, enum v4l2_priority local)$/;"	f
v4l2_prio_close	v4l2-dev.c	/^EXPORT_SYMBOL(v4l2_prio_close);$/;"	v
v4l2_prio_close	v4l2-dev.c	/^void v4l2_prio_close(struct v4l2_prio_state *global, enum v4l2_priority local)$/;"	f
v4l2_prio_init	v4l2-dev.c	/^EXPORT_SYMBOL(v4l2_prio_init);$/;"	v
v4l2_prio_init	v4l2-dev.c	/^void v4l2_prio_init(struct v4l2_prio_state *global)$/;"	f
v4l2_prio_max	v4l2-dev.c	/^EXPORT_SYMBOL(v4l2_prio_max);$/;"	v
v4l2_prio_max	v4l2-dev.c	/^enum v4l2_priority v4l2_prio_max(struct v4l2_prio_state *global)$/;"	f
v4l2_prio_open	v4l2-dev.c	/^EXPORT_SYMBOL(v4l2_prio_open);$/;"	v
v4l2_prio_open	v4l2-dev.c	/^void v4l2_prio_open(struct v4l2_prio_state *global, enum v4l2_priority *local)$/;"	f
v4l2_prio_state	v4l2-dev.h	/^struct v4l2_prio_state {$/;"	s
v4l2_priority	videodev2.h	/^enum v4l2_priority {$/;"	g
v4l2_priv_tun_config	v4l2-common.h	/^struct v4l2_priv_tun_config {$/;"	s
v4l2_quantization	videodev2.h	/^enum v4l2_quantization {$/;"	g
v4l2_query_ext_ctrl	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_query_ext_ctrl);$/;"	v
v4l2_query_ext_ctrl	v4l2-ctrls.c	/^int v4l2_query_ext_ctrl(struct v4l2_ctrl_handler *hdl, struct v4l2_query_ext_ctrl *qc)$/;"	f
v4l2_query_ext_ctrl	videodev2.h	/^struct v4l2_query_ext_ctrl {$/;"	s
v4l2_queryctrl	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_queryctrl);$/;"	v
v4l2_queryctrl	v4l2-ctrls.c	/^int v4l2_queryctrl(struct v4l2_ctrl_handler *hdl, struct v4l2_queryctrl *qc)$/;"	f
v4l2_queryctrl	videodev2.h	/^struct v4l2_queryctrl {$/;"	s
v4l2_querymenu	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_querymenu);$/;"	v
v4l2_querymenu	v4l2-ctrls.c	/^int v4l2_querymenu(struct v4l2_ctrl_handler *hdl, struct v4l2_querymenu *qm)$/;"	f
v4l2_querymenu	videodev2.h	/^struct v4l2_querymenu {$/;"	s
v4l2_rds_data	videodev2.h	/^struct v4l2_rds_data {$/;"	s
v4l2_read	v4l2-dev.c	/^static ssize_t v4l2_read(struct file *filp, char __user *buf,$/;"	f	file:
v4l2_rect	videodev2.h	/^struct v4l2_rect {$/;"	s
v4l2_rect_intersect	v4l2-rect.h	/^static inline void v4l2_rect_intersect(struct v4l2_rect *r,$/;"	f
v4l2_rect_map_inside	v4l2-rect.h	/^static inline void v4l2_rect_map_inside(struct v4l2_rect *r,$/;"	f
v4l2_rect_overlap	v4l2-rect.h	/^static inline bool v4l2_rect_overlap(const struct v4l2_rect *r1,$/;"	f
v4l2_rect_same_size	v4l2-rect.h	/^static inline bool v4l2_rect_same_size(const struct v4l2_rect *r1,$/;"	f
v4l2_rect_scale	v4l2-rect.h	/^static inline void v4l2_rect_scale(struct v4l2_rect *r,$/;"	f
v4l2_rect_set_max_size	v4l2-rect.h	/^static inline void v4l2_rect_set_max_size(struct v4l2_rect *r,$/;"	f
v4l2_rect_set_min_size	v4l2-rect.h	/^static inline void v4l2_rect_set_min_size(struct v4l2_rect *r,$/;"	f
v4l2_rect_set_size_to	v4l2-rect.h	/^static inline void v4l2_rect_set_size_to(struct v4l2_rect *r,$/;"	f
v4l2_release	v4l2-dev.c	/^static int v4l2_release(struct inode *inode, struct file *filp)$/;"	f	file:
v4l2_requestbuffers	videodev2.h	/^struct v4l2_requestbuffers {$/;"	s
v4l2_s_ctrl	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_s_ctrl);$/;"	v
v4l2_s_ctrl	v4l2-ctrls.c	/^int v4l2_s_ctrl(struct v4l2_fh *fh, struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_s_ext_ctrls	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_s_ext_ctrls);$/;"	v
v4l2_s_ext_ctrls	v4l2-ctrls.c	/^int v4l2_s_ext_ctrls(struct v4l2_fh *fh, struct v4l2_ctrl_handler *hdl,$/;"	f
v4l2_s_parm_cap	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_s_parm_cap);$/;"	v
v4l2_s_parm_cap	v4l2-common.c	/^int v4l2_s_parm_cap(struct video_device *vdev,$/;"	f
v4l2_sdr_format	videodev2.h	/^struct v4l2_sdr_format {$/;"	s
v4l2_selection	videodev2.h	/^struct v4l2_selection {$/;"	s
v4l2_set_edid_phys_addr	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_set_edid_phys_addr);$/;"	v
v4l2_set_edid_phys_addr	v4l2-dv-timings.c	/^void v4l2_set_edid_phys_addr(u8 *edid, unsigned int size, u16 phys_addr)$/;"	f
v4l2_set_subdev_hostdata	v4l2-subdev.h	/^static inline void v4l2_set_subdev_hostdata(struct v4l2_subdev *sd, void *p)$/;"	f
v4l2_set_subdevdata	v4l2-subdev.h	/^static inline void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)$/;"	f
v4l2_sliced_vbi_cap	videodev2.h	/^struct v4l2_sliced_vbi_cap {$/;"	s
v4l2_sliced_vbi_data	videodev2.h	/^struct v4l2_sliced_vbi_data {$/;"	s
v4l2_sliced_vbi_format	videodev2.h	/^struct v4l2_sliced_vbi_format {$/;"	s
v4l2_spi_new_subdev	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_spi_new_subdev);$/;"	v
v4l2_spi_new_subdev	v4l2-common.c	/^struct v4l2_subdev *v4l2_spi_new_subdev(struct v4l2_device *v4l2_dev,$/;"	f
v4l2_spi_subdev_init	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l2_spi_subdev_init);$/;"	v
v4l2_spi_subdev_init	v4l2-common.c	/^void v4l2_spi_subdev_init(struct v4l2_subdev *sd, struct spi_device *spi,$/;"	f
v4l2_src_change_event_subdev_subscribe	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_src_change_event_subdev_subscribe);$/;"	v
v4l2_src_change_event_subdev_subscribe	v4l2-event.c	/^int v4l2_src_change_event_subdev_subscribe(struct v4l2_subdev *sd,$/;"	f
v4l2_src_change_event_subscribe	v4l2-event.c	/^EXPORT_SYMBOL_GPL(v4l2_src_change_event_subscribe);$/;"	v
v4l2_src_change_event_subscribe	v4l2-event.c	/^int v4l2_src_change_event_subscribe(struct v4l2_fh *fh,$/;"	f
v4l2_standard	videodev2.h	/^struct v4l2_standard {$/;"	s
v4l2_standard32	v4l2-compat-ioctl32.c	/^struct v4l2_standard32 {$/;"	s	file:
v4l2_std_id	videodev2.h	/^typedef __u64 v4l2_std_id;$/;"	t
v4l2_streamparm	videodev2.h	/^struct v4l2_streamparm {$/;"	s
v4l2_subdev	v4l2-subdev.h	/^struct v4l2_subdev {$/;"	s
v4l2_subdev_alloc_pad_config	v4l2-subdev.c	/^EXPORT_SYMBOL_GPL(v4l2_subdev_alloc_pad_config);$/;"	v
v4l2_subdev_alloc_pad_config	v4l2-subdev.c	/^v4l2_subdev_alloc_pad_config(struct v4l2_subdev *sd)$/;"	f
v4l2_subdev_audio_ops	v4l2-subdev.h	/^struct v4l2_subdev_audio_ops {$/;"	s
v4l2_subdev_call	v4l2-subdev.h	1090;"	d
v4l2_subdev_core_ops	v4l2-subdev.h	/^struct v4l2_subdev_core_ops {$/;"	s
v4l2_subdev_fh	v4l2-subdev.h	/^struct v4l2_subdev_fh {$/;"	s
v4l2_subdev_fops	v4l2-subdev.c	/^const struct v4l2_file_operations v4l2_subdev_fops = {$/;"	v	typeref:struct:v4l2_file_operations
v4l2_subdev_free_pad_config	v4l2-subdev.c	/^EXPORT_SYMBOL_GPL(v4l2_subdev_free_pad_config);$/;"	v
v4l2_subdev_free_pad_config	v4l2-subdev.c	/^void v4l2_subdev_free_pad_config(struct v4l2_subdev_pad_config *cfg)$/;"	f
v4l2_subdev_get_try_compose	v4l2-subdev.h	/^*v4l2_subdev_get_try_compose(struct v4l2_subdev *sd,$/;"	f
v4l2_subdev_get_try_crop	v4l2-subdev.h	/^*v4l2_subdev_get_try_crop(struct v4l2_subdev *sd,$/;"	f
v4l2_subdev_get_try_format	v4l2-subdev.h	/^*v4l2_subdev_get_try_format(struct v4l2_subdev *sd,$/;"	f
v4l2_subdev_has_op	v4l2-subdev.h	1110;"	d
v4l2_subdev_init	v4l2-subdev.c	/^EXPORT_SYMBOL(v4l2_subdev_init);$/;"	v
v4l2_subdev_init	v4l2-subdev.c	/^void v4l2_subdev_init(struct v4l2_subdev *sd, const struct v4l2_subdev_ops *ops)$/;"	f
v4l2_subdev_internal_ops	v4l2-subdev.h	/^struct v4l2_subdev_internal_ops {$/;"	s
v4l2_subdev_io_pin_bits	v4l2-subdev.h	/^enum v4l2_subdev_io_pin_bits {$/;"	g
v4l2_subdev_io_pin_config	v4l2-subdev.h	/^struct v4l2_subdev_io_pin_config {$/;"	s
v4l2_subdev_ir_mode	v4l2-subdev.h	/^enum v4l2_subdev_ir_mode {$/;"	g
v4l2_subdev_ir_ops	v4l2-subdev.h	/^struct v4l2_subdev_ir_ops {$/;"	s
v4l2_subdev_ir_parameters	v4l2-subdev.h	/^struct v4l2_subdev_ir_parameters {$/;"	s
v4l2_subdev_link_validate	v4l2-subdev.c	/^EXPORT_SYMBOL_GPL(v4l2_subdev_link_validate);$/;"	v
v4l2_subdev_link_validate	v4l2-subdev.c	/^int v4l2_subdev_link_validate(struct media_link *link)$/;"	f
v4l2_subdev_link_validate_default	v4l2-subdev.c	/^EXPORT_SYMBOL_GPL(v4l2_subdev_link_validate_default);$/;"	v
v4l2_subdev_link_validate_default	v4l2-subdev.c	/^int v4l2_subdev_link_validate_default(struct v4l2_subdev *sd,$/;"	f
v4l2_subdev_link_validate_get_format	v4l2-subdev.c	/^v4l2_subdev_link_validate_get_format(struct media_pad *pad,$/;"	f	file:
v4l2_subdev_notify	v4l2-device.h	/^static inline void v4l2_subdev_notify(struct v4l2_subdev *sd,$/;"	f
v4l2_subdev_notify_event	v4l2-subdev.c	/^EXPORT_SYMBOL_GPL(v4l2_subdev_notify_event);$/;"	v
v4l2_subdev_notify_event	v4l2-subdev.c	/^void v4l2_subdev_notify_event(struct v4l2_subdev *sd,$/;"	f
v4l2_subdev_ops	v4l2-subdev.h	/^struct v4l2_subdev_ops {$/;"	s
v4l2_subdev_pad_config	v4l2-subdev.h	/^struct v4l2_subdev_pad_config {$/;"	s
v4l2_subdev_pad_ops	v4l2-subdev.h	/^struct v4l2_subdev_pad_ops {$/;"	s
v4l2_subdev_platform_data	v4l2-subdev.h	/^struct v4l2_subdev_platform_data {$/;"	s
v4l2_subdev_sensor_ops	v4l2-subdev.h	/^struct v4l2_subdev_sensor_ops {$/;"	s
v4l2_subdev_to_v4l2_flash	v4l2-flash-led-class.h	/^static inline struct v4l2_flash *v4l2_subdev_to_v4l2_flash($/;"	f
v4l2_subdev_tuner_ops	v4l2-subdev.h	/^struct v4l2_subdev_tuner_ops {$/;"	s
v4l2_subdev_vbi_ops	v4l2-subdev.h	/^struct v4l2_subdev_vbi_ops {$/;"	s
v4l2_subdev_video_ops	v4l2-subdev.h	/^struct v4l2_subdev_video_ops {$/;"	s
v4l2_subscribed_event	v4l2-event.h	/^struct v4l2_subscribed_event {$/;"	s
v4l2_subscribed_event_ops	v4l2-event.h	/^struct v4l2_subscribed_event_ops {$/;"	s
v4l2_timecode	videodev2.h	/^struct v4l2_timecode {$/;"	s
v4l2_try_ext_ctrls	v4l2-ctrls.c	/^EXPORT_SYMBOL(v4l2_try_ext_ctrls);$/;"	v
v4l2_try_ext_ctrls	v4l2-ctrls.c	/^int v4l2_try_ext_ctrls(struct v4l2_ctrl_handler *hdl, struct v4l2_ext_controls *cs)$/;"	f
v4l2_tuner	videodev2.h	/^struct v4l2_tuner {$/;"	s
v4l2_tuner_type	videodev2.h	/^enum v4l2_tuner_type {$/;"	g
v4l2_type_names	v4l2-ioctl.c	/^EXPORT_SYMBOL(v4l2_type_names);$/;"	v
v4l2_type_names	v4l2-ioctl.c	/^const char *v4l2_type_names[] = {$/;"	v
v4l2_valid_dv_timings	v4l2-dv-timings.c	/^EXPORT_SYMBOL_GPL(v4l2_valid_dv_timings);$/;"	v
v4l2_valid_dv_timings	v4l2-dv-timings.c	/^bool v4l2_valid_dv_timings(const struct v4l2_dv_timings *t,$/;"	f
v4l2_vbi_format	videodev2.h	/^struct v4l2_vbi_format {$/;"	s
v4l2_video_device_flags	v4l2-dev.h	/^enum v4l2_video_device_flags {$/;"	g
v4l2_video_std_construct	v4l2-ioctl.c	/^EXPORT_SYMBOL(v4l2_video_std_construct);$/;"	v
v4l2_video_std_construct	v4l2-ioctl.c	/^int v4l2_video_std_construct(struct v4l2_standard *vs,$/;"	f
v4l2_video_std_frame_period	v4l2-ioctl.c	/^EXPORT_SYMBOL(v4l2_video_std_frame_period);$/;"	v
v4l2_video_std_frame_period	v4l2-ioctl.c	/^void v4l2_video_std_frame_period(int id, struct v4l2_fract *frameperiod)$/;"	f
v4l2_warn	v4l2-common.h	74;"	d
v4l2_window	videodev2.h	/^struct v4l2_window {$/;"	s
v4l2_window32	v4l2-compat-ioctl32.c	/^struct v4l2_window32 {$/;"	s	file:
v4l2_write	v4l2-dev.c	/^static ssize_t v4l2_write(struct file *filp, const char __user *buf,$/;"	f	file:
v4l2_xfer_func	videodev2.h	/^enum v4l2_xfer_func {$/;"	g
v4l2_ycbcr_encoding	videodev2.h	/^enum v4l2_ycbcr_encoding {$/;"	g
v4l_bound_align_image	v4l2-common.c	/^EXPORT_SYMBOL_GPL(v4l_bound_align_image);$/;"	v
v4l_bound_align_image	v4l2-common.c	/^void v4l_bound_align_image(u32 *w, unsigned int wmin, unsigned int wmax,$/;"	f
v4l_client_printk	v4l2-common.h	37;"	d
v4l_create_bufs	v4l2-ioctl.c	/^static int v4l_create_bufs(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_cropcap	v4l2-ioctl.c	/^static int v4l_cropcap(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_dbg	v4l2-common.h	52;"	d
v4l_dbg_g_chip_info	v4l2-ioctl.c	/^static int v4l_dbg_g_chip_info(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_dbg_g_register	v4l2-ioctl.c	/^static int v4l_dbg_g_register(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_dbg_s_register	v4l2-ioctl.c	/^static int v4l_dbg_s_register(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_disable_media_source	v4l2-mc.c	/^EXPORT_SYMBOL_GPL(v4l_disable_media_source);$/;"	v
v4l_disable_media_source	v4l2-mc.c	/^void v4l_disable_media_source(struct video_device *vdev)$/;"	f
v4l_disable_media_source	v4l2-mc.h	/^static inline void v4l_disable_media_source(struct video_device *vdev)$/;"	f
v4l_dqbuf	v4l2-ioctl.c	/^static int v4l_dqbuf(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_dqevent	v4l2-ioctl.c	/^static int v4l_dqevent(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_enable_media_source	v4l2-mc.c	/^EXPORT_SYMBOL_GPL(v4l_enable_media_source);$/;"	v
v4l_enable_media_source	v4l2-mc.c	/^int v4l_enable_media_source(struct video_device *vdev)$/;"	f
v4l_enable_media_source	v4l2-mc.h	/^static inline int v4l_enable_media_source(struct video_device *vdev)$/;"	f
v4l_enum_fmt	v4l2-ioctl.c	/^static int v4l_enum_fmt(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_enum_freq_bands	v4l2-ioctl.c	/^static int v4l_enum_freq_bands(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_enuminput	v4l2-ioctl.c	/^static int v4l_enuminput(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_enumoutput	v4l2-ioctl.c	/^static int v4l_enumoutput(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_enumstd	v4l2-ioctl.c	/^static int v4l_enumstd(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_err	v4l2-common.h	41;"	d
v4l_fill_fmtdesc	v4l2-ioctl.c	/^static void v4l_fill_fmtdesc(struct v4l2_fmtdesc *fmt)$/;"	f	file:
v4l_g_crop	v4l2-ioctl.c	/^static int v4l_g_crop(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_ctrl	v4l2-ioctl.c	/^static int v4l_g_ctrl(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_ext_ctrls	v4l2-ioctl.c	/^static int v4l_g_ext_ctrls(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_fmt	v4l2-ioctl.c	/^static int v4l_g_fmt(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_frequency	v4l2-ioctl.c	/^static int v4l_g_frequency(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_modulator	v4l2-ioctl.c	/^static int v4l_g_modulator(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_parm	v4l2-ioctl.c	/^static int v4l_g_parm(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_priority	v4l2-ioctl.c	/^static int v4l_g_priority(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_selection	v4l2-ioctl.c	/^static int v4l_g_selection(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_sliced_vbi_cap	v4l2-ioctl.c	/^static int v4l_g_sliced_vbi_cap(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_g_tuner	v4l2-ioctl.c	/^static int v4l_g_tuner(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_info	v4l2-common.h	47;"	d
v4l_log_status	v4l2-ioctl.c	/^static int v4l_log_status(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_overlay	v4l2-ioctl.c	/^static int v4l_overlay(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_pix_format_touch	v4l2-ioctl.c	/^static void v4l_pix_format_touch(struct v4l2_pix_format *p)$/;"	f	file:
v4l_prepare_buf	v4l2-ioctl.c	/^static int v4l_prepare_buf(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_print_audio	v4l2-ioctl.c	/^static void v4l_print_audio(const void *arg, bool write_only)$/;"	f	file:
v4l_print_audioout	v4l2-ioctl.c	/^static void v4l_print_audioout(const void *arg, bool write_only)$/;"	f	file:
v4l_print_buffer	v4l2-ioctl.c	/^static void v4l_print_buffer(const void *arg, bool write_only)$/;"	f	file:
v4l_print_buftype	v4l2-ioctl.c	/^static void v4l_print_buftype(const void *arg, bool write_only)$/;"	f	file:
v4l_print_control	v4l2-ioctl.c	/^static void v4l_print_control(const void *arg, bool write_only)$/;"	f	file:
v4l_print_create_buffers	v4l2-ioctl.c	/^static void v4l_print_create_buffers(const void *arg, bool write_only)$/;"	f	file:
v4l_print_crop	v4l2-ioctl.c	/^static void v4l_print_crop(const void *arg, bool write_only)$/;"	f	file:
v4l_print_cropcap	v4l2-ioctl.c	/^static void v4l_print_cropcap(const void *arg, bool write_only)$/;"	f	file:
v4l_print_dbg_chip_info	v4l2-ioctl.c	/^static void v4l_print_dbg_chip_info(const void *arg, bool write_only)$/;"	f	file:
v4l_print_dbg_register	v4l2-ioctl.c	/^static void v4l_print_dbg_register(const void *arg, bool write_only)$/;"	f	file:
v4l_print_decoder_cmd	v4l2-ioctl.c	/^static void v4l_print_decoder_cmd(const void *arg, bool write_only)$/;"	f	file:
v4l_print_default	v4l2-ioctl.c	/^static void v4l_print_default(const void *arg, bool write_only)$/;"	f	file:
v4l_print_dv_timings	v4l2-ioctl.c	/^static void v4l_print_dv_timings(const void *arg, bool write_only)$/;"	f	file:
v4l_print_dv_timings_cap	v4l2-ioctl.c	/^static void v4l_print_dv_timings_cap(const void *arg, bool write_only)$/;"	f	file:
v4l_print_edid	v4l2-ioctl.c	/^static void v4l_print_edid(const void *arg, bool write_only)$/;"	f	file:
v4l_print_enc_idx	v4l2-ioctl.c	/^static void v4l_print_enc_idx(const void *arg, bool write_only)$/;"	f	file:
v4l_print_encoder_cmd	v4l2-ioctl.c	/^static void v4l_print_encoder_cmd(const void *arg, bool write_only)$/;"	f	file:
v4l_print_enum_dv_timings	v4l2-ioctl.c	/^static void v4l_print_enum_dv_timings(const void *arg, bool write_only)$/;"	f	file:
v4l_print_enuminput	v4l2-ioctl.c	/^static void v4l_print_enuminput(const void *arg, bool write_only)$/;"	f	file:
v4l_print_enumoutput	v4l2-ioctl.c	/^static void v4l_print_enumoutput(const void *arg, bool write_only)$/;"	f	file:
v4l_print_event	v4l2-ioctl.c	/^static void v4l_print_event(const void *arg, bool write_only)$/;"	f	file:
v4l_print_event_subscription	v4l2-ioctl.c	/^static void v4l_print_event_subscription(const void *arg, bool write_only)$/;"	f	file:
v4l_print_exportbuffer	v4l2-ioctl.c	/^static void v4l_print_exportbuffer(const void *arg, bool write_only)$/;"	f	file:
v4l_print_ext_controls	v4l2-ioctl.c	/^static void v4l_print_ext_controls(const void *arg, bool write_only)$/;"	f	file:
v4l_print_fmtdesc	v4l2-ioctl.c	/^static void v4l_print_fmtdesc(const void *arg, bool write_only)$/;"	f	file:
v4l_print_format	v4l2-ioctl.c	/^static void v4l_print_format(const void *arg, bool write_only)$/;"	f	file:
v4l_print_framebuffer	v4l2-ioctl.c	/^static void v4l_print_framebuffer(const void *arg, bool write_only)$/;"	f	file:
v4l_print_freq_band	v4l2-ioctl.c	/^static void v4l_print_freq_band(const void *arg, bool write_only)$/;"	f	file:
v4l_print_frequency	v4l2-ioctl.c	/^static void v4l_print_frequency(const void *arg, bool write_only)$/;"	f	file:
v4l_print_frmivalenum	v4l2-ioctl.c	/^static void v4l_print_frmivalenum(const void *arg, bool write_only)$/;"	f	file:
v4l_print_frmsizeenum	v4l2-ioctl.c	/^static void v4l_print_frmsizeenum(const void *arg, bool write_only)$/;"	f	file:
v4l_print_hw_freq_seek	v4l2-ioctl.c	/^static void v4l_print_hw_freq_seek(const void *arg, bool write_only)$/;"	f	file:
v4l_print_jpegcompression	v4l2-ioctl.c	/^static void v4l_print_jpegcompression(const void *arg, bool write_only)$/;"	f	file:
v4l_print_modulator	v4l2-ioctl.c	/^static void v4l_print_modulator(const void *arg, bool write_only)$/;"	f	file:
v4l_print_newline	v4l2-ioctl.c	/^static void v4l_print_newline(const void *arg, bool write_only)$/;"	f	file:
v4l_print_query_ext_ctrl	v4l2-ioctl.c	/^static void v4l_print_query_ext_ctrl(const void *arg, bool write_only)$/;"	f	file:
v4l_print_querycap	v4l2-ioctl.c	/^static void v4l_print_querycap(const void *arg, bool write_only)$/;"	f	file:
v4l_print_queryctrl	v4l2-ioctl.c	/^static void v4l_print_queryctrl(const void *arg, bool write_only)$/;"	f	file:
v4l_print_querymenu	v4l2-ioctl.c	/^static void v4l_print_querymenu(const void *arg, bool write_only)$/;"	f	file:
v4l_print_requestbuffers	v4l2-ioctl.c	/^static void v4l_print_requestbuffers(const void *arg, bool write_only)$/;"	f	file:
v4l_print_selection	v4l2-ioctl.c	/^static void v4l_print_selection(const void *arg, bool write_only)$/;"	f	file:
v4l_print_sliced_vbi_cap	v4l2-ioctl.c	/^static void v4l_print_sliced_vbi_cap(const void *arg, bool write_only)$/;"	f	file:
v4l_print_standard	v4l2-ioctl.c	/^static void v4l_print_standard(const void *arg, bool write_only)$/;"	f	file:
v4l_print_std	v4l2-ioctl.c	/^static void v4l_print_std(const void *arg, bool write_only)$/;"	f	file:
v4l_print_streamparm	v4l2-ioctl.c	/^static void v4l_print_streamparm(const void *arg, bool write_only)$/;"	f	file:
v4l_print_tuner	v4l2-ioctl.c	/^static void v4l_print_tuner(const void *arg, bool write_only)$/;"	f	file:
v4l_print_u32	v4l2-ioctl.c	/^static void v4l_print_u32(const void *arg, bool write_only)$/;"	f	file:
v4l_printk	v4l2-common.h	34;"	d
v4l_printk_ioctl	v4l2-ioctl.c	/^EXPORT_SYMBOL(v4l_printk_ioctl);$/;"	v
v4l_printk_ioctl	v4l2-ioctl.c	/^void v4l_printk_ioctl(const char *prefix, unsigned int cmd)$/;"	f
v4l_qbuf	v4l2-ioctl.c	/^static int v4l_qbuf(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_query_ext_ctrl	v4l2-ioctl.c	/^static int v4l_query_ext_ctrl(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_querybuf	v4l2-ioctl.c	/^static int v4l_querybuf(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_querycap	v4l2-ioctl.c	/^static int v4l_querycap(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_queryctrl	v4l2-ioctl.c	/^static int v4l_queryctrl(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_querymenu	v4l2-ioctl.c	/^static int v4l_querymenu(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_querystd	v4l2-ioctl.c	/^static int v4l_querystd(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_reqbufs	v4l2-ioctl.c	/^static int v4l_reqbufs(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_crop	v4l2-ioctl.c	/^static int v4l_s_crop(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_ctrl	v4l2-ioctl.c	/^static int v4l_s_ctrl(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_ext_ctrls	v4l2-ioctl.c	/^static int v4l_s_ext_ctrls(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_fmt	v4l2-ioctl.c	/^static int v4l_s_fmt(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_frequency	v4l2-ioctl.c	/^static int v4l_s_frequency(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_hw_freq_seek	v4l2-ioctl.c	/^static int v4l_s_hw_freq_seek(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_input	v4l2-ioctl.c	/^static int v4l_s_input(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_modulator	v4l2-ioctl.c	/^static int v4l_s_modulator(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_output	v4l2-ioctl.c	/^static int v4l_s_output(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_parm	v4l2-ioctl.c	/^static int v4l_s_parm(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_priority	v4l2-ioctl.c	/^static int v4l_s_priority(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_selection	v4l2-ioctl.c	/^static int v4l_s_selection(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_std	v4l2-ioctl.c	/^static int v4l_s_std(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_s_tuner	v4l2-ioctl.c	/^static int v4l_s_tuner(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_sanitize_format	v4l2-ioctl.c	/^static void v4l_sanitize_format(struct v4l2_format *fmt)$/;"	f	file:
v4l_streamoff	v4l2-ioctl.c	/^static int v4l_streamoff(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_streamon	v4l2-ioctl.c	/^static int v4l_streamon(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_subscribe_event	v4l2-ioctl.c	/^static int v4l_subscribe_event(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_try_ext_ctrls	v4l2-ioctl.c	/^static int v4l_try_ext_ctrls(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_try_fmt	v4l2-ioctl.c	/^static int v4l_try_fmt(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_unsubscribe_event	v4l2-ioctl.c	/^static int v4l_unsubscribe_event(const struct v4l2_ioctl_ops *ops,$/;"	f	file:
v4l_vb2q_enable_media_source	v4l2-mc.c	/^EXPORT_SYMBOL_GPL(v4l_vb2q_enable_media_source);$/;"	v
v4l_vb2q_enable_media_source	v4l2-mc.c	/^int v4l_vb2q_enable_media_source(struct vb2_queue *q)$/;"	f
v4l_vb2q_enable_media_source	v4l2-mc.h	/^static inline int v4l_vb2q_enable_media_source(struct vb2_queue *q)$/;"	f
v4l_video_std_enumstd	v4l2-ioctl.c	/^int v4l_video_std_enumstd(struct v4l2_standard *vs, v4l2_std_id id)$/;"	f
v4l_warn	v4l2-common.h	44;"	d
vaddr	videobuf-core.h	/^	void *(*vaddr)		(struct videobuf_buffer *buf);$/;"	m	struct:videobuf_qtype_ops
vaddr	videobuf-dma-contig.c	/^	void *vaddr;$/;"	m	struct:videobuf_dma_contig_memory	file:
vaddr	videobuf-dma-sg.h	/^	void                *vaddr;$/;"	m	struct:videobuf_dmabuf
vaddr	videobuf-vmalloc.h	/^	void                *vaddr;$/;"	m	struct:videobuf_vmalloc_memory
vaddr	videobuf2-core.h	/^	void		*(*vaddr)(void *buf_priv);$/;"	m	struct:vb2_mem_ops
vaddr_pages	videobuf-dma-sg.h	/^	struct page         **vaddr_pages;$/;"	m	struct:videobuf_dmabuf	typeref:struct:videobuf_dmabuf::page
val	clk-provider.h	/^	unsigned int	val;$/;"	m	struct:clk_div_table
val	imx219.c	/^	u8 val;$/;"	m	struct:imx219_reg	file:
val	imx258.c	/^	u8 val;$/;"	m	struct:imx258_reg	file:
val	v4l2-ctrls.h	/^		s32 val;$/;"	m	struct:v4l2_ctrl::__anon45
val	v4l2-ctrls.h	/^	s32 val;$/;"	m	struct:v4l2_ctrl
val	videodev2.h	/^	__u64 val;$/;"	m	struct:v4l2_dbg_register
valid_mask	driver.h	/^	unsigned long *valid_mask;$/;"	m	struct:gpio_chip
valid_mask	driver.h	/^	unsigned long *valid_mask;$/;"	m	struct:gpio_irq_chip
validate	v4l2-ctrls.h	/^	int (*validate)(const struct v4l2_ctrl *ctrl, u32 idx,$/;"	m	struct:v4l2_ctrl_type_ops
validate_ctrls	v4l2-ctrls.c	/^static int validate_ctrls(struct v4l2_ext_controls *cs,$/;"	f	file:
validate_new	v4l2-ctrls.c	/^static int validate_new(const struct v4l2_ctrl *ctrl, union v4l2_ctrl_ptr p_new)$/;"	f	file:
value	gpio_keys.h	/^	int value;$/;"	m	struct:gpio_keys_button
value	property.h	/^		} value;$/;"	m	union:property_entry::__anon28	typeref:union:property_entry::__anon28::__anon30
value	v4l2-compat-ioctl32.c	/^		__s32 value;$/;"	m	union:v4l2_ext_control32::__anon41	file:
value	v4l2-subdev.h	/^	u8 value;$/;"	m	struct:v4l2_subdev_io_pin_config
value	videodev2.h	/^		__s32 value;$/;"	m	union:v4l2_event_ctrl::__anon69
value	videodev2.h	/^		__s32 value;$/;"	m	union:v4l2_ext_control::__anon56
value	videodev2.h	/^		__s64	value;$/;"	m	union:v4l2_querymenu::__anon58
value	videodev2.h	/^	__s32		     value;$/;"	m	struct:v4l2_control
value64	v4l2-compat-ioctl32.c	/^		__s64 value64;$/;"	m	union:v4l2_ext_control32::__anon41	file:
value64	v4l2-compat-ioctl32.c	/^		compat_s64		value64;$/;"	m	union:v4l2_event32::__anon42	file:
value64	videodev2.h	/^		__s64 value64;$/;"	m	union:v4l2_event_ctrl::__anon69
value64	videodev2.h	/^		__s64 value64;$/;"	m	union:v4l2_ext_control::__anon56
var	device.h	/^	void *var;$/;"	m	struct:dev_ext_attribute
vary	testusb.c	/^	unsigned		vary;$/;"	m	struct:usbtest_param	file:
vb	dvb_vb2.h	/^	struct vb2_buffer	vb;$/;"	m	struct:dvb_buffer	typeref:struct:dvb_buffer::vb2_buffer
vb	v4l2-mem2mem.h	/^	struct vb2_v4l2_buffer	vb;$/;"	m	struct:v4l2_m2m_buffer	typeref:struct:v4l2_m2m_buffer::vb2_v4l2_buffer
vb2_buf	videobuf2-v4l2.h	/^	struct vb2_buffer	vb2_buf;$/;"	m	struct:vb2_v4l2_buffer	typeref:struct:vb2_v4l2_buffer::vb2_buffer
vb2_buf_ops	videobuf2-core.h	/^struct vb2_buf_ops {$/;"	s
vb2_buffer	videobuf2-core.h	/^struct vb2_buffer {$/;"	s
vb2_buffer_state	videobuf2-core.h	/^enum vb2_buffer_state {$/;"	g
vb2_clear_last_buffer_dequeued	videobuf2-core.h	/^static inline void vb2_clear_last_buffer_dequeued(struct vb2_queue *q)$/;"	f
vb2_ctx	dmxdev.h	/^	struct dvb_vb2_ctx vb2_ctx;$/;"	m	struct:dmxdev_filter	typeref:struct:dmxdev_filter::dvb_vb2_ctx
vb2_dma_contig_plane_dma_addr	videobuf2-dma-contig.h	/^vb2_dma_contig_plane_dma_addr(struct vb2_buffer *vb, unsigned int plane_no)$/;"	f
vb2_dma_sg_plane_desc	videobuf2-dma-sg.h	/^static inline struct sg_table *vb2_dma_sg_plane_desc($/;"	f
vb2_dvb	videobuf2-dvb.h	/^struct vb2_dvb {$/;"	s
vb2_dvb_frontend	videobuf2-dvb.h	/^struct vb2_dvb_frontend {$/;"	s
vb2_dvb_frontends	videobuf2-dvb.h	/^struct vb2_dvb_frontends {$/;"	s
vb2_fileio_is_active	videobuf2-core.h	/^static inline bool vb2_fileio_is_active(struct vb2_queue *q)$/;"	f
vb2_get_drv_priv	videobuf2-core.h	/^static inline void *vb2_get_drv_priv(struct vb2_queue *q)$/;"	f
vb2_get_plane_payload	videobuf2-core.h	/^static inline unsigned long vb2_get_plane_payload(struct vb2_buffer *vb,$/;"	f
vb2_io_modes	videobuf2-core.h	/^enum vb2_io_modes {$/;"	g
vb2_is_busy	videobuf2-core.h	/^static inline bool vb2_is_busy(struct vb2_queue *q)$/;"	f
vb2_is_streaming	videobuf2-core.h	/^static inline bool vb2_is_streaming(struct vb2_queue *q)$/;"	f
vb2_mem_ops	videobuf2-core.h	/^struct vb2_mem_ops {$/;"	s
vb2_memory	videobuf2-core.h	/^enum vb2_memory {$/;"	g
vb2_ops	videobuf2-core.h	/^struct vb2_ops {$/;"	s
vb2_plane	videobuf2-core.h	/^struct vb2_plane {$/;"	s
vb2_plane_size	videobuf2-core.h	/^vb2_plane_size(struct vb2_buffer *vb, unsigned int plane_no)$/;"	f
vb2_queue	videobuf2-core.h	/^	struct vb2_queue	*vb2_queue;$/;"	m	struct:vb2_buffer	typeref:struct:vb2_buffer::vb2_queue
vb2_queue	videobuf2-core.h	/^struct vb2_queue {$/;"	s
vb2_set_plane_payload	videobuf2-core.h	/^static inline void vb2_set_plane_payload(struct vb2_buffer *vb,$/;"	f
vb2_start_streaming_called	videobuf2-core.h	/^static inline bool vb2_start_streaming_called(struct vb2_queue *q)$/;"	f
vb2_thread_fnc	videobuf2-core.h	/^typedef int (*vb2_thread_fnc)(struct vb2_buffer *vb, void *priv);$/;"	t
vb2_v4l2_buf_done	v4l2-trace.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(vb2_v4l2_buf_done);$/;"	v
vb2_v4l2_buf_queue	v4l2-trace.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(vb2_v4l2_buf_queue);$/;"	v
vb2_v4l2_buffer	videobuf2-v4l2.h	/^struct vb2_v4l2_buffer {$/;"	s
vb2_v4l2_dqbuf	v4l2-trace.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(vb2_v4l2_dqbuf);$/;"	v
vb2_v4l2_qbuf	v4l2-trace.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(vb2_v4l2_qbuf);$/;"	v
vb2_vidq	soc_camera.h	/^	struct vb2_queue vb2_vidq;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::vb2_queue
vb2_vmarea_handler	videobuf2-memops.h	/^struct vb2_vmarea_handler {$/;"	s
vb_lock	videobuf-core.h	/^	struct mutex               vb_lock;$/;"	m	struct:videobuf_queue	typeref:struct:videobuf_queue::mutex
vb_q	dvb_vb2.h	/^	struct vb2_queue	vb_q;$/;"	m	struct:dvb_vb2_ctx	typeref:struct:dvb_vb2_ctx::vb2_queue
vbackporch	videodev2.h	/^	__u32	vbackporch;$/;"	m	struct:v4l2_bt_timings
vbi	v4l2-compat-ioctl32.c	/^		struct v4l2_vbi_format	vbi;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_vbi_format	file:
vbi	v4l2-subdev.h	/^	const struct v4l2_subdev_vbi_ops	*vbi;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_vbi_ops
vbi	videodev2.h	/^		struct v4l2_vbi_format		vbi;     \/* V4L2_BUF_TYPE_VBI_CAPTURE *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_vbi_format
vblank	imx258.c	/^	struct v4l2_ctrl *vblank;$/;"	m	struct:imx258	typeref:struct:imx258::v4l2_ctrl	file:
vdev	soc_camera.h	/^	struct video_device *vdev;$/;"	m	struct:soc_camera_device	typeref:struct:soc_camera_device::video_device
vdev	v4l2-fh.h	/^	struct video_device	*vdev;$/;"	m	struct:v4l2_fh	typeref:struct:v4l2_fh::video_device
vdev_to_v4l2_subdev	v4l2-subdev.h	890;"	d
vendor	mod_devicetable.h	/^	__u16	vendor;			\/* Vendor or SDIO_ANY_ID *\/$/;"	m	struct:sdio_device_id
vendor	mod_devicetable.h	/^	__u16	vendor;$/;"	m	struct:ssb_device_id
vendor	mod_devicetable.h	/^	__u16 vendor;$/;"	m	struct:fsl_mc_device_id
vendor	mod_devicetable.h	/^	__u16 vendor;$/;"	m	struct:input_device_id
vendor	mod_devicetable.h	/^	__u16 vendor;$/;"	m	struct:ulpi_device_id
vendor	mod_devicetable.h	/^	__u16 vendor;$/;"	m	struct:x86_cpu_id
vendor	mod_devicetable.h	/^	__u32 vendor, device;		\/* Vendor and device ID or PCI_ANY_ID*\/$/;"	m	struct:pci_device_id
vendor	mod_devicetable.h	/^	__u32 vendor;			\/* Vendor ID or IPACK_ANY_ID *\/$/;"	m	struct:ipack_device_id
vendor	mod_devicetable.h	/^	__u32 vendor;$/;"	m	struct:hid_device_id
vendor	mod_devicetable.h	/^	__u32 vendor;$/;"	m	struct:virtio_device_id
vendor	mod_devicetable.h	/^	unsigned short vendor, function;$/;"	m	struct:isapnp_device_id
vendor_id	mod_devicetable.h	/^	__u32 vendor_id;$/;"	m	struct:hda_device_id
vendor_id	mod_devicetable.h	/^	__u32 vendor_id;$/;"	m	struct:ieee1394_device_id
verbosity	ffs-test.c	/^static unsigned verbosity = 7;$/;"	v	file:
verify_planes_array	videobuf2-core.h	/^	int (*verify_planes_array)(struct vb2_buffer *vb, const void *pb);$/;"	m	struct:vb2_buf_ops
version	mod_devicetable.h	/^	__u16 version;$/;"	m	struct:input_device_id
version	mod_devicetable.h	/^	__u32 version;$/;"	m	struct:ieee1394_device_id
version	mod_devicetable.h	/^	__u8    version;$/;"	m	struct:mei_cl_device_id
version	module.h	/^	const char *version;$/;"	m	struct:module
version	module.h	/^	const char *version;$/;"	m	struct:module_version_attribute
version	videodev2.h	/^	__u32   version;$/;"	m	struct:v4l2_capability
vfh	v4l2-subdev.h	/^	struct v4l2_fh vfh;$/;"	m	struct:v4l2_subdev_fh	typeref:struct:v4l2_subdev_fh::v4l2_fh
vfl_devnode_direction	v4l2-dev.h	/^enum vfl_devnode_direction {$/;"	g
vfl_devnode_type	v4l2-dev.h	/^enum vfl_devnode_type {$/;"	g
vfl_dir	v4l2-dev.h	/^	enum vfl_devnode_direction vfl_dir;$/;"	m	struct:video_device	typeref:enum:video_device::vfl_devnode_direction
vfl_type	v4l2-dev.h	/^	enum vfl_devnode_type vfl_type;$/;"	m	struct:video_device	typeref:enum:video_device::vfl_devnode_type
vfrontporch	videodev2.h	/^	__u32	vfrontporch;$/;"	m	struct:v4l2_bt_timings
vid	mod_devicetable.h	/^	__u16 did, vid;$/;"	m	struct:rio_device_id
video	v4l2-subdev.h	/^	const struct v4l2_subdev_video_ops	*video;$/;"	m	struct:v4l2_subdev_ops	typeref:struct:v4l2_subdev_ops::v4l2_subdev_video_ops
video_class	v4l2-dev.c	/^static struct class video_class = {$/;"	v	typeref:struct:class	file:
video_devdata	v4l2-dev.c	/^EXPORT_SYMBOL(video_devdata);$/;"	v
video_devdata	v4l2-dev.c	/^struct video_device *video_devdata(struct file *file)$/;"	f
video_device	v4l2-dev.c	/^ATTRIBUTE_GROUPS(video_device);$/;"	v
video_device	v4l2-dev.h	/^struct video_device$/;"	s
video_device_alloc	v4l2-dev.c	/^EXPORT_SYMBOL(video_device_alloc);$/;"	v
video_device_alloc	v4l2-dev.c	/^struct video_device *video_device_alloc(void)$/;"	f
video_device_attrs	v4l2-dev.c	/^static struct attribute *video_device_attrs[] = {$/;"	v	typeref:struct:attribute	file:
video_device_node_name	v4l2-dev.h	/^static inline const char *video_device_node_name(struct video_device *vdev)$/;"	f
video_device_release	v4l2-dev.c	/^EXPORT_SYMBOL(video_device_release);$/;"	v
video_device_release	v4l2-dev.c	/^void video_device_release(struct video_device *vdev)$/;"	f
video_device_release_empty	v4l2-dev.c	/^EXPORT_SYMBOL(video_device_release_empty);$/;"	v
video_device_release_empty	v4l2-dev.c	/^void video_device_release_empty(struct video_device *vdev)$/;"	f
video_devices	v4l2-dev.c	/^static struct video_device *video_devices[VIDEO_NUM_DEVICES];$/;"	v	typeref:struct:video_device	file:
video_drvdata	v4l2-dev.h	/^static inline void *video_drvdata(struct file *file)$/;"	f
video_get	v4l2-dev.c	/^static inline void video_get(struct video_device *vdev)$/;"	f	file:
video_get_drvdata	v4l2-dev.h	/^static inline void *video_get_drvdata(struct video_device *vdev)$/;"	f
video_ioctl2	v4l2-ioctl.c	/^EXPORT_SYMBOL(video_ioctl2);$/;"	v
video_ioctl2	v4l2-ioctl.c	/^long video_ioctl2(struct file *file,$/;"	f
video_is_registered	v4l2-dev.h	/^static inline int video_is_registered(struct video_device *vdev)$/;"	f
video_put	v4l2-dev.c	/^static inline void video_put(struct video_device *vdev)$/;"	f	file:
video_register_device	v4l2-dev.h	/^static inline int __must_check video_register_device(struct video_device *vdev,$/;"	f
video_register_device_no_warn	v4l2-dev.h	/^video_register_device_no_warn(struct video_device *vdev,$/;"	f
video_register_media_controller	v4l2-dev.c	/^static int video_register_media_controller(struct video_device *vdev)$/;"	f	file:
video_set_drvdata	v4l2-dev.h	/^static inline void video_set_drvdata(struct video_device *vdev, void *data)$/;"	f
video_unregister_device	v4l2-dev.c	/^EXPORT_SYMBOL(video_unregister_device);$/;"	v
video_unregister_device	v4l2-dev.c	/^void video_unregister_device(struct video_device *vdev)$/;"	f
video_usercopy	v4l2-ioctl.c	/^video_usercopy(struct file *file, unsigned int cmd, unsigned long arg,$/;"	f
videobuf_alloc_vb	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_alloc_vb);$/;"	v
videobuf_alloc_vb	videobuf-core.c	/^struct videobuf_buffer *videobuf_alloc_vb(struct videobuf_queue *q)$/;"	f
videobuf_buffer	videobuf-core.h	/^struct videobuf_buffer {$/;"	s
videobuf_dma_contig_free	videobuf-dma-contig.c	/^EXPORT_SYMBOL_GPL(videobuf_dma_contig_free);$/;"	v
videobuf_dma_contig_free	videobuf-dma-contig.c	/^void videobuf_dma_contig_free(struct videobuf_queue *q,$/;"	f
videobuf_dma_contig_memory	videobuf-dma-contig.c	/^struct videobuf_dma_contig_memory {$/;"	s	file:
videobuf_dma_contig_user_get	videobuf-dma-contig.c	/^static int videobuf_dma_contig_user_get(struct videobuf_dma_contig_memory *mem,$/;"	f	file:
videobuf_dma_contig_user_put	videobuf-dma-contig.c	/^static void videobuf_dma_contig_user_put(struct videobuf_dma_contig_memory *mem)$/;"	f	file:
videobuf_dma_free	videobuf-dma-sg.c	/^EXPORT_SYMBOL_GPL(videobuf_dma_free);$/;"	v
videobuf_dma_free	videobuf-dma-sg.c	/^int videobuf_dma_free(struct videobuf_dmabuf *dma)$/;"	f
videobuf_dma_init	videobuf-dma-sg.c	/^static void videobuf_dma_init(struct videobuf_dmabuf *dma)$/;"	f	file:
videobuf_dma_init_kernel	videobuf-dma-sg.c	/^static int videobuf_dma_init_kernel(struct videobuf_dmabuf *dma, int direction,$/;"	f	file:
videobuf_dma_init_overlay	videobuf-dma-sg.c	/^static int videobuf_dma_init_overlay(struct videobuf_dmabuf *dma, int direction,$/;"	f	file:
videobuf_dma_init_user	videobuf-dma-sg.c	/^static int videobuf_dma_init_user(struct videobuf_dmabuf *dma, int direction,$/;"	f	file:
videobuf_dma_init_user_locked	videobuf-dma-sg.c	/^static int videobuf_dma_init_user_locked(struct videobuf_dmabuf *dma,$/;"	f	file:
videobuf_dma_map	videobuf-dma-sg.c	/^static int videobuf_dma_map(struct device *dev, struct videobuf_dmabuf *dma)$/;"	f	file:
videobuf_dma_sg_memory	videobuf-dma-sg.h	/^struct videobuf_dma_sg_memory {$/;"	s
videobuf_dma_unmap	videobuf-dma-sg.c	/^EXPORT_SYMBOL_GPL(videobuf_dma_unmap);$/;"	v
videobuf_dma_unmap	videobuf-dma-sg.c	/^int videobuf_dma_unmap(struct device *dev, struct videobuf_dmabuf *dma)$/;"	f
videobuf_dmabuf	videobuf-dma-sg.h	/^struct videobuf_dmabuf {$/;"	s
videobuf_dqbuf	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_dqbuf);$/;"	v
videobuf_dqbuf	videobuf-core.c	/^int videobuf_dqbuf(struct videobuf_queue *q,$/;"	f
videobuf_iolock	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_iolock);$/;"	v
videobuf_iolock	videobuf-core.c	/^int videobuf_iolock(struct videobuf_queue *q, struct videobuf_buffer *vb,$/;"	f
videobuf_mapping	videobuf-core.h	/^struct videobuf_mapping {$/;"	s
videobuf_mmap_free	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_mmap_free);$/;"	v
videobuf_mmap_free	videobuf-core.c	/^int videobuf_mmap_free(struct videobuf_queue *q)$/;"	f
videobuf_mmap_mapper	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_mmap_mapper);$/;"	v
videobuf_mmap_mapper	videobuf-core.c	/^int videobuf_mmap_mapper(struct videobuf_queue *q, struct vm_area_struct *vma)$/;"	f
videobuf_mmap_setup	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_mmap_setup);$/;"	v
videobuf_mmap_setup	videobuf-core.c	/^int videobuf_mmap_setup(struct videobuf_queue *q,$/;"	f
videobuf_next_field	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_next_field);$/;"	v
videobuf_next_field	videobuf-core.c	/^enum v4l2_field videobuf_next_field(struct videobuf_queue *q)$/;"	f
videobuf_pages_to_sg	videobuf-dma-sg.c	/^static struct scatterlist *videobuf_pages_to_sg(struct page **pages,$/;"	f	file:
videobuf_poll_stream	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_poll_stream);$/;"	v
videobuf_poll_stream	videobuf-core.c	/^__poll_t videobuf_poll_stream(struct file *file,$/;"	f
videobuf_qbuf	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_qbuf);$/;"	v
videobuf_qbuf	videobuf-core.c	/^int videobuf_qbuf(struct videobuf_queue *q, struct v4l2_buffer *b)$/;"	f
videobuf_qtype_ops	videobuf-core.h	/^struct videobuf_qtype_ops {$/;"	s
videobuf_querybuf	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_querybuf);$/;"	v
videobuf_querybuf	videobuf-core.c	/^int videobuf_querybuf(struct videobuf_queue *q, struct v4l2_buffer *b)$/;"	f
videobuf_queue	videobuf-core.h	/^struct videobuf_queue {$/;"	s
videobuf_queue_cancel	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_cancel);$/;"	v
videobuf_queue_cancel	videobuf-core.c	/^void videobuf_queue_cancel(struct videobuf_queue *q)$/;"	f
videobuf_queue_core_init	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_core_init);$/;"	v
videobuf_queue_core_init	videobuf-core.c	/^void videobuf_queue_core_init(struct videobuf_queue *q,$/;"	f
videobuf_queue_dma_contig_init	videobuf-dma-contig.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_dma_contig_init);$/;"	v
videobuf_queue_dma_contig_init	videobuf-dma-contig.c	/^void videobuf_queue_dma_contig_init(struct videobuf_queue *q,$/;"	f
videobuf_queue_is_busy	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_is_busy);$/;"	v
videobuf_queue_is_busy	videobuf-core.c	/^int videobuf_queue_is_busy(struct videobuf_queue *q)$/;"	f
videobuf_queue_lock	videobuf-core.h	/^static inline void videobuf_queue_lock(struct videobuf_queue *q)$/;"	f
videobuf_queue_ops	videobuf-core.h	/^struct videobuf_queue_ops {$/;"	s
videobuf_queue_sg_init	videobuf-dma-sg.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_sg_init);$/;"	v
videobuf_queue_sg_init	videobuf-dma-sg.c	/^void videobuf_queue_sg_init(struct videobuf_queue *q,$/;"	f
videobuf_queue_to_vaddr	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_to_vaddr);$/;"	v
videobuf_queue_to_vaddr	videobuf-core.c	/^void *videobuf_queue_to_vaddr(struct videobuf_queue *q,$/;"	f
videobuf_queue_unlock	videobuf-core.h	/^static inline void videobuf_queue_unlock(struct videobuf_queue *q)$/;"	f
videobuf_queue_vmalloc_init	videobuf-vmalloc.c	/^EXPORT_SYMBOL_GPL(videobuf_queue_vmalloc_init);$/;"	v
videobuf_queue_vmalloc_init	videobuf-vmalloc.c	/^void videobuf_queue_vmalloc_init(struct videobuf_queue *q,$/;"	f
videobuf_read_one	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_read_one);$/;"	v
videobuf_read_one	videobuf-core.c	/^ssize_t videobuf_read_one(struct videobuf_queue *q,$/;"	f
videobuf_read_start	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_read_start);$/;"	v
videobuf_read_start	videobuf-core.c	/^int videobuf_read_start(struct videobuf_queue *q)$/;"	f
videobuf_read_stop	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_read_stop);$/;"	v
videobuf_read_stop	videobuf-core.c	/^void videobuf_read_stop(struct videobuf_queue *q)$/;"	f
videobuf_read_stream	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_read_stream);$/;"	v
videobuf_read_stream	videobuf-core.c	/^ssize_t videobuf_read_stream(struct videobuf_queue *q,$/;"	f
videobuf_read_zerocopy	videobuf-core.c	/^static ssize_t videobuf_read_zerocopy(struct videobuf_queue *q,$/;"	f	file:
videobuf_reqbufs	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_reqbufs);$/;"	v
videobuf_reqbufs	videobuf-core.c	/^int videobuf_reqbufs(struct videobuf_queue *q,$/;"	f
videobuf_sg_alloc	videobuf-dma-sg.c	/^EXPORT_SYMBOL_GPL(videobuf_sg_alloc);$/;"	v
videobuf_sg_alloc	videobuf-dma-sg.c	/^void *videobuf_sg_alloc(size_t size)$/;"	f
videobuf_state	videobuf-core.h	/^enum videobuf_state {$/;"	g
videobuf_status	videobuf-core.c	/^static void videobuf_status(struct videobuf_queue *q, struct v4l2_buffer *b,$/;"	f	file:
videobuf_stop	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_stop);$/;"	v
videobuf_stop	videobuf-core.c	/^void videobuf_stop(struct videobuf_queue *q)$/;"	f
videobuf_streamoff	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_streamoff);$/;"	v
videobuf_streamoff	videobuf-core.c	/^int videobuf_streamoff(struct videobuf_queue *q)$/;"	f
videobuf_streamon	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_streamon);$/;"	v
videobuf_streamon	videobuf-core.c	/^int videobuf_streamon(struct videobuf_queue *q)$/;"	f
videobuf_to_dma	videobuf-dma-sg.c	/^EXPORT_SYMBOL_GPL(videobuf_to_dma);$/;"	v
videobuf_to_dma	videobuf-dma-sg.c	/^struct videobuf_dmabuf *videobuf_to_dma(struct videobuf_buffer *buf)$/;"	f
videobuf_to_dma_contig	videobuf-dma-contig.c	/^EXPORT_SYMBOL_GPL(videobuf_to_dma_contig);$/;"	v
videobuf_to_dma_contig	videobuf-dma-contig.c	/^dma_addr_t videobuf_to_dma_contig(struct videobuf_buffer *buf)$/;"	f
videobuf_to_vmalloc	videobuf-vmalloc.c	/^EXPORT_SYMBOL_GPL(videobuf_to_vmalloc);$/;"	v
videobuf_to_vmalloc	videobuf-vmalloc.c	/^void *videobuf_to_vmalloc(struct videobuf_buffer *buf)$/;"	f
videobuf_vm_close	videobuf-dma-contig.c	/^static void videobuf_vm_close(struct vm_area_struct *vma)$/;"	f	file:
videobuf_vm_close	videobuf-dma-sg.c	/^static void videobuf_vm_close(struct vm_area_struct *vma)$/;"	f	file:
videobuf_vm_close	videobuf-vmalloc.c	/^static void videobuf_vm_close(struct vm_area_struct *vma)$/;"	f	file:
videobuf_vm_fault	videobuf-dma-sg.c	/^static vm_fault_t videobuf_vm_fault(struct vm_fault *vmf)$/;"	f	file:
videobuf_vm_open	videobuf-dma-contig.c	/^static void videobuf_vm_open(struct vm_area_struct *vma)$/;"	f	file:
videobuf_vm_open	videobuf-dma-sg.c	/^static void videobuf_vm_open(struct vm_area_struct *vma)$/;"	f	file:
videobuf_vm_open	videobuf-vmalloc.c	/^static void videobuf_vm_open(struct vm_area_struct *vma)$/;"	f	file:
videobuf_vm_ops	videobuf-dma-contig.c	/^static const struct vm_operations_struct videobuf_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
videobuf_vm_ops	videobuf-dma-sg.c	/^static const struct vm_operations_struct videobuf_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
videobuf_vm_ops	videobuf-vmalloc.c	/^static const struct vm_operations_struct videobuf_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
videobuf_vmalloc_free	videobuf-vmalloc.c	/^EXPORT_SYMBOL_GPL(videobuf_vmalloc_free);$/;"	v
videobuf_vmalloc_free	videobuf-vmalloc.c	/^void videobuf_vmalloc_free(struct videobuf_buffer *buf)$/;"	f
videobuf_vmalloc_memory	videobuf-vmalloc.h	/^struct videobuf_vmalloc_memory {$/;"	s
videobuf_vmalloc_to_sg	videobuf-dma-sg.c	/^static struct scatterlist *videobuf_vmalloc_to_sg(unsigned char *virt,$/;"	f	file:
videobuf_waiton	videobuf-core.c	/^EXPORT_SYMBOL_GPL(videobuf_waiton);$/;"	v
videobuf_waiton	videobuf-core.c	/^int videobuf_waiton(struct videobuf_queue *q, struct videobuf_buffer *vb,$/;"	f
videodev_exit	v4l2-dev.c	/^static void __exit videodev_exit(void)$/;"	f	file:
videodev_init	v4l2-dev.c	/^static int __init videodev_init(void)$/;"	f	file:
videodev_init	v4l2-dev.c	/^subsys_initcall(videodev_init);$/;"	v
vidioc_create_bufs	v4l2-ioctl.h	/^	int (*vidioc_create_bufs)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_cropcap	v4l2-ioctl.h	/^	int (*vidioc_cropcap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_decoder_cmd	v4l2-ioctl.h	/^	int (*vidioc_decoder_cmd)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_default	v4l2-ioctl.h	/^	long (*vidioc_default)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_dqbuf	v4l2-ioctl.h	/^	int (*vidioc_dqbuf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_dv_timings_cap	v4l2-ioctl.h	/^	int (*vidioc_dv_timings_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_encoder_cmd	v4l2-ioctl.h	/^	int (*vidioc_encoder_cmd)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_dv_timings	v4l2-ioctl.h	/^	int (*vidioc_enum_dv_timings)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_meta_cap	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_meta_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_sdr_cap	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_sdr_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_sdr_out	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_sdr_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_vid_cap	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_vid_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_vid_cap_mplane	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_vid_cap_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_vid_out	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_vid_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_vid_out_mplane	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_vid_out_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_fmt_vid_overlay	v4l2-ioctl.h	/^	int (*vidioc_enum_fmt_vid_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_frameintervals	v4l2-ioctl.h	/^	int (*vidioc_enum_frameintervals)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_framesizes	v4l2-ioctl.h	/^	int (*vidioc_enum_framesizes)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_freq_bands	v4l2-ioctl.h	/^	int (*vidioc_enum_freq_bands)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_input	v4l2-ioctl.h	/^	int (*vidioc_enum_input)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enum_output	v4l2-ioctl.h	/^	int (*vidioc_enum_output)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enumaudio	v4l2-ioctl.h	/^	int (*vidioc_enumaudio)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_enumaudout	v4l2-ioctl.h	/^	int (*vidioc_enumaudout)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_expbuf	v4l2-ioctl.h	/^	int (*vidioc_expbuf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_audio	v4l2-ioctl.h	/^	int (*vidioc_g_audio)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_audout	v4l2-ioctl.h	/^	int (*vidioc_g_audout)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_chip_info	v4l2-ioctl.h	/^	int (*vidioc_g_chip_info)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_crop	v4l2-ioctl.h	/^	int (*vidioc_g_crop)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_ctrl	v4l2-ioctl.h	/^	int (*vidioc_g_ctrl)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_dv_timings	v4l2-ioctl.h	/^	int (*vidioc_g_dv_timings)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_edid	v4l2-ioctl.h	/^	int (*vidioc_g_edid)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_enc_index	v4l2-ioctl.h	/^	int (*vidioc_g_enc_index)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_ext_ctrls	v4l2-ioctl.h	/^	int (*vidioc_g_ext_ctrls)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fbuf	v4l2-ioctl.h	/^	int (*vidioc_g_fbuf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_meta_cap	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_meta_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_sdr_cap	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_sdr_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_sdr_out	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_sdr_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_sliced_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_sliced_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_sliced_vbi_out	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_sliced_vbi_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vbi_out	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vbi_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vid_cap	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vid_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vid_cap_mplane	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vid_cap_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vid_out	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vid_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vid_out_mplane	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vid_out_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vid_out_overlay	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vid_out_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_fmt_vid_overlay	v4l2-ioctl.h	/^	int (*vidioc_g_fmt_vid_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_frequency	v4l2-ioctl.h	/^	int (*vidioc_g_frequency)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_input	v4l2-ioctl.h	/^	int (*vidioc_g_input)(struct file *file, void *fh, unsigned int *i);$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_jpegcomp	v4l2-ioctl.h	/^	int (*vidioc_g_jpegcomp)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_modulator	v4l2-ioctl.h	/^	int (*vidioc_g_modulator)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_output	v4l2-ioctl.h	/^	int (*vidioc_g_output)(struct file *file, void *fh, unsigned int *i);$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_parm	v4l2-ioctl.h	/^	int (*vidioc_g_parm)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_register	v4l2-ioctl.h	/^	int (*vidioc_g_register)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_selection	v4l2-ioctl.h	/^	int (*vidioc_g_selection)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_sliced_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_g_sliced_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_std	v4l2-ioctl.h	/^	int (*vidioc_g_std)(struct file *file, void *fh, v4l2_std_id *norm);$/;"	m	struct:v4l2_ioctl_ops
vidioc_g_tuner	v4l2-ioctl.h	/^	int (*vidioc_g_tuner)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_log_status	v4l2-ioctl.h	/^	int (*vidioc_log_status)(struct file *file, void *fh);$/;"	m	struct:v4l2_ioctl_ops
vidioc_overlay	v4l2-ioctl.h	/^	int (*vidioc_overlay)(struct file *file, void *fh, unsigned int i);$/;"	m	struct:v4l2_ioctl_ops
vidioc_prepare_buf	v4l2-ioctl.h	/^	int (*vidioc_prepare_buf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_qbuf	v4l2-ioctl.h	/^	int (*vidioc_qbuf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_query_dv_timings	v4l2-ioctl.h	/^	int (*vidioc_query_dv_timings)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_query_ext_ctrl	v4l2-ioctl.h	/^	int (*vidioc_query_ext_ctrl)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_querybuf	v4l2-ioctl.h	/^	int (*vidioc_querybuf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_querycap	v4l2-ioctl.h	/^	int (*vidioc_querycap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_queryctrl	v4l2-ioctl.h	/^	int (*vidioc_queryctrl)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_querymenu	v4l2-ioctl.h	/^	int (*vidioc_querymenu)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_querystd	v4l2-ioctl.h	/^	int (*vidioc_querystd)(struct file *file, void *fh, v4l2_std_id *a);$/;"	m	struct:v4l2_ioctl_ops
vidioc_reqbufs	v4l2-ioctl.h	/^	int (*vidioc_reqbufs)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_audio	v4l2-ioctl.h	/^	int (*vidioc_s_audio)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_audout	v4l2-ioctl.h	/^	int (*vidioc_s_audout)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_crop	v4l2-ioctl.h	/^	int (*vidioc_s_crop)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_ctrl	v4l2-ioctl.h	/^	int (*vidioc_s_ctrl)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_dv_timings	v4l2-ioctl.h	/^	int (*vidioc_s_dv_timings)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_edid	v4l2-ioctl.h	/^	int (*vidioc_s_edid)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_ext_ctrls	v4l2-ioctl.h	/^	int (*vidioc_s_ext_ctrls)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fbuf	v4l2-ioctl.h	/^	int (*vidioc_s_fbuf)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_meta_cap	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_meta_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_sdr_cap	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_sdr_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_sdr_out	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_sdr_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_sliced_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_sliced_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_sliced_vbi_out	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_sliced_vbi_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vbi_out	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vbi_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vid_cap	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vid_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vid_cap_mplane	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vid_cap_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vid_out	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vid_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vid_out_mplane	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vid_out_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vid_out_overlay	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vid_out_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_fmt_vid_overlay	v4l2-ioctl.h	/^	int (*vidioc_s_fmt_vid_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_frequency	v4l2-ioctl.h	/^	int (*vidioc_s_frequency)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_hw_freq_seek	v4l2-ioctl.h	/^	int (*vidioc_s_hw_freq_seek)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_input	v4l2-ioctl.h	/^	int (*vidioc_s_input)(struct file *file, void *fh, unsigned int i);$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_jpegcomp	v4l2-ioctl.h	/^	int (*vidioc_s_jpegcomp)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_modulator	v4l2-ioctl.h	/^	int (*vidioc_s_modulator)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_output	v4l2-ioctl.h	/^	int (*vidioc_s_output)(struct file *file, void *fh, unsigned int i);$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_parm	v4l2-ioctl.h	/^	int (*vidioc_s_parm)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_register	v4l2-ioctl.h	/^	int (*vidioc_s_register)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_selection	v4l2-ioctl.h	/^	int (*vidioc_s_selection)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_std	v4l2-ioctl.h	/^	int (*vidioc_s_std)(struct file *file, void *fh, v4l2_std_id norm);$/;"	m	struct:v4l2_ioctl_ops
vidioc_s_tuner	v4l2-ioctl.h	/^	int (*vidioc_s_tuner)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_streamoff	v4l2-ioctl.h	/^	int (*vidioc_streamoff)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_streamon	v4l2-ioctl.h	/^	int (*vidioc_streamon)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_subscribe_event	v4l2-ioctl.h	/^	int (*vidioc_subscribe_event)(struct v4l2_fh *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_decoder_cmd	v4l2-ioctl.h	/^	int (*vidioc_try_decoder_cmd)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_encoder_cmd	v4l2-ioctl.h	/^	int (*vidioc_try_encoder_cmd)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_ext_ctrls	v4l2-ioctl.h	/^	int (*vidioc_try_ext_ctrls)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_meta_cap	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_meta_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_sdr_cap	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_sdr_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_sdr_out	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_sdr_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_sliced_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_sliced_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_sliced_vbi_out	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_sliced_vbi_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vbi_cap	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vbi_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vbi_out	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vbi_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vid_cap	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vid_cap)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vid_cap_mplane	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vid_cap_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vid_out	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vid_out)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vid_out_mplane	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vid_out_mplane)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vid_out_overlay	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vid_out_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_try_fmt_vid_overlay	v4l2-ioctl.h	/^	int (*vidioc_try_fmt_vid_overlay)(struct file *file, void *fh,$/;"	m	struct:v4l2_ioctl_ops
vidioc_unsubscribe_event	v4l2-ioctl.h	/^	int (*vidioc_unsubscribe_event)(struct v4l2_fh *fh,$/;"	m	struct:v4l2_ioctl_ops
vio_device_id	mod_devicetable.h	/^struct vio_device_id {$/;"	s
virtio_device_id	mod_devicetable.h	/^struct virtio_device_id {$/;"	s
vma	videobuf-vmalloc.h	/^	struct vm_area_struct *vma;$/;"	m	struct:videobuf_vmalloc_memory	typeref:struct:videobuf_vmalloc_memory::vm_area_struct
voltage	dvb_frontend.h	/^	enum fe_sec_voltage	voltage;$/;"	m	struct:dtv_frontend_properties	typeref:enum:dtv_frontend_properties::fe_sec_voltage
vsp1_du_atomic_config	vsp1.h	/^struct vsp1_du_atomic_config {$/;"	s
vsp1_du_atomic_pipe_config	vsp1.h	/^struct vsp1_du_atomic_pipe_config {$/;"	s
vsp1_du_crc_config	vsp1.h	/^struct vsp1_du_crc_config {$/;"	s
vsp1_du_crc_source	vsp1.h	/^enum vsp1_du_crc_source {$/;"	g
vsp1_du_lif_config	vsp1.h	/^struct vsp1_du_lif_config {$/;"	s
vsync	videodev2.h	/^		struct v4l2_event_vsync		vsync;$/;"	m	union:v4l2_event::__anon70	typeref:struct:v4l2_event::__anon70::v4l2_event_vsync
vsync	videodev2.h	/^	__u32	vsync;$/;"	m	struct:v4l2_bt_timings
vts_def	imx219.c	/^	u32 vts_def;$/;"	m	struct:imx219_mode	file:
vts_def	imx258.c	/^	u32 vts_def;$/;"	m	struct:imx258_mode	file:
vts_min	imx258.c	/^	u32 vts_min;$/;"	m	struct:imx258_mode	file:
w	v4l2-compat-ioctl32.c	/^	struct v4l2_rect        w;$/;"	m	struct:v4l2_window32	typeref:struct:v4l2_window32::v4l2_rect	file:
w	videodev2.h	/^	struct v4l2_rect        w;$/;"	m	struct:v4l2_window	typeref:struct:v4l2_window::v4l2_rect
wait	cec.h	/^	wait_queue_head_t	wait;$/;"	m	struct:cec_fh
wait	v4l2-fh.h	/^	wait_queue_head_t	wait;$/;"	m	struct:v4l2_fh
wait	videobuf-core.h	/^	wait_queue_head_t	   wait; \/* wait if queue is empty *\/$/;"	m	struct:videobuf_queue
wait_finish	videobuf2-core.h	/^	void (*wait_finish)(struct vb2_queue *q);$/;"	m	struct:vb2_ops
wait_for_completion	i2c-algo-pca.h	/^	int  (*wait_for_completion)	(void *data);$/;"	m	struct:i2c_algo_pca_data
wait_poll	rc-core.h	/^	wait_queue_head_t		wait_poll;$/;"	m	struct:lirc_fh
wait_prepare	videobuf2-core.h	/^	void (*wait_prepare)(struct vb2_queue *q);$/;"	m	struct:vb2_ops
wait_queue	cec.h	/^	struct list_head wait_queue;$/;"	m	struct:cec_adapter	typeref:struct:cec_adapter::list_head
wait_queue	dvb_frontend.h	/^	wait_queue_head_t	  wait_queue;$/;"	m	struct:dvb_fe_events
wait_queue	dvbdev.h	/^	wait_queue_head_t	  wait_queue;$/;"	m	struct:dvb_device
wait_queue	pm.h	/^	wait_queue_head_t	wait_queue;$/;"	m	struct:dev_pm_info
waitforpin	i2c-algo-pcf.h	/^	void (*waitforpin) (void *data);$/;"	m	struct:i2c_algo_pcf_data
waiting	v4l2-async.h	/^	struct list_head waiting;$/;"	m	struct:v4l2_async_notifier	typeref:struct:v4l2_async_notifier::list_head
waiting_for_buffers	videobuf2-core.h	/^	unsigned int			waiting_for_buffers:1;$/;"	m	struct:vb2_queue
waiting_in_dqbuf	videobuf2-core.h	/^	unsigned int			waiting_in_dqbuf:1;$/;"	m	struct:vb2_queue
waitq	cec.h	/^	wait_queue_head_t waitq;$/;"	m	struct:cec_adapter
wakeirq	pm.h	/^	struct wake_irq		*wakeirq;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::wake_irq
wakeup	gpio_keys.h	/^	int wakeup;$/;"	m	struct:gpio_keys_button
wakeup	pm.h	/^	struct wakeup_source	*wakeup;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::wakeup_source
wakeup_event_action	gpio_keys.h	/^	int wakeup_event_action;$/;"	m	struct:gpio_keys_button
wakeup_path	pm.h	/^	bool			wakeup_path:1;$/;"	m	struct:dev_pm_info
wakeup_protocol	rc-core.h	/^	enum rc_proto			wakeup_protocol;$/;"	m	struct:rc_dev	typeref:enum:rc_dev::rc_proto
walk_relocs	relocs.c	/^static void walk_relocs(int (*process)(struct section *sec, Elf_Rel *rel,$/;"	f	file:
warn	ffs-test.c	109;"	d	file:
wdata	i2c-core-acpi.c	/^		u16	wdata;$/;"	m	union:gsb_buffer::__anon13	file:
which	v4l2-compat-ioctl32.c	/^	__u32 which;$/;"	m	struct:v4l2_ext_controls32	file:
which	videodev2.h	/^		__u32 which;$/;"	m	union:v4l2_ext_controls::__anon57
width	clk-provider.h	/^	u8		width;$/;"	m	struct:clk_divider
width	clk-provider.h	/^	u8		width;$/;"	m	struct:clk_multiplier
width	imx219.c	/^	u32 width;$/;"	m	struct:imx219_mode	file:
width	imx258.c	/^	u32 width;$/;"	m	struct:imx258_mode	file:
width	v4l2-compat-ioctl32.c	/^		__u32		width;$/;"	m	struct:v4l2_framebuffer32::__anon40	file:
width	videobuf-core.h	/^	unsigned int            width;$/;"	m	struct:videobuf_buffer
width	videodev2.h	/^		__u32		width;$/;"	m	struct:v4l2_framebuffer::__anon53
width	videodev2.h	/^	__u32				width;$/;"	m	struct:v4l2_pix_format_mplane
width	videodev2.h	/^	__u32			width;		\/* Frame width *\/$/;"	m	struct:v4l2_frmivalenum
width	videodev2.h	/^	__u32			width;		\/* Frame width [pixel] *\/$/;"	m	struct:v4l2_frmsize_discrete
width	videodev2.h	/^	__u32			width;$/;"	m	struct:v4l2_pix_format
width	videodev2.h	/^	__u32	width;$/;"	m	struct:v4l2_bt_timings
width	videodev2.h	/^	__u32   width;$/;"	m	struct:v4l2_rect
width	vsp1.h	/^	unsigned int width;$/;"	m	struct:vsp1_du_lif_config
win	v4l2-compat-ioctl32.c	/^		struct v4l2_window32	win;$/;"	m	union:v4l2_format32::__anon37	typeref:struct:v4l2_format32::__anon37::v4l2_window32	file:
win	videodev2.h	/^		struct v4l2_window		win;     \/* V4L2_BUF_TYPE_VIDEO_OVERLAY *\/$/;"	m	union:v4l2_format::__anon67	typeref:struct:v4l2_format::__anon67::v4l2_window
within_module	module.h	/^static inline bool within_module(unsigned long addr, const struct module *mod)$/;"	f
within_module_core	module.h	/^static inline bool within_module_core(unsigned long addr,$/;"	f
within_module_init	module.h	/^static inline bool within_module_init(unsigned long addr,$/;"	f
work	cec.h	/^	struct delayed_work work;$/;"	m	struct:cec_data	typeref:struct:cec_data::delayed_work
work	pm.h	/^	struct work_struct	work;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_info::work_struct
wrap_around	videodev2.h	/^	__u32	wrap_around;$/;"	m	struct:v4l2_hw_freq_seek
write	demux.h	/^	int (*write)(struct dmx_demux *demux, const char __user *buf,$/;"	m	struct:dmx_demux
write	dvb_frontend.h	/^	int (*write)(struct dvb_frontend* fe, const u8 buf[], int len);$/;"	m	struct:dvb_frontend_ops
write	i2c-pxa.h	/^	void (*write)(void *ptr, unsigned int val);$/;"	m	struct:i2c_slave_client
write	media-devnode.h	/^	ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);$/;"	m	struct:media_file_operations
write	sysfs1.h	/^	ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *,$/;"	m	struct:bin_attribute
write	v4l2-dev.h	/^	ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);$/;"	m	struct:v4l2_file_operations
write_attribute_mem	dvb_ca_en50221.h	/^	int (*write_attribute_mem)(struct dvb_ca_en50221 *ca,$/;"	m	struct:dvb_ca_en50221
write_byte	i2c-algo-pca.h	/^	void (*write_byte)		(void *data, int reg, int val);$/;"	m	struct:i2c_algo_pca_data
write_cam_control	dvb_ca_en50221.h	/^	int (*write_cam_control)(struct dvb_ca_en50221 *ca,$/;"	m	struct:dvb_ca_en50221
write_data	dvb_ca_en50221.h	/^	int (*write_data)(struct dvb_ca_en50221 *ca,$/;"	m	struct:dvb_ca_en50221
write_reg	driver.h	/^	void (*write_reg)(void __iomem *reg, unsigned long data);$/;"	m	struct:gpio_chip
write_reloc_as_bin	relocs.c	/^static int write_reloc_as_bin(uint32_t v, FILE *f)$/;"	f	file:
write_reloc_as_text	relocs.c	/^static int write_reloc_as_text(uint32_t v, FILE *f)$/;"	f	file:
write_to_decoder	dvb_demux.h	/^	int (*write_to_decoder)(struct dvb_demux_feed *feed,$/;"	m	struct:dvb_demux
write_wrap	ffs-test.c	/^static ssize_t write_wrap(struct thread *t, const void *buf, size_t nbytes)$/;"	f	file:
writebuffers	videodev2.h	/^	__u32              writebuffers; \/*  # of buffers for write *\/$/;"	m	struct:v4l2_outputparm
writers	dvbdev.h	/^	int writers;$/;"	m	struct:dvb_device
x	packed_struct.h	/^struct __una_u16 { u16 x; } __packed;$/;"	m	struct:__una_u16
x	packed_struct.h	/^struct __una_u32 { u32 x; } __packed;$/;"	m	struct:__una_u32
x	packed_struct.h	/^struct __una_u64 { u64 x; } __packed;$/;"	m	struct:__una_u64
x86_cpu_id	mod_devicetable.h	/^struct x86_cpu_id {$/;"	s
x86cpu_device_id	mod_devicetable.h	625;"	d
xclk	imx219.c	/^	struct clk *xclk; \/* system clock to IMX219 *\/$/;"	m	struct:imx219	typeref:struct:imx219::clk	file:
xclk_freq	imx219.c	/^	u32 xclk_freq;$/;"	m	struct:imx219	file:
xclr_gpio	imx219.c	/^	struct gpio_desc *xclr_gpio;$/;"	m	struct:imx219	typeref:struct:imx219::gpio_desc	file:
xfer_begin	i2c-algo-pcf.h	/^	void (*xfer_begin) (void *data);$/;"	m	struct:i2c_algo_pcf_data
xfer_end	i2c-algo-pcf.h	/^	void (*xfer_end) (void *data);$/;"	m	struct:i2c_algo_pcf_data
xfer_func	v4l2-dv-timings.h	/^	enum v4l2_xfer_func xfer_func;$/;"	m	struct:v4l2_hdmi_colorimetry	typeref:enum:v4l2_hdmi_colorimetry::v4l2_xfer_func
xfer_func	videodev2.h	/^	__u32			xfer_func;	\/* enum v4l2_xfer_func *\/$/;"	m	struct:v4l2_pix_format
xfer_func	videodev2.h	/^	__u8				xfer_func;$/;"	m	struct:v4l2_pix_format_mplane
xfer_list	cec.h	/^	struct list_head	xfer_list;$/;"	m	struct:cec_fh	typeref:struct:cec_fh::list_head
xfer_list	cec.h	/^	struct list_head xfer_list;$/;"	m	struct:cec_data	typeref:struct:cec_data::list_head
ycbcr_enc	v4l2-dv-timings.h	/^	enum v4l2_ycbcr_encoding ycbcr_enc;$/;"	m	struct:v4l2_hdmi_colorimetry	typeref:enum:v4l2_hdmi_colorimetry::v4l2_ycbcr_encoding
ycbcr_enc	videodev2.h	/^		__u32			ycbcr_enc;$/;"	m	union:v4l2_pix_format::__anon48
ycbcr_enc	videodev2.h	/^		__u8				ycbcr_enc;$/;"	m	union:v4l2_pix_format_mplane::__anon66
zorro_device_id	mod_devicetable.h	/^struct zorro_device_id {$/;"	s
zpos	vsp1.h	/^	unsigned int zpos;$/;"	m	struct:vsp1_du_atomic_config
